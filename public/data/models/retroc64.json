{
  "appName": "Retro C64",
  "data-path": [
    "data"
  ],
  "templates file": "",
  "theme": "c64",
  "dimensions": [
    800,
    600
  ],
  "library files": [
    "app-constants",
    "scene-controller"
  ],
  "DESIGNER'S JOURNAL": {
    "Design Notes": {
      "Oct 17 2021": [
        "Application data created."
      ]
    },
    "Testing": {},
    "Next Steps": []
  },
  "enums": [],
  "fileHandle": "retroc64",
  "appHandle": "RetroC64",
  "appConstants": [],
  "Design Notes": [
    {
      "title": "Setup",
      "order": -9999,
      "content": "Initial project setup; includes the creation of any utility classes.",
      "children": [
        {
          "title": "Font preload",
          "order": 1,
          "content": "The game font will be preloaded in the Scene Controller.",
          "children": [],
          "design": [
            {
              "classUid": "kuvp9k2j3kwh9rvfmqg",
              "tags": [
                "code",
                "preload"
              ],
              "code": "// load the theme fonts\nthis.load.bitmapFont(\"[theme-font-import]\", \"/phaser/assets/font/[theme-font-import].png\", \"/phaser/assets/font/[theme-font-import].xml\");",
              "order": "1",
              "uid": "kuyta8lswz88dhzxx6"
            }
          ],
          "uid": "kuyt7k0mxm2fe9zrcim"
        },
        {
          "title": "First Scene",
          "order": 2,
          "content": "The First Scene displayed will be the Akalabeth Character Creation Scene.  This is done in the Scene Controller 'create' method. A line will be added assigning the initial state. It will be the LAST line in the 'create' method.",
          "children": [],
          "design": [
            {
              "tags": [
                "create",
                "code"
              ],
              "uid": "kvmfoeauo3hd62y9eio",
              "classUid": "kuvp9k2j3kwh9rvfmqg",
              "code": "\n// set current scene\n_switch(RetroC64Constants.AKALABETH_CHARACTER_CREATION);",
              "order": "9999"
            }
          ],
          "uid": "kvmfngnc6ratuomocgi"
        },
        {
          "title": "Config File Imports",
          "order": 3,
          "content": "The Config file will import the following classes:\n\n* Akalabeth Controller\n* Akalabeth World",
          "children": [],
          "design": [
            {
              "classUid": "argaehaehsrj4q34ewby",
              "importHandle": "RetroC64AkalabethWorld",
              "importPath": "../bus/akalabeth/retroc64-akalabeth-world",
              "tags": [
                "code",
                "required import"
              ],
              "uid": "kw1661971dvpylokcg5"
            },
            {
              "classUid": "argaehaehsrj4q34ewby",
              "importHandle": "RetroC64AkalabethController",
              "importPath": "../services/akalabeth/retroc64-akalabeth-controller",
              "tags": [
                "code",
                "required import"
              ],
              "uid": "kw166foggekxrxq29vj"
            }
          ],
          "uid": "kw163wywifbhbsdk1vf"
        }
      ],
      "design": [
        {
          "tags": [
            "class",
            "scene-controller"
          ],
          "classHandle": "SceneController",
          "fileHandle": "scene-controller",
          "weight": 0,
          "uid": "kuvp9k2j3kwh9rvfmqg"
        },
        {
          "tags": [
            "class",
            "app-constants"
          ],
          "classHandle": "Constants",
          "fileHandle": "constants",
          "weight": 0,
          "uid": "kuvp9k2jit3fzra9nj9"
        },
        {
          "tags": [
            "class",
            "game"
          ],
          "classHandle": "Game",
          "fileHandle": "game",
          "uid": "AF89DG9sgahg9"
        },
        {
          "tags": [
            "class",
            "app-config"
          ],
          "classHandle": "Config",
          "fileHandle": "config",
          "uid": "argaehaehsrj4q34ewby"
        }
      ],
      "uid": "kuvp9k2jsxw5ctspqrc"
    },
    {
      "title": "Akalabeth",
      "order": 1,
      "content": "The implementation of the game Akalabeth: World of Doom using the source code.",
      "children": [
        {
          "title": "Akalabeth Game Objects",
          "order": 1,
          "content": "There will be several unique game objects required for the game.",
          "children": [
            {
              "title": "Akalabeth Controller",
              "order": 1,
              "content": "A singleton Controller class will be created to track global variables and instances.",
              "children": [
                {
                  "title": "The Akalabeth Controller Class",
                  "order": 1,
                  "content": "A new class will be defined using the 'singleton' template.",
                  "children": [],
                  "design": [
                    {
                      "classTitle": "Akalabeth Controller",
                      "classHandle": "AkalabethController",
                      "fileHandle": "akalabeth-controller",
                      "tags": [
                        "class",
                        "singleton"
                      ],
                      "classDefinition": "A singleton Controller class will be created to track global variables and instances.",
                      "weight": "1",
                      "uid": "kv8dmif2xlmo0uad7vs",
                      "filePath": [
                        "services",
                        "akalabeth"
                      ]
                    }
                  ],
                  "uid": "kv8dmif2wkkpvf86mi8"
                },
                {
                  "title": "File Imports",
                  "order": 2,
                  "content": "The Akalabeth Controller class will require the following imports:",
                  "children": [],
                  "design": [
                    {
                      "classUid": "kv8dmif2xlmo0uad7vs",
                      "importHandle": "RetroC64AkalabethCharacter",
                      "importPath": "../../bus/akalabeth/retroc64-akalabeth-character",
                      "tags": [
                        "code",
                        "required import"
                      ],
                      "uid": "kv8dzcrd20j5hfya1mt"
                    }
                  ],
                  "uid": "kv8dmif23qjeh3md9tx"
                },
                {
                  "title": "Private Fields",
                  "order": 3,
                  "content": "The Akalabeth Controller class will have the following private fields:",
                  "children": [
                    {
                      "title": "Lucky Number",
                      "order": 1,
                      "content": "The player's lucky number.",
                      "children": [],
                      "design": [
                        {
                          "classUid": "kv8dmif2xlmo0uad7vs",
                          "tags": [
                            "code",
                            "private field"
                          ],
                          "fieldName": "_luckyNumber",
                          "fieldType": "int",
                          "fieldValue": "0",
                          "fieldDefinition": "The player's lucky number.",
                          "order": "1",
                          "uid": "kv8e1g98i5k1m22jw5c"
                        },
                        {
                          "classUid": "kv8dmif2xlmo0uad7vs",
                          "tags": [
                            "code",
                            "public getter property"
                          ],
                          "propertyName": "luckyNumber",
                          "getterDefinition": "/**\n * Getter for field _luckyNumber.\n * @returns {Number}\n */",
                          "getterBody": "return _luckyNumber;",
                          "order": "1",
                          "uid": "kv8e1g989bag4iql409"
                        },
                        {
                          "classUid": "kv8dmif2xlmo0uad7vs",
                          "tags": [
                            "code",
                            "public setter property"
                          ],
                          "propertyName": "luckyNumber",
                          "setterDefinition": "/**\n * Setter for field _luckyNumber.\n * @param {PropertyKey} value the value\n */",
                          "setterBody": "if (isNaN(parseInt(value))) {\n  throw [\"Invalid value\", value];\n}\n_luckyNumber = parseInt(value);",
                          "order": "1",
                          "uid": "kv8e1g99r1v84ri5vla"
                        }
                      ],
                      "uid": "kv8e1g97vgi3s4fr5v"
                    },
                    {
                      "title": "Level of Play",
                      "order": 2,
                      "content": "The chosen level of play.",
                      "children": [],
                      "design": [
                        {
                          "classUid": "kv8dmif2xlmo0uad7vs",
                          "tags": [
                            "code",
                            "private field"
                          ],
                          "fieldName": "_levelOfPlay",
                          "fieldType": "int",
                          "fieldValue": "0",
                          "fieldDefinition": "The chosen level of play.",
                          "order": "2",
                          "uid": "kv8e2ngxj1p88ujwijk"
                        },
                        {
                          "classUid": "kv8dmif2xlmo0uad7vs",
                          "tags": [
                            "code",
                            "public getter property"
                          ],
                          "propertyName": "levelOfPlay",
                          "getterDefinition": "/**\n * Getter for field _levelOfPlay.\n * @returns {Number}\n */",
                          "getterBody": "return _levelOfPlay;",
                          "order": "2",
                          "uid": "kv8e2ngxz0flbuji3h"
                        },
                        {
                          "classUid": "kv8dmif2xlmo0uad7vs",
                          "tags": [
                            "code",
                            "public setter property"
                          ],
                          "propertyName": "levelOfPlay",
                          "setterDefinition": "/**\n * Setter for field _levelOfPlay.\n * @param {PropertyKey} value the value\n */",
                          "setterBody": "if (isNaN(parseInt(value))) {\n  throw [\"Invalid value\", value];\n}\n_levelOfPlay = parseInt(value);",
                          "order": "2",
                          "uid": "kv8e2ngxwj7ux7he7rh"
                        }
                      ],
                      "uid": "kv8e2ngwwqvzhxmuuo"
                    },
                    {
                      "title": "Player Character",
                      "order": 3,
                      "content": "The player character instance.",
                      "children": [],
                      "design": [
                        {
                          "classUid": "kv8dmif2xlmo0uad7vs",
                          "tags": [
                            "code",
                            "private field"
                          ],
                          "fieldName": "_character",
                          "fieldType": "RetroC64AkalabethCharacter",
                          "fieldValue": "new RetroC64AkalabethCharacter()",
                          "fieldDefinition": "The player character instance.",
                          "order": "3",
                          "uid": "kv8etxsze0e782e5w4n"
                        },
                        {
                          "classUid": "kv8dmif2xlmo0uad7vs",
                          "tags": [
                            "code",
                            "public getter property"
                          ],
                          "propertyName": "character",
                          "getterDefinition": "/**\n * Getter for field _character.\n * @returns {Object}\n */",
                          "getterBody": "return _character;",
                          "order": "3",
                          "uid": "kv8etxszjrc6x2x0tya"
                        }
                      ],
                      "uid": "kv8etxsy9jrtb29gexd"
                    },
                    {
                      "title": "The World",
                      "order": 4,
                      "content": "The game world instance.",
                      "children": [],
                      "design": [
                        {
                          "classUid": "kv8dmif2xlmo0uad7vs",
                          "tags": [
                            "code",
                            "private field"
                          ],
                          "fieldName": "_world",
                          "fieldType": "RetroC64AkalabethWorld",
                          "fieldValue": "null",
                          "fieldDefinition": "The game world instance.",
                          "order": "4",
                          "uid": "kvb3rz6oyn9d53rnegd"
                        },
                        {
                          "classUid": "kv8dmif2xlmo0uad7vs",
                          "tags": [
                            "code",
                            "public getter property"
                          ],
                          "propertyName": "world",
                          "getterDefinition": "/**\n * Getter for field _world.\n * @returns {Object}\n */",
                          "getterBody": "if (_world === null) {\n  _world = new this.WorldClass();\n}\nreturn _world;",
                          "order": "4",
                          "uid": "kvb3rz6ou6h8rz5p8w"
                        }
                      ],
                      "uid": "kvb3rz6n2sltkzuz5rf"
                    },
                    {
                      "title": "Pause On",
                      "order": 5,
                      "content": "A flag to verify if the PAUSE is on is available.",
                      "children": [],
                      "design": [
                        {
                          "classUid": "kv8dmif2xlmo0uad7vs",
                          "tags": [
                            "code",
                            "private field"
                          ],
                          "fieldName": "_pauseOn",
                          "fieldType": "boolean",
                          "fieldValue": "false",
                          "fieldDefinition": "A flag to verify if the PAUSE is on is available.",
                          "order": "5",
                          "uid": "kvr7pqfj4boorv8fh1v"
                        },
                        {
                          "classUid": "kv8dmif2xlmo0uad7vs",
                          "tags": [
                            "code",
                            "public getter/setter property"
                          ],
                          "propertyName": "pauseOn",
                          "getterDefinition": "/**\n * Getter for field _pauseOn.\n * @returns {Object}\n */",
                          "getterBody": "return _pauseOn;",
                          "setterDefinition": "/**\n * Setter for field _pauseOn.\n * @param {PropertyKey} value the value\n */",
                          "setterBody": "if (typeof(value) !== \"boolean\") {\n  throw [\"Invalid value\", value];\n}\n_pauseOn = value;",
                          "order": "5",
                          "uid": "kvr7pqfkk2c072yvl5"
                        }
                      ],
                      "uid": "kvr7pqfj55d8l8jj6h4"
                    },
                    {
                      "title": "Monsters",
                      "order": 6,
                      "content": "The hardcoded list of monsters.",
                      "children": [],
                      "design": [
                        {
                          "tags": [
                            "private field",
                            "code"
                          ],
                          "uid": "kvslxc1xw7v91wv7nv",
                          "classUid": "kv8dmif2xlmo0uad7vs",
                          "fieldName": "_monsters",
                          "fieldType": "array",
                          "fieldValue": "[\n  {\n    name: \"SKELETON\"\n  },\n  {\n    name: \"THIEF\"\n  },\n  {\n    name: \"GIANT RAT\"\n  },\n  {\n    name: \"ORC\"\n  },\n  {\n    name: \"VIPER\"\n  },\n  {\n    name: \"CARRION CRAWLER\"\n  },\n  {\n    name: \"GREMLIN\"\n  },\n  {\n    name: \"MIMIC\"\n  },\n  {\n    name: \"DAEMON\"\n  },\n  {\n    name: \"BALROG\"\n  },\n]",
                          "fieldDefinition": "The hardcoded list of monsters.",
                          "order": "6"
                        },
                        {
                          "classUid": "kv8dmif2xlmo0uad7vs",
                          "tags": [
                            "code",
                            "public getter property"
                          ],
                          "propertyName": "monsters",
                          "getterDefinition": "/**\n * Getter for field _monsters.\n * @returns {Object}\n */",
                          "getterBody": "return _monsters;",
                          "order": "6",
                          "uid": "kvslxc1x7u2qixhkbfm"
                        }
                      ],
                      "uid": "kvslxc1wuxgs4mzzkka"
                    },
                    {
                      "title": "Levels Underground",
                      "order": 7,
                      "content": "The current number of Levels Underground the character is.",
                      "children": [],
                      "design": [
                        {
                          "classUid": "kv8dmif2xlmo0uad7vs",
                          "tags": [
                            "code",
                            "private field"
                          ],
                          "fieldName": "_levelsUnderground",
                          "fieldType": "int",
                          "fieldValue": "0",
                          "fieldDefinition": "The current number of Levels Underground the character is.",
                          "order": "7",
                          "uid": "kvtxpomr9sevtq9hls"
                        },
                        {
                          "classUid": "kv8dmif2xlmo0uad7vs",
                          "tags": [
                            "code",
                            "public getter/setter property"
                          ],
                          "propertyName": "levelsUnderground",
                          "getterDefinition": "/**\n * Getter for field _levelsUnderground.\n * @returns {Number}\n */",
                          "getterBody": "return _levelsUnderground;",
                          "setterDefinition": "/**\n * Setter for field _levelsUnderground.\n * @param {PropertyKey} value the value\n */",
                          "setterBody": "if (isNaN(parseInt(value))) {\n  throw [\"Invalid value\", value];\n}\n_levelsUnderground = value;",
                          "order": "7",
                          "uid": "kvtxpomsfc4255ig0f"
                        }
                      ],
                      "uid": "kvtxpomqogvei8q532"
                    }
                  ],
                  "design": [],
                  "uid": "kv8dmif2u82ypqtqaal"
                },
                {
                  "title": "Public Members",
                  "order": 4,
                  "content": "The Akalabeth Controller class will have the following public members:",
                  "children": [],
                  "design": [],
                  "uid": "kv8dmif29we9nuo0d17"
                }
              ],
              "design": [],
              "uid": "kv8dmif2e5651vhbb3r"
            },
            {
              "title": "The Player Character",
              "order": 2,
              "content": "A class to represent the game character will be added using the 'prototype' template.",
              "children": [
                {
                  "title": "The Akalabeth Character Class",
                  "order": 1,
                  "content": "A new class will be defined using the 'prototype' template.",
                  "children": [],
                  "design": [
                    {
                      "classTitle": "Akalabeth Character",
                      "classHandle": "AkalabethCharacter",
                      "fileHandle": "akalabeth-character",
                      "tags": [
                        "class",
                        "prototype"
                      ],
                      "classDefinition": "A class to represent the game character will be added using the 'prototype' template.",
                      "weight": "1",
                      "uid": "kv8bv95oamp0qanlmok",
                      "filePath": [
                        "bus",
                        "akalabeth"
                      ]
                    },
                    {
                      "classUid": "kv8bv95oamp0qanlmok",
                      "tags": [
                        "code",
                        "constructor body"
                      ],
                      "code": "Watchable.apply(this);",
                      "order": 9999,
                      "uid": "kv8bv95o9iq7uvyqp4"
                    },
                    {
                      "classUid": "kv8bv95oamp0qanlmok",
                      "tags": [
                        "code",
                        "inheritance"
                      ],
                      "classInheritance": "Watchable",
                      "order": 9999,
                      "uid": "kv8bv95ofla83r5wyw"
                    }
                  ],
                  "uid": "kv8bv95odoidbhkjfak"
                },
                {
                  "title": "File Imports",
                  "order": 2,
                  "content": "The Akalabeth Character class will require the following imports:",
                  "children": [],
                  "design": [
                    {
                      "classUid": "kv8bv95oamp0qanlmok",
                      "importHandle": "RetroC64AkalabethEquipmentItem",
                      "importPath": "./retroc64-akalabeth-equipment-item",
                      "tags": [
                        "code",
                        "required import"
                      ],
                      "uid": "kv8i0q8ct4ety1f0mtg"
                    },
                    {
                      "classUid": "kv8bv95oamp0qanlmok",
                      "importHandle": "Watchable",
                      "importPath": "../../../../../../../lib/RPGBase-NodeJS/src/bus/watchable",
                      "tags": [
                        "code",
                        "required import"
                      ],
                      "uid": "kw11ly2916l5rpe7m2n"
                    }
                  ],
                  "uid": "kv8bv95o147sthmh5w0p"
                },
                {
                  "title": "Private Fields",
                  "order": 3,
                  "content": "The Akalabeth Character class will have the following private fields:",
                  "children": [
                    {
                      "title": "Hit Points",
                      "order": 1,
                      "content": "The player's hit points",
                      "children": [],
                      "design": [
                        {
                          "classUid": "kv8bv95oamp0qanlmok",
                          "tags": [
                            "code",
                            "private field"
                          ],
                          "fieldName": "_hitPoints",
                          "fieldType": "int",
                          "fieldValue": "0",
                          "fieldDefinition": "The player's hit points",
                          "order": "1",
                          "uid": "kv8c25tpmqe22j1m4v"
                        },
                        {
                          "classUid": "kv8bv95oamp0qanlmok",
                          "tags": [
                            "code",
                            "public getter/setter property"
                          ],
                          "propertyName": "hitPoints",
                          "getterDefinition": "/**\n * Getter for field _hitPoints.\n * @returns {Number}\n */",
                          "getterBody": "return this._hitPoints;",
                          "setterDefinition": "/**\n * Setter for field _hitPoints.\n * @param {PropertyKey} value the value\n */",
                          "setterBody": "if (isNaN(parseInt(value))) {\n  throw [\"Invalid value\", value];\n}\nthis._hitPoints = value;\nthis.notifyWatchers(this);",
                          "order": "1",
                          "uid": "kv8c25tpqfhruebsdd"
                        }
                      ],
                      "uid": "kv8c25to0a6t147lr5qu"
                    },
                    {
                      "title": "Strength",
                      "order": 2,
                      "content": "The player's strength.",
                      "children": [],
                      "design": [
                        {
                          "classUid": "kv8bv95oamp0qanlmok",
                          "tags": [
                            "code",
                            "private field"
                          ],
                          "fieldName": "_strength",
                          "fieldType": "int",
                          "fieldValue": "0",
                          "fieldDefinition": "The player's strength.",
                          "order": "2",
                          "uid": "kv8cdvmefjjlbxlfaxr"
                        },
                        {
                          "classUid": "kv8bv95oamp0qanlmok",
                          "tags": [
                            "code",
                            "public getter/setter property"
                          ],
                          "propertyName": "strength",
                          "getterDefinition": "/**\n * Getter for field _strength.\n * @returns {Number}\n */",
                          "getterBody": "return this._strength;",
                          "setterDefinition": "/**\n * Setter for field _strength.\n * @param {PropertyKey} value the value\n */",
                          "setterBody": "if (isNaN(parseInt(value))) {\n  throw [\"Invalid value\", value];\n}\nthis._strength = value;\nthis.notifyWatchers(this);",
                          "order": "2",
                          "uid": "kv8cdvmfmerbot0hd1"
                        }
                      ],
                      "uid": "kv8cdvmdta84q528wml"
                    },
                    {
                      "title": "Dexterity",
                      "order": 3,
                      "content": "The player's dexterity.",
                      "children": [],
                      "design": [
                        {
                          "classUid": "kv8bv95oamp0qanlmok",
                          "tags": [
                            "code",
                            "private field"
                          ],
                          "fieldName": "_dexterity",
                          "fieldType": "int",
                          "fieldValue": "0",
                          "fieldDefinition": "The player's dexterity.",
                          "order": "3",
                          "uid": "kv8cf2xaovcgr84udgo"
                        },
                        {
                          "classUid": "kv8bv95oamp0qanlmok",
                          "tags": [
                            "code",
                            "public getter/setter property"
                          ],
                          "propertyName": "dexterity",
                          "getterDefinition": "/**\n * Getter for field _dexterity.\n * @returns {Number}\n */",
                          "getterBody": "return this._dexterity;",
                          "setterDefinition": "/**\n * Setter for field _dexterity.\n * @param {PropertyKey} value the value\n */",
                          "setterBody": "if (isNaN(parseInt(value))) {\n  throw [\"Invalid value\", value];\n}\nthis._dexterity = value;\nthis.notifyWatchers(this);",
                          "order": "3",
                          "uid": "kv8cf2xa4m4l3pbolxc"
                        }
                      ],
                      "uid": "kv8cf2xasb493vxxt4m"
                    },
                    {
                      "title": "Stamina",
                      "order": 4,
                      "content": "The player's stamina.",
                      "children": [],
                      "design": [
                        {
                          "classUid": "kv8bv95oamp0qanlmok",
                          "tags": [
                            "code",
                            "private field"
                          ],
                          "fieldName": "_stamina",
                          "fieldType": "int",
                          "fieldValue": "0",
                          "fieldDefinition": "The player's stamina.",
                          "order": "4",
                          "uid": "kv8cimmdj8l1k8wtp4"
                        },
                        {
                          "classUid": "kv8bv95oamp0qanlmok",
                          "tags": [
                            "code",
                            "public getter/setter property"
                          ],
                          "propertyName": "stamina",
                          "getterDefinition": "/**\n * Getter for field int.\n * @returns {Object}\n */",
                          "getterBody": "return this._stamina;",
                          "setterDefinition": "/**\n * Setter for field int.\n * @param {PropertyKey} value the value\n */",
                          "setterBody": "if (isNaN(parseInt(value))) {\n  throw [\"Invalid value\", value];\n}\nthis._stamina = value;\nthis.notifyWatchers(this);",
                          "order": "4",
                          "uid": "kv8cimmdjnyq03xrpbh"
                        }
                      ],
                      "uid": "kv8cimmdrd736uo0tpf"
                    },
                    {
                      "title": "Wisdom",
                      "order": 5,
                      "content": "The player's wisdom.",
                      "children": [],
                      "design": [
                        {
                          "classUid": "kv8bv95oamp0qanlmok",
                          "tags": [
                            "code",
                            "private field"
                          ],
                          "fieldName": "_wisdom",
                          "fieldType": "int",
                          "fieldValue": "0",
                          "fieldDefinition": "The player's wisdom.",
                          "order": "5",
                          "uid": "kv8cjy5c8gjo5gknt4o"
                        },
                        {
                          "classUid": "kv8bv95oamp0qanlmok",
                          "tags": [
                            "code",
                            "public getter/setter property"
                          ],
                          "propertyName": "wisdom",
                          "getterDefinition": "/**\n * Getter for field _wisdom.\n * @returns {Number}\n */",
                          "getterBody": "return this._wisdom;",
                          "setterDefinition": "/**\n * Setter for field _wisdom.\n * @param {PropertyKey} value the value\n */",
                          "setterBody": "if (isNaN(parseInt(value))) {\n  throw [\"Invalid value\", value];\n}\nthis._wisdom = value;\nthis.notifyWatchers(this);",
                          "order": "5",
                          "uid": "kv8cjy5ctplodugrw"
                        }
                      ],
                      "uid": "kv8cjy5bh607m2evkhm"
                    },
                    {
                      "title": "Gold",
                      "order": 6,
                      "content": "The player's gold.",
                      "children": [],
                      "design": [
                        {
                          "classUid": "kv8bv95oamp0qanlmok",
                          "tags": [
                            "code",
                            "private field"
                          ],
                          "fieldName": "_gold",
                          "fieldType": "int",
                          "fieldValue": "0",
                          "fieldDefinition": "The player's gold.",
                          "order": "6",
                          "uid": "kv8ckl5ym5be7xwwgze"
                        },
                        {
                          "classUid": "kv8bv95oamp0qanlmok",
                          "tags": [
                            "code",
                            "public getter/setter property"
                          ],
                          "propertyName": "gold",
                          "getterDefinition": "/**\n * Getter for field _gold.\n * @returns {Number}\n */",
                          "getterBody": "return this._gold;",
                          "setterDefinition": "/**\n * Setter for field _gold.\n * @param {PropertyKey} value the value\n */",
                          "setterBody": "if (isNaN(parseInt(value))) {\n  throw [\"Invalid value\", value];\n}\nthis._gold = value;\nthis.notifyWatchers(this);",
                          "order": "6",
                          "uid": "kv8ckl5yvn8tcibsaz"
                        }
                      ],
                      "uid": "kv8ckl5y3xmcwwtjylk"
                    },
                    {
                      "title": "Class",
                      "order": 7,
                      "content": "The player's class (Fighter or Mage).",
                      "children": [],
                      "design": [
                        {
                          "classUid": "kv8bv95oamp0qanlmok",
                          "tags": [
                            "code",
                            "private field"
                          ],
                          "fieldName": "_class",
                          "fieldType": "string",
                          "fieldValue": "\"\"",
                          "fieldDefinition": "The player's class (Fighter or Mage).",
                          "order": "7",
                          "uid": "kv8cy7px2cgbhv7r7jf"
                        },
                        {
                          "classUid": "kv8bv95oamp0qanlmok",
                          "tags": [
                            "code",
                            "public getter/setter property"
                          ],
                          "propertyName": "class",
                          "getterDefinition": "/**\n * Getter for field _class.\n * @returns {String}\n */",
                          "getterBody": "return this._class;",
                          "setterDefinition": "/**\n * Setter for field _class.\n * @param {PropertyKey} value the value\n */",
                          "setterBody": "if (typeof(value) !== \"string\" && !(value instanceof String)) {\n  throw [\"Invalid value\", value];\n}\nthis._class = value;\nthis.notifyWatchers(this);",
                          "order": "7",
                          "uid": "kv8cy7pxv1g7i89cnsf"
                        }
                      ],
                      "uid": "kv8cy7pwovp6zr64m3"
                    },
                    {
                      "title": "Inventory",
                      "order": 8,
                      "content": "The player's inventory.",
                      "children": [],
                      "design": [
                        {
                          "classUid": "kv8bv95oamp0qanlmok",
                          "tags": [
                            "code",
                            "private field"
                          ],
                          "fieldName": "_inventory",
                          "fieldType": "object",
                          "fieldValue": "{}",
                          "fieldDefinition": "The player's inventory.",
                          "order": "8",
                          "uid": "kv8i2s57p9k95hc0qls"
                        }
                      ],
                      "uid": "kv8i2s57e61l0vzyjhq"
                    },
                    {
                      "title": "Name",
                      "order": 9,
                      "content": "The player's name.",
                      "children": [],
                      "design": [
                        {
                          "classUid": "kv8bv95oamp0qanlmok",
                          "tags": [
                            "code",
                            "private field"
                          ],
                          "fieldName": "_name",
                          "fieldType": "string",
                          "fieldValue": "\"\"",
                          "fieldDefinition": "The player's name.",
                          "order": "9",
                          "uid": "kvjh8iegrw2xg9ecldq"
                        },
                        {
                          "classUid": "kv8bv95oamp0qanlmok",
                          "tags": [
                            "code",
                            "public getter/setter property"
                          ],
                          "propertyName": "name",
                          "getterDefinition": "/**\n * Getter for field _name.\n * @returns {String}\n */",
                          "getterBody": "return this._name;",
                          "setterDefinition": "/**\n * Setter for field _name.\n * @param {PropertyKey} value the value\n */",
                          "setterBody": "if (typeof(value) !== \"string\" && !(value instanceof String)) {\n  throw [\"Invalid value\", value];\n}\nthis._name = value;\nthis.notifyWatchers(this);",
                          "order": "9",
                          "uid": "kvjh8ieg33xp4y11gxw"
                        }
                      ],
                      "uid": "kvjh8ief9w4w2k9vq0m"
                    },
                    {
                      "title": "Task",
                      "order": 10,
                      "content": "The player's current task from Lord British will be tracked.",
                      "children": [],
                      "design": [
                        {
                          "classUid": "kv8bv95oamp0qanlmok",
                          "tags": [
                            "code",
                            "private field"
                          ],
                          "fieldName": "_task",
                          "fieldType": "int",
                          "fieldValue": "0",
                          "fieldDefinition": "The player's current task from Lord British will be tracked.",
                          "order": "10",
                          "uid": "kvs5da0s68zvgssnapg"
                        },
                        {
                          "classUid": "kv8bv95oamp0qanlmok",
                          "tags": [
                            "code",
                            "public getter/setter property"
                          ],
                          "propertyName": "task",
                          "getterDefinition": "/**\n * Getter for field _task.\n * @returns {Number}\n */",
                          "getterBody": "return this._task;",
                          "setterDefinition": "/**\n * Setter for field _task.\n * @param {PropertyKey} value the value\n */",
                          "setterBody": "if (isNaN(parseInt(value))) {\n  throw [\"Invalid value\", value];\n}\nthis._task = value;\nthis.notifyWatchers(this);",
                          "order": "10",
                          "uid": "kvs5da0shyzmltkyn0w"
                        }
                      ],
                      "uid": "kvs5da0r838ck4vltby"
                    }
                  ],
                  "design": [],
                  "uid": "kv8bv95o6qk17g9qy1o"
                },
                {
                  "title": "Public Members",
                  "order": 4,
                  "content": "The Akalabeth Character class will have the following public members:",
                  "children": [],
                  "design": [
                    {
                      "tags": [
                        "public member",
                        "code"
                      ],
                      "uid": "kv8cw79zm9ln67fweo",
                      "classUid": "kv8bv95oamp0qanlmok",
                      "memberName": "newCharacter",
                      "memberDefinition": "/**\n * Resets the character's attributes.\n */",
                      "arguments": "",
                      "code": "this._hitPoints = Math.floor(Math.sqrt(Math.random()) * 21 + 4);\nthis._strength = Math.floor(Math.sqrt(Math.random()) * 21 + 4);\nthis._dexterity = Math.floor(Math.sqrt(Math.random()) * 21 + 4);\nthis._stamina = Math.floor(Math.sqrt(Math.random()) * 21 + 4);\nthis._wisdom = Math.floor(Math.sqrt(Math.random()) * 21 + 4);\nthis._gold = Math.floor(Math.sqrt(Math.random()) * 21 + 4);\nthis._class = \"\";\nthis._name = \"\";\nthis._task = 0;\nthis._inventory = {};\nthis.notifyWatchers(this);",
                      "order": "1"
                    },
                    {
                      "classUid": "kv8bv95oamp0qanlmok",
                      "tags": [
                        "code",
                        "public member"
                      ],
                      "memberName": "getNumberInInventory",
                      "memberDefinition": "/**\n * Gets the number of an item the character has in their inventory.\n * @param {string} name the item's name\n * @returns {Number}\n */",
                      "arguments": "name",
                      "code": "let num = 0;\nif (this._inventory.hasOwnProperty(name)) {\n  num = this._inventory[name].count;\n}\nreturn num;",
                      "order": "2",
                      "uid": "kv8i6p0yb30qkvcchga"
                    },
                    {
                      "classUid": "kv8bv95oamp0qanlmok",
                      "tags": [
                        "code",
                        "public member"
                      ],
                      "memberName": "addToInventory",
                      "memberDefinition": "/**\n * Adds an item to inventory.\n * @param {object} item the item being added\n */",
                      "arguments": "item",
                      "code": "if (typeof(item.name) === \"undefined\"\n    || typeof(item.count) === \"undefined\") {\n  throw [\"Invalid item\", item];\n}\nif (!this._inventory.hasOwnProperty(item.name)) {\n  this._inventory[item.name] = new RetroC64AkalabethEquipmentItem();\n  this._inventory[item.name].name = item.name;\n}\nthis._inventory[item.name].count += item.count;\nthis.notifyWatchers(this);",
                      "order": "3",
                      "uid": "kv8ibcn4edzdo62dqim"
                    }
                  ],
                  "uid": "kv8bv95oplez6ltgusf"
                },
                {
                  "title": "Unit Testing",
                  "order": 5,
                  "content": "Unit testing for class AkalabethCharacter.",
                  "children": [
                    {
                      "title": "File Imports",
                      "order": 1,
                      "content": "The Akalabeth Character Test class will require the following imports:",
                      "children": [],
                      "design": [],
                      "uid": "kw23pt61ut1cxtezsuc"
                    },
                    {
                      "title": "Before All",
                      "order": 2,
                      "content": "The Akalabeth Character Test class will require the following setup before all testing begins:",
                      "children": [],
                      "design": [],
                      "uid": "kw23pt61unbwhu3u7bd"
                    },
                    {
                      "title": "Before Each",
                      "order": 3,
                      "content": "The Akalabeth Character Test class will require the following setup before each individual test runs:",
                      "children": [],
                      "design": [],
                      "uid": "kw23pt61mjqqvhte0o"
                    },
                    {
                      "title": "Unit Tests",
                      "order": 4,
                      "content": "The following unit tests for class AkalabethCharacter will exist:",
                      "children": [],
                      "design": [],
                      "uid": "kw23pt61yjkyhlgfkj8"
                    }
                  ],
                  "design": [
                    {
                      "classTitle": "Akalabeth Character Test",
                      "classHandle": "AkalabethCharacterTest",
                      "fileHandle": "akalabeth-character.test",
                      "tags": [
                        "class",
                        "prototype test"
                      ],
                      "classDefinition": "Unit testing for class AkalabethCharacter.",
                      "weight": 1,
                      "uid": "kw23pt61msip3ll3fai",
                      "filePath": [
                        "bus",
                        "akalabeth"
                      ]
                    }
                  ],
                  "uid": "kw23pt5zcnsu5sl5io8"
                }
              ],
              "design": [],
              "uid": "kv8bv95o5twy2rrtvln",
              "unitTestingPercentage": 0
            },
            {
              "title": "Equipment Items",
              "order": 3,
              "content": "A class to represent equipment items will be added using the 'prototype' template.",
              "children": [
                {
                  "title": "The Akalabeth Equipment Item Class",
                  "order": 1,
                  "content": "A new class will be defined using the 'prototype' template.",
                  "children": [],
                  "design": [
                    {
                      "classTitle": "Akalabeth Equipment Item",
                      "classHandle": "AkalabethEquipmentItem",
                      "fileHandle": "akalabeth-equipment-item",
                      "tags": [
                        "class",
                        "prototype"
                      ],
                      "classDefinition": "A class to represent equipment items will be added using the 'prototype' template.",
                      "weight": "1",
                      "uid": "kv8ezhl9hitmbw0fsbc",
                      "filePath": [
                        "bus",
                        "akalabeth"
                      ]
                    },
                    {
                      "classUid": "kv8ezhl9hitmbw0fsbc",
                      "tags": [
                        "code",
                        "constructor body"
                      ],
                      "code": "Watchable.apply(this);",
                      "order": 9999,
                      "uid": "kv8ezhl9d7xvgmg9uzc"
                    },
                    {
                      "classUid": "kv8ezhl9hitmbw0fsbc",
                      "tags": [
                        "code",
                        "inheritance"
                      ],
                      "classInheritance": "Watchable",
                      "order": 9999,
                      "uid": "kv8ezhl97ylpgcmmpai"
                    }
                  ],
                  "uid": "kv8ezhl9xx5mnpehrq"
                },
                {
                  "title": "File Imports",
                  "order": 2,
                  "content": "The Akalabeth Equipment Item class will require the following imports:",
                  "children": [],
                  "design": [
                    {
                      "classUid": "kv8ezhl9hitmbw0fsbc",
                      "importHandle": "Watchable",
                      "importPath": "../../../../../../../lib/RPGBase-NodeJS/src/bus/watchable",
                      "tags": [
                        "code",
                        "required import"
                      ],
                      "uid": "kw11jlb4wlqt23gh4m"
                    }
                  ],
                  "uid": "kv8ezhl97yrzgpn707j"
                },
                {
                  "title": "Private Fields",
                  "order": 3,
                  "content": "The Akalabeth Equipment Item class will have the following private fields:",
                  "children": [
                    {
                      "title": "Name",
                      "order": 1,
                      "content": "The item's name.",
                      "children": [],
                      "design": [
                        {
                          "classUid": "kv8ezhl9hitmbw0fsbc",
                          "tags": [
                            "code",
                            "private field"
                          ],
                          "fieldName": "_name",
                          "fieldType": "",
                          "fieldValue": "\"\"",
                          "fieldDefinition": "The item's name.",
                          "order": "1",
                          "uid": "kv8f0pxzer6mv7tacc"
                        },
                        {
                          "classUid": "kv8ezhl9hitmbw0fsbc",
                          "tags": [
                            "code",
                            "public getter/setter property"
                          ],
                          "propertyName": "name",
                          "getterDefinition": "/**\n * Getter for field _name.\n * @returns {Object}\n */",
                          "getterBody": "return this._name;",
                          "setterDefinition": "/**\n * Setter for field _name.\n * @param {PropertyKey} value the value\n */",
                          "setterBody": "this._name = value;\nthis.notifyWatchers(this);",
                          "order": "1",
                          "uid": "kv8f0py05ero58ba4vv"
                        }
                      ],
                      "uid": "kv8f0pxzgkzfas42kv7"
                    },
                    {
                      "title": "Item Count",
                      "order": 2,
                      "content": "The # of items in a stack",
                      "children": [],
                      "design": [
                        {
                          "classUid": "kv8ezhl9hitmbw0fsbc",
                          "tags": [
                            "code",
                            "private field"
                          ],
                          "fieldName": "_count",
                          "fieldType": "int",
                          "fieldValue": "0",
                          "fieldDefinition": "The # of items in a stack",
                          "order": "2",
                          "uid": "kv8f1p4n5ztdfbg1ron"
                        },
                        {
                          "classUid": "kv8ezhl9hitmbw0fsbc",
                          "tags": [
                            "code",
                            "public getter/setter property"
                          ],
                          "propertyName": "count",
                          "getterDefinition": "/**\n * Getter for field _count.\n * @returns {Number}\n */",
                          "getterBody": "return this._count;",
                          "setterDefinition": "/**\n * Setter for field _count.\n * @param {PropertyKey} value the value\n */",
                          "setterBody": "if (isNaN(parseInt(value))) {\n  throw [\"Invalid value\", value];\n}\nthis._count = value;\nif (this._count < 0) {\n  this._count = 0;\n}\nthis.notifyWatchers(this);",
                          "order": "2",
                          "uid": "kv8f1p4n8dtzajyyxuw"
                        }
                      ],
                      "uid": "kv8f1p4nf3e0u8pqu3t"
                    }
                  ],
                  "design": [],
                  "uid": "kv8ezhl9658qtx2zu9h"
                },
                {
                  "title": "Public Members",
                  "order": 4,
                  "content": "The Akalabeth Equipment Item class will have the following public members:",
                  "children": [],
                  "design": [],
                  "uid": "kv8ezhl90mz7t13uxhp"
                }
              ],
              "design": [],
              "uid": "kv8ezhl8r8534xesvwr"
            },
            {
              "title": "The World",
              "order": 4,
              "content": "A class to represent the game world will be created using the 'prototype' template.",
              "children": [
                {
                  "title": "The Akalabeth World Class",
                  "order": 1,
                  "content": "A new class will be defined using the 'prototype' template.",
                  "children": [],
                  "design": [
                    {
                      "classTitle": "Akalabeth World",
                      "classHandle": "AkalabethWorld",
                      "fileHandle": "akalabeth-world",
                      "tags": [
                        "class",
                        "prototype"
                      ],
                      "classDefinition": "A class to represent the game world will be created using the 'prototype' template.",
                      "weight": "1",
                      "uid": "kvawexbw6imjj26ek5c",
                      "filePath": [
                        "bus",
                        "akalabeth"
                      ]
                    },
                    {
                      "classUid": "kvawexbw6imjj26ek5c",
                      "tags": [
                        "code",
                        "constructor body"
                      ],
                      "code": "Watchable.apply(this);",
                      "order": 9999,
                      "uid": "kvawexbwqjajkbb9xmp"
                    },
                    {
                      "classUid": "kvawexbw6imjj26ek5c",
                      "tags": [
                        "code",
                        "inheritance"
                      ],
                      "classInheritance": "Watchable",
                      "order": 9999,
                      "uid": "kvawexbw2sgvf4wqxsb"
                    }
                  ],
                  "uid": "kvawexbwhx3ulbjd3f5"
                },
                {
                  "title": "File Imports",
                  "order": 2,
                  "content": "The Akalabeth World class will require the following imports:",
                  "children": [],
                  "design": [
                    {
                      "classUid": "kvawexbw6imjj26ek5c",
                      "importHandle": "RetroC64Constants",
                      "importPath": "../../config/retroc64-constants",
                      "tags": [
                        "code",
                        "required import"
                      ],
                      "uid": "kvwomjv9zaafw2r6ymb"
                    },
                    {
                      "classUid": "kvawexbw6imjj26ek5c",
                      "importHandle": "RetroC64AkalabethMonsterData",
                      "importPath": "./retroc64-akalabeth-monster-data",
                      "tags": [
                        "code",
                        "required import"
                      ],
                      "uid": "kvwonjl8cd2jml12rkk"
                    },
                    {
                      "classUid": "kvawexbw6imjj26ek5c",
                      "importHandle": "Watchable",
                      "importPath": "../../../../../../../lib/RPGBase-NodeJS/src/bus/watchable",
                      "tags": [
                        "code",
                        "required import"
                      ],
                      "uid": "kw10lfnstop2n4vjv1"
                    },
                    {
                      "classUid": "kvawexbw6imjj26ek5c",
                      "importHandle": "Dice",
                      "importPath": "../../../../../../../lib/RPGBase-NodeJS/src/services/dice",
                      "tags": [
                        "code",
                        "required import"
                      ],
                      "uid": "kw10rxcrqckzcjzpvs"
                    },
                    {
                      "classUid": "argaehaehsrj4q34ewby",
                      "className": "RetroC64AkalabethWorld",
                      "requiredSymbol": "AkalabethController",
                      "requiredClass": "RetroC64AkalabethController",
                      "tags": [
                        "code",
                        "prototype requires"
                      ],
                      "uid": "kw15zu6kg0u4f4xh4oo"
                    },
                    {
                      "classUid": "argaehaehsrj4q34ewby",
                      "className": "RetroC64AkalabethController",
                      "requiredSymbol": "WorldClass",
                      "requiredClass": "RetroC64AkalabethWorld",
                      "tags": [
                        "code",
                        "singleton requires"
                      ],
                      "uid": "kw16new79oo0gsyknrw"
                    }
                  ],
                  "uid": "kvawexbwgkoyrw0eqil"
                },
                {
                  "title": "Private Fields",
                  "order": 3,
                  "content": "The Akalabeth World class will have the following private fields:",
                  "children": [
                    {
                      "title": "World Terrain",
                      "order": 1,
                      "content": "The world's terrain is kept in a 21x21 array.",
                      "children": [],
                      "design": [
                        {
                          "tags": [
                            "private field",
                            "code"
                          ],
                          "uid": "kva19ndw419b413qovu",
                          "classUid": "kvawexbw6imjj26ek5c",
                          "fieldName": "_terrain",
                          "fieldType": "array",
                          "fieldValue": "[]",
                          "fieldDefinition": "a 21x21 array containing the world terrain.",
                          "order": "1"
                        },
                        {
                          "classUid": "kvawexbw6imjj26ek5c",
                          "tags": [
                            "code",
                            "public getter property"
                          ],
                          "propertyName": "terrain",
                          "getterDefinition": "/**\n * Getter for field _terrain.\n * @returns {Object}\n */",
                          "getterBody": "return this._terrain;",
                          "order": "1",
                          "uid": "kva19ndyk7s820lidbo"
                        }
                      ],
                      "uid": "kva19ndwq40k0qar32i"
                    },
                    {
                      "title": "Player X",
                      "order": 2,
                      "content": "The player's x-position.",
                      "children": [],
                      "design": [
                        {
                          "classUid": "kvawexbw6imjj26ek5c",
                          "tags": [
                            "code",
                            "private field"
                          ],
                          "fieldName": "_playerX",
                          "fieldType": "int",
                          "fieldValue": "0",
                          "fieldDefinition": "the player's x-position",
                          "order": "2",
                          "uid": "kvawtnc7oksgv5ugi9"
                        },
                        {
                          "classUid": "kvawexbw6imjj26ek5c",
                          "tags": [
                            "code",
                            "public getter/setter property"
                          ],
                          "propertyName": "playerX",
                          "getterDefinition": "/**\n * Getter for field _playerX.\n * @returns {Number}\n */",
                          "getterBody": "return this._playerX;",
                          "setterDefinition": "/**\n * Setter for field _playerX.\n * @param {PropertyKey} value the value\n */",
                          "setterBody": "if (isNaN(parseInt(value))) {\n  throw [\"Invalid value\", value];\n}\nthis._playerX = value;\nthis.notifyWatchers(this);",
                          "order": "2",
                          "uid": "kvawtnc8oirobbnqikt"
                        }
                      ],
                      "uid": "kvawtnc7qfmoxipf8h"
                    },
                    {
                      "title": "Player Y",
                      "order": 3,
                      "content": "The player's t-position",
                      "children": [],
                      "design": [
                        {
                          "classUid": "kvawexbw6imjj26ek5c",
                          "tags": [
                            "code",
                            "private field"
                          ],
                          "fieldName": "_playerY",
                          "fieldType": "int",
                          "fieldValue": "0",
                          "fieldDefinition": "the player's y-position",
                          "order": "3",
                          "uid": "kvawsz2dm2ek4bpjyyf"
                        },
                        {
                          "classUid": "kvawexbw6imjj26ek5c",
                          "tags": [
                            "code",
                            "public getter/setter property"
                          ],
                          "propertyName": "playerY",
                          "getterDefinition": "/**\n * Getter for field _playerY.\n * @returns {Number}\n */",
                          "getterBody": "return this._playerY;",
                          "setterDefinition": "/**\n * Setter for field _playerY.\n * @param {PropertyKey} value the value\n */",
                          "setterBody": "if (isNaN(parseInt(value))) {\n  throw [\"Invalid value\", value];\n}\nthis._playerY = value;\nthis.notifyWatchers(this);",
                          "order": "3",
                          "uid": "kvawsz2dmlsb3bwobqn"
                        }
                      ],
                      "uid": "kvawsz2cynlvugayuw8"
                    },
                    {
                      "title": "XX%",
                      "order": 4,
                      "content": "placeholder",
                      "children": [],
                      "design": [
                        {
                          "classUid": "kvawexbw6imjj26ek5c",
                          "tags": [
                            "code",
                            "private field"
                          ],
                          "fieldName": "_xx",
                          "fieldType": "array",
                          "fieldValue": "[]",
                          "fieldDefinition": "placeholder",
                          "order": "4",
                          "uid": "kvawyswibdmm86m7hut"
                        },
                        {
                          "classUid": "kvawexbw6imjj26ek5c",
                          "tags": [
                            "code",
                            "public getter property"
                          ],
                          "propertyName": "xx",
                          "getterDefinition": "/**\n * Getter for field _xx.\n * @returns {Object}\n */",
                          "getterBody": "return this._xx;",
                          "order": "4",
                          "uid": "kvawyswi53ornmff9ob"
                        }
                      ],
                      "uid": "kvawyswhozxuemyo8p"
                    },
                    {
                      "title": "YY%",
                      "order": 5,
                      "content": "place",
                      "children": [],
                      "design": [
                        {
                          "classUid": "kvawexbw6imjj26ek5c",
                          "tags": [
                            "code",
                            "private field"
                          ],
                          "fieldName": "_yy",
                          "fieldType": "array",
                          "fieldValue": "[]",
                          "fieldDefinition": "place",
                          "order": "5",
                          "uid": "kvawzf9j628se5ll5eu"
                        },
                        {
                          "classUid": "kvawexbw6imjj26ek5c",
                          "tags": [
                            "code",
                            "public getter property"
                          ],
                          "propertyName": "yy",
                          "getterDefinition": "/**\n * Getter for field _yy.\n * @returns {Object}\n */",
                          "getterBody": "return this._yy;",
                          "order": "5",
                          "uid": "kvawzf9j0p3r1sgyauq"
                        }
                      ],
                      "uid": "kvawzf9jwzejsal8ks"
                    },
                    {
                      "title": "PER%",
                      "order": 6,
                      "content": "place",
                      "children": [],
                      "design": [
                        {
                          "classUid": "kvawexbw6imjj26ek5c",
                          "tags": [
                            "code",
                            "private field"
                          ],
                          "fieldName": "_per",
                          "fieldType": "array",
                          "fieldValue": "[]",
                          "fieldDefinition": "place",
                          "order": "6",
                          "uid": "kvax9hyukppzcxbpc3"
                        },
                        {
                          "classUid": "kvawexbw6imjj26ek5c",
                          "tags": [
                            "code",
                            "public getter property"
                          ],
                          "propertyName": "per",
                          "getterDefinition": "/**\n * Getter for field _per.\n * @returns {Object}\n */",
                          "getterBody": "return this._per;",
                          "order": "6",
                          "uid": "kvax9hyvortvaw8jvta"
                        }
                      ],
                      "uid": "kvax9hyubh58r7f071a"
                    },
                    {
                      "title": "LD%",
                      "order": 7,
                      "content": "place",
                      "children": [],
                      "design": [
                        {
                          "classUid": "kvawexbw6imjj26ek5c",
                          "tags": [
                            "code",
                            "private field"
                          ],
                          "fieldName": "_ld",
                          "fieldType": "array",
                          "fieldValue": "[]",
                          "fieldDefinition": "place",
                          "order": "7",
                          "uid": "kvaxv9k12mtpb6zjbhn"
                        },
                        {
                          "classUid": "kvawexbw6imjj26ek5c",
                          "tags": [
                            "code",
                            "public getter property"
                          ],
                          "propertyName": "ld",
                          "getterDefinition": "/**\n * Getter for field _ld.\n * @returns {Object}\n */",
                          "getterBody": "return this._ld;",
                          "order": "7",
                          "uid": "kvaxv9k1q598db8t0d"
                        }
                      ],
                      "uid": "kvaxv9k04ps66f0p5e"
                    },
                    {
                      "title": "CD%",
                      "order": 8,
                      "content": "place",
                      "children": [],
                      "design": [
                        {
                          "classUid": "kvawexbw6imjj26ek5c",
                          "tags": [
                            "code",
                            "private field"
                          ],
                          "fieldName": "_cd",
                          "fieldType": "array",
                          "fieldValue": "[]",
                          "fieldDefinition": "place",
                          "order": "8",
                          "uid": "kvaxw4m6fyaugwpzw6v"
                        },
                        {
                          "classUid": "kvawexbw6imjj26ek5c",
                          "tags": [
                            "code",
                            "public getter property"
                          ],
                          "propertyName": "cd",
                          "getterDefinition": "/**\n * Getter for field _cd.\n * @returns {Object}\n */",
                          "getterBody": "return this._cd;",
                          "order": "8",
                          "uid": "kvaxw4m6r85smrijlin"
                        }
                      ],
                      "uid": "kvaxw4m67g2t6jxgxp7"
                    },
                    {
                      "title": "FT%",
                      "order": 9,
                      "content": "placew",
                      "children": [],
                      "design": [
                        {
                          "classUid": "kvawexbw6imjj26ek5c",
                          "tags": [
                            "code",
                            "private field"
                          ],
                          "fieldName": "_ft",
                          "fieldType": "array",
                          "fieldValue": "[]",
                          "fieldDefinition": "placew",
                          "order": "9",
                          "uid": "kvaxwudcox1rjor1dp"
                        },
                        {
                          "classUid": "kvawexbw6imjj26ek5c",
                          "tags": [
                            "code",
                            "public getter property"
                          ],
                          "propertyName": "ft",
                          "getterDefinition": "/**\n * Getter for field _ft.\n * @returns {Object}\n */",
                          "getterBody": "return this._ft;",
                          "order": "9",
                          "uid": "kvaxwudcf1gmpel8xsi"
                        }
                      ],
                      "uid": "kvaxwudbyny67ud19nm"
                    },
                    {
                      "title": "LAD%",
                      "order": 10,
                      "content": "place",
                      "children": [],
                      "design": [
                        {
                          "classUid": "kvawexbw6imjj26ek5c",
                          "tags": [
                            "code",
                            "private field"
                          ],
                          "fieldName": "_lad",
                          "fieldType": "array",
                          "fieldValue": "[]",
                          "fieldDefinition": "place",
                          "order": "10",
                          "uid": "kvaxxhy8iu4v6qerr"
                        },
                        {
                          "classUid": "kvawexbw6imjj26ek5c",
                          "tags": [
                            "code",
                            "public getter property"
                          ],
                          "propertyName": "lad",
                          "getterDefinition": "/**\n * Getter for field _lad.\n * @returns {Object}\n */",
                          "getterBody": "return this._lad;",
                          "order": "10",
                          "uid": "kvaxxhy89xto5wlqufa"
                        }
                      ],
                      "uid": "kvaxxhy8ddp90qhp5hq"
                    },
                    {
                      "title": "DNG%",
                      "order": 11,
                      "content": "The Dungeon level",
                      "children": [],
                      "design": [
                        {
                          "classUid": "kvawexbw6imjj26ek5c",
                          "tags": [
                            "code",
                            "private field"
                          ],
                          "fieldName": "_dungeonLevel",
                          "fieldType": "array",
                          "fieldValue": "[]",
                          "fieldDefinition": "The Dungeon level",
                          "order": "11",
                          "uid": "kvu0xt6hs0l6segalw"
                        },
                        {
                          "classUid": "kvawexbw6imjj26ek5c",
                          "tags": [
                            "code",
                            "public getter/setter property"
                          ],
                          "propertyName": "dungeonLevel",
                          "getterDefinition": "/**\n * Getter for field _dungeonLevel.\n * @returns {Object}\n */",
                          "getterBody": "return this._dungeonLevel;",
                          "setterDefinition": "/**\n * Setter for field _dungeonLevel.\n * @param {PropertyKey} value the value\n */",
                          "setterBody": "this._dungeonLevel = value;",
                          "order": "11",
                          "uid": "kvu0xt6ioi4oumc652b"
                        }
                      ],
                      "uid": "kvu0xt6ghla8nskihmi"
                    },
                    {
                      "title": "Monsters",
                      "order": 12,
                      "content": "The list of monsters generated for the dungeon level.",
                      "children": [],
                      "design": [
                        {
                          "classUid": "kvawexbw6imjj26ek5c",
                          "tags": [
                            "code",
                            "private field"
                          ],
                          "fieldName": "_monsters",
                          "fieldType": "array",
                          "fieldValue": "[]",
                          "fieldDefinition": "The list of monsters generated for the dungeon level.",
                          "order": "12",
                          "uid": "kvu5sl1digu6oaamw1e"
                        },
                        {
                          "classUid": "kvawexbw6imjj26ek5c",
                          "tags": [
                            "code",
                            "public getter/setter property"
                          ],
                          "propertyName": "monsters",
                          "getterDefinition": "/**\n * Getter for field _monsters.\n * @returns {Object}\n */",
                          "getterBody": "return this._monsters;",
                          "setterDefinition": "/**\n * Setter for field _monsters.\n * @param {PropertyKey} value the value\n */",
                          "setterBody": "this._monsters = value;",
                          "order": "12",
                          "uid": "kvu5sl1excla1bsbhzq"
                        }
                      ],
                      "uid": "kvu5sl1b292kxgcoslk"
                    },
                    {
                      "title": "PX",
                      "order": 14,
                      "content": "PX field",
                      "children": [],
                      "design": [
                        {
                          "classUid": "kvawexbw6imjj26ek5c",
                          "tags": [
                            "code",
                            "private field"
                          ],
                          "fieldName": "_px",
                          "fieldType": "int",
                          "fieldValue": "0",
                          "fieldDefinition": "PX field",
                          "order": "14",
                          "uid": "kvu63de41wewzit858g"
                        },
                        {
                          "classUid": "kvawexbw6imjj26ek5c",
                          "tags": [
                            "code",
                            "public getter/setter property"
                          ],
                          "propertyName": "px",
                          "getterDefinition": "/**\n * Getter for field _px.\n * @returns {Number}\n */",
                          "getterBody": "return this._px;",
                          "setterDefinition": "/**\n * Setter for field _px.\n * @param {PropertyKey} value the value\n */",
                          "setterBody": "if (isNaN(parseInt(value))) {\n  throw [\"Invalid value\", value];\n}\nthis._px = value;",
                          "order": "14",
                          "uid": "kvu63de46840eiaux9o"
                        }
                      ],
                      "uid": "kvu63de16xv0in7c94t"
                    },
                    {
                      "title": "PY",
                      "order": 15,
                      "content": "the PY field",
                      "children": [],
                      "design": [
                        {
                          "classUid": "kvawexbw6imjj26ek5c",
                          "tags": [
                            "code",
                            "private field"
                          ],
                          "fieldName": "_py",
                          "fieldType": "int",
                          "fieldValue": "0",
                          "fieldDefinition": "the PY field",
                          "order": "15",
                          "uid": "kvu6411nlqogvqblqvc"
                        },
                        {
                          "classUid": "kvawexbw6imjj26ek5c",
                          "tags": [
                            "code",
                            "public getter/setter property"
                          ],
                          "propertyName": "py",
                          "getterDefinition": "/**\n * Getter for field _py.\n * @returns {Number}\n */",
                          "getterBody": "return this._py;",
                          "setterDefinition": "/**\n * Setter for field _py.\n * @param {PropertyKey} value the value\n */",
                          "setterBody": "if (isNaN(parseInt(value))) {\n  throw [\"Invalid value\", value];\n}\nthis._py = value;",
                          "order": "15",
                          "uid": "kvu6411nxig5gunf3t"
                        }
                      ],
                      "uid": "kvu6411mms7y1jj050e"
                    },
                    {
                      "title": "DX",
                      "order": 16,
                      "content": "The DX field",
                      "children": [],
                      "design": [
                        {
                          "classUid": "kvawexbw6imjj26ek5c",
                          "tags": [
                            "code",
                            "private field"
                          ],
                          "fieldName": "_dx",
                          "fieldType": "int",
                          "fieldValue": "1",
                          "fieldDefinition": "The DX field",
                          "order": "16",
                          "uid": "kvwhup23aw60gigqhjg"
                        },
                        {
                          "classUid": "kvawexbw6imjj26ek5c",
                          "tags": [
                            "code",
                            "public getter/setter property"
                          ],
                          "propertyName": "dx",
                          "getterDefinition": "/**\n * Getter for field _dx.\n * @returns {Number}\n */",
                          "getterBody": "return this._dx;",
                          "setterDefinition": "/**\n * Setter for field _dx.\n * @param {PropertyKey} value the value\n */",
                          "setterBody": "if (isNaN(parseInt(value))) {\n  throw [\"Invalid value\", value];\n}\nthis._dx = value;",
                          "order": "16",
                          "uid": "kvwhup24usv4pmw2dob"
                        }
                      ],
                      "uid": "kvwhup23u1iq6qude1j"
                    },
                    {
                      "title": "DY",
                      "order": 17,
                      "content": "The DY field",
                      "children": [],
                      "design": [
                        {
                          "classUid": "kvawexbw6imjj26ek5c",
                          "tags": [
                            "code",
                            "private field"
                          ],
                          "fieldName": "_dy",
                          "fieldType": "int",
                          "fieldValue": "0",
                          "fieldDefinition": "The DY field",
                          "order": "17",
                          "uid": "kvwhvdot92eisbh7jhq"
                        },
                        {
                          "classUid": "kvawexbw6imjj26ek5c",
                          "tags": [
                            "code",
                            "public getter/setter property"
                          ],
                          "propertyName": "dy",
                          "getterDefinition": "/**\n * Getter for field _dy.\n * @returns {Number}\n */",
                          "getterBody": "return this._dy;",
                          "setterDefinition": "/**\n * Setter for field _dy.\n * @param {PropertyKey} value the value\n */",
                          "setterBody": "if (isNaN(parseInt(value))) {\n  throw [\"Invalid value\", value];\n}\nthis._dy = value;",
                          "order": "17",
                          "uid": "kvwhvdotuq1u0qmbjxr"
                        }
                      ],
                      "uid": "kvwhvdosrqwi6txc1wr"
                    }
                  ],
                  "design": [],
                  "uid": "kvawexbwvfxlq2kx0an"
                },
                {
                  "title": "Public Members",
                  "order": 4,
                  "content": "The Akalabeth World class will have the following public members:",
                  "children": [
                    {
                      "title": "New World",
                      "order": 1,
                      "content": "The game world will be procedurally-generated.",
                      "children": [],
                      "design": [
                        {
                          "tags": [
                            "public member",
                            "code"
                          ],
                          "uid": "kvwik300gl8fz13vxck",
                          "classUid": "kvawexbw6imjj26ek5c",
                          "memberName": "newWorld",
                          "memberDefinition": "/**\n * Procedurally-generates a new world.\n */",
                          "arguments": "",
                          "code": "// reset the this._terrain array - fill a 21x21 array with 0s\nthis._terrain.length = 0;\nfor (let row = 20; row >= 0; row--) {\n  let r = [];\n  for (let col = 20; col >= 0; col--) {\n    r.push(0);\n  }\n  this._terrain.push(r);\n}\n// fill the borders with 1s\nfor (let i = 0; i <= 20; i++) {\n  this._terrain[i][0] = 1;\n  this._terrain[0][i] = 1;\n  this._terrain[i][20] = 1;\n  this._terrain[20][i] = 1;\n}\n// randomly fill the interior\nfor (let row = 19; row >= 1; row--) {\n  for (let col = 19; col >= 1; col--) {\n    let rand = Math.floor(Math.random() ** 5 * 4.5);\n    while (rand > 4) {\n      rand = Math.floor(Math.random() ** 5 * 4.5);\n    }\n    this._terrain[row][col] = rand;\n    if (this._terrain[row][col] === 3 && Math.random() > 0.5) {\n      this._terrain[row][col] = 0;\n    }\n  }\n}\n// randomly position Lord British's castle\nthis._terrain[Dice.rollDie(19)][Dice.rollDie(19)] = 5;\n\ndo { // randomly position the player between 1,1 and 19,19, but re-assign if player lands on the castle\n  this._playerX = Dice.rollDie(19);\n  this._playerY = Dice.rollDie(19);\n} while (this._terrain[this._playerY][this._playerX] === 5);\n\n// put a shop at the player's location\nthis._terrain[this._playerY][this._playerX] = 3;\n\n// reset the this._xx and this._yy arrays\nthis._xx.length = 0;\nthis._yy.length = 0;\nfor (let i = 10; i >= 0; i--) {\n  this._xx.push(0);\n  this._yy.push(0);\n}\nthis._xx[0] = 139;\nthis._yy[0] = 79;\n\n// reset the this._per array\nthis._per.length = 0;\nfor (let i = 10; i >= 0; i--) {\n  let r = [];\n  for (let j = 3; j >= 0; j--) {\n    r.push(0);\n  }\n  this._per.push(r);\n}\n// fill the this._xx, this._yy, and this._per arrays with random values\nfor (let i = 2; i <= 20; i += 2) {\n  this._xx[i / 2] = Math.floor(Math.atan(1 / i) / Math.atan(1) * 140 + .5);\n  this._yy[i / 2] = Math.floor(this._xx[i / 2] * 4 / 7);\n  this._per[i / 2][0] = 139 - this._xx[i / 2];\n  this._per[i / 2][1] = 139 + this._xx[i / 2];\n  this._per[i / 2][2] = 79 - this._yy[i / 2];\n  this._per[i / 2][3] = 79 + this._yy[i / 2];\n}\nthis._per[0][0] = 0;\nthis._per[0][1] = 279;\nthis._per[0][2] = 0;\nthis._per[0][3] = 159;\n\n// reset the this._cd array\nthis._cd.length = 0;\nfor (let i = 10; i >= 0; i--) {\n  let r = [];\n  for (let j = 3; j >= 0; j--) {\n    r.push(0);\n  }\n  this._cd.push(r);\n}\n// fill the this._cd arrays with values\nfor (let i = 1; i <= 10; i++) {\n  this._cd[i][0] = 139 - this._xx[i] / 3;\n  this._cd[i][1] = 139 + this._xx[i] / 3;\n  this._cd[i][2] = 79 - this._yy[i] * .7;\n  this._cd[i][3] = 79 + this._yy[i];\n}\n\n// reset the this._ld array\nthis._ld.length = 0;\nfor (let i = 10; i >= 0; i--) {\n  let r = [];\n  for (let j = 5; j >= 0; j--) {\n    r.push(0);\n  }\n  this._ld.push(r);\n}\n// fill the this._ld arrays with values\nfor (let i = 0; i <= 9; i++) {\n  this._ld[i][0] = (this._per[i][0] * 2 + this._per[i + 1][0]) / 3;\n  this._ld[i][1] = (this._per[i][0] + 2 * this._per[i + 1][0]) / 3;\n\n  let w = this._ld[i][0] - this._per[i][0];\n  this._ld[i][2] = this._per[i][2] + w * 4 / 7;\n  this._ld[i][3] = this._per[i][2] + 2 * w * 4 / 7;\n\n  this._ld[i][4] = (this._per[i][3] * 2 + this._per[i + 1][3]) / 3;\n  this._ld[i][5] = (this._per[i][3] + 2 * this._per[i + 1][3]) / 3;\n  this._ld[i][2] = this._ld[i][4] - (this._ld[i][4] - this._ld[i][2]) * .8;\n  this._ld[i][3] = this._ld[i][5] - (this._ld[i][5] - this._ld[i][3]) * .8;\n  if (this._ld[i][3] === this._ld[i][4]) {\n    this._ld[i][3] = this._ld[i][3] - 1;\n  } \n}\n\n// reset the this._ft array\nthis._ft.length = 0;\nfor (let i = 10; i >= 0; i--) {\n  let r = [];\n  for (let j = 5; j >= 0; j--) {\n    r.push(0);\n  }\n  this._ft.push(r);\n}\n// fill the this._ft arrays with values\nfor (let i = 0; i <= 9; i++) {\n  this._ft[i][0] = 139 - this._xx[i] / 3;\n  this._ft[i][1] = 139 + this._xx[i] / 3;\n  this._ft[i][2] = 139 - this._xx[i + 1] / 3;\n  this._ft[i][3] = 139 + this._xx[i + 1] / 3;\n  this._ft[i][4] = 79 + (this._yy[i] * 2 + this._yy[i + 1]) / 3;\n  this._ft[i][5] = 79 + (this._yy[i] + 2 * this._yy[i + 1]) / 3;\n}\n\n// reset the this._lad array\nthis._lad.length = 0;\nfor (let i = 10; i >= 0; i--) {\n  let r = [];\n  for (let j = 3; j >= 0; j--) {\n    r.push(0);\n  }\n  this._lad.push(r);\n}\n// fill the this._lad arrays with values\nfor (let i = 0; i <= 9; i++) {\n  this._lad[i][0] = (this._ft[i][0] * 2 + this._ft[i][1]) / 3;\n  this._lad[i][1] = (this._ft[i][0] + 2 * this._ft[i][1]) / 3;\n  this._lad[i][3] = this._ft[i][4];\n  this._lad[i][2] = 159 - this._lad[i][3];\n}",
                          "order": "1"
                        }
                      ],
                      "uid": "kvwik2zztkaminrp3cj"
                    },
                    {
                      "title": "New Dungeon Level",
                      "order": 2,
                      "content": "Dungeon levels will be procedurally-generated.",
                      "children": [],
                      "design": [
                        {
                          "tags": [
                            "public member",
                            "code"
                          ],
                          "uid": "kvwilut988jlr6avh3i",
                          "classUid": "kvawexbw6imjj26ek5c",
                          "memberName": "newDungeonLevel",
                          "memberDefinition": "/**\n * Procedurally-generates a dungeon level.\n */",
                          "arguments": "",
                          "code": "this._dungeonLevel.length = 0;\n// the dungeon level will be a 11x11 array filled with 0s\nfor(let x = 0; x <= 10; x++) {\n  let r = [];\n  for(let y = 0; y <= 10; y++) {\n    r.push(0);\n  }\n  this._dungeonLevel.push(r);\n}\n\n// fill the edges with 1s (0,0 - 0,10 and then 10,0 - 10,10, as well as the sides)\nfor (let x = 0; x <= 10; x++) {\n  this._dungeonLevel[x][0] = 1;\n  this._dungeonLevel[x][10] = 1;\n  this._dungeonLevel[0][x] = 1;\n  this._dungeonLevel[10][x] = 1;\n}\n\n// set walls at fixed locations\nfor (let x = 2; x <= 8; x += 2) {\n  for (let y = 1; y <= 9; y++) {\n    this._dungeonLevel[x][y] = 1;\n    this._dungeonLevel[y][x] = 1;\n  }\n}\nfor (let X = 2; X <= 8; X += 2) {\n  for (let Y = 1; Y <= 9; Y += 2) {\n    if (Math.random() > .95) {\n      this._dungeonLevel[X][Y] = 2;\n    }\n    if (Math.random() > .95) {\n      this._dungeonLevel[Y][X] = 2;\n    }\n    if (Math.random() > .6) {\n      this._dungeonLevel[Y][X] = 3;\n    }\n    if (Math.random() > .6) {\n      this._dungeonLevel[X][Y] = 3;\n    }\n    if (Math.random() > .6) {\n      this._dungeonLevel[X][Y] = 4;\n    }\n    if (Math.random() > .6) {\n      this._dungeonLevel[Y][X] = 4;\n    }\n    if (Math.random() > .97) {\n      this._dungeonLevel[Y][X] = 9;\n    }\n    if (Math.random() > .97) {\n      this._dungeonLevel[X][Y] = 9;\n    }\n    if (Math.random() > .94) {\n      this._dungeonLevel[X][Y] = 5;\n    }\n    if (Math.random() > .94) {\n      this._dungeonLevel[Y][X] = 5;\n    }\n  }\n}\nthis._dungeonLevel[2][1] = 0;\nif (this.AkalabethController.levelsUnderground % 2 ===  0) { // place on even levels\n  this._dungeonLevel[7][3] = 7;\n  this._dungeonLevel[3][7] = 8;\n} else { // place on odd levels\n  this._dungeonLevel[7][3] = 8;\n  this._dungeonLevel[3][7] = 7;\n}\nif (this.AkalabethController.levelsUnderground === 1) { // place on 1st level\n  this._dungeonLevel[1][1] = 8;\n  this._dungeonLevel[7][3] = 0;\n}\nthis.generateMonsters();",
                          "order": "2"
                        }
                      ],
                      "uid": "kvwilut94lvqz9uek1"
                    },
                    {
                      "title": "Generate Monsters",
                      "order": 3,
                      "content": "A public member for generating monsters on a dungeon level.",
                      "children": [],
                      "design": [
                        {
                          "tags": [
                            "public member",
                            "code"
                          ],
                          "uid": "kvwin2ha0sbv1ce2e17o",
                          "classUid": "kvawexbw6imjj26ek5c",
                          "memberName": "generateMonsters",
                          "memberDefinition": "/**\n * Generates monsters for a dungeon level.\n */",
                          "arguments": "",
                          "code": "this._monsters.length = 0;\nfor (let i = 9; i >= 0; i--) {\n  let monsterData = new RetroC64AkalabethMonsterData();\n  monsterData.type = i;\n  monsterData.hitPoints = i + 4 + RetroC64AkalabethController.levelsUnderground;\n  if (i - 1 > RetroC64AkalabethController.levelsUnderground\n      || Math.random() > .4) {\n    // if the monster type is 3 levels above the dungeon level it won't appear.\n    // there is also a 60% chance a monster won't be placed\n    continue;\n  }\n  let passed = false;\n  do {\n    // place the monster in a random interior location\n    monsterData.x = Dice.rollDie(9);\n    monsterData.y = Dice.rollDie(9);\n    // re-roll if the position isn't empty, or is the player's spot\n  } while (this._dungeonLevel[monsterData.y][monsterData.x] !== 0 || monsterData.x == this._px || monsterData.y == this._py);\n  // mark the monster's position \n  this._dungeonLevel[monsterData.y][monsterData.x] = monsterData.type * 10;\n  // change the calculation for hit points (why?)\n  monsterData.hitPoints = i * 2 + RetroC64AkalabethController.levelsUnderground * 2 * RetroC64AkalabethController.levelOfPlay;\n}",
                          "order": "3"
                        }
                      ],
                      "uid": "kvwin2h947sjvwnqiu"
                    }
                  ],
                  "design": [],
                  "uid": "kvawexbw66b69b927hd"
                },
                {
                  "title": "Unit Testing",
                  "order": 5,
                  "content": "Unit testing for class AkalabethWorld.",
                  "children": [
                    {
                      "title": "File Imports",
                      "order": 1,
                      "content": "The Akalabeth World Test class will require the following imports:",
                      "children": [],
                      "design": [
                        {
                          "classUid": "kw0t23hwu9yyznjuaoq",
                          "importHandle": "RetroC64AkalabethWorld",
                          "importPath": "../../../src/bus/akalabeth/retroc64-akalabeth-world",
                          "tags": [
                            "code",
                            "required import"
                          ],
                          "uid": "kw10mdf6h9wgz9h9euc"
                        },
                        {
                          "classUid": "kw0t23hwu9yyznjuaoq",
                          "importHandle": "RetroC64Config",
                          "importPath": "../../../src/config/retroc64-config",
                          "tags": [
                            "code",
                            "required import"
                          ],
                          "uid": "kw16yn1wwlzkvzwuaof"
                        }
                      ],
                      "uid": "kw0t23hwiuocxd0l9sr"
                    },
                    {
                      "title": "Before All",
                      "order": 2,
                      "content": "The Akalabeth World Test class will require the following setup before all testing begins:",
                      "children": [],
                      "design": [
                        {
                          "classUid": "kw0t23hwu9yyznjuaoq",
                          "code": "RetroC64Config.init();",
                          "tags": [
                            "code",
                            "before all"
                          ],
                          "order": "1",
                          "uid": "kw17691spqyfwlv54y"
                        }
                      ],
                      "uid": "kw0t23hw58a8b7h98qi"
                    },
                    {
                      "title": "Before Each",
                      "order": 3,
                      "content": "The Akalabeth World Test class will require the following setup before each individual test runs:",
                      "children": [],
                      "design": [],
                      "uid": "kw0t23hworv5h9tmta"
                    },
                    {
                      "title": "Unit Tests",
                      "order": 4,
                      "content": "The following unit tests for class AkalabethWorld will exist:",
                      "children": [
                        {
                          "title": "New World",
                          "order": 1,
                          "content": "Unit Testing for newWorld",
                          "children": [],
                          "design": [
                            {
                              "tags": [
                                "unit test",
                                "code"
                              ],
                              "uid": "kw0v6aiekl24rv3oc8c",
                              "classUid": "kw0t23hwu9yyznjuaoq",
                              "testHeader": "NEW WORLD",
                              "testDefinition": "Creating a new World generates a castle, several dungeons and towns.",
                              "arguments": "",
                              "code": "// given\nlet world = new RetroC64AkalabethWorld();\n\n// when\nfor (let c = runs; c > 0; c--) {\n  world.newWorld();\n  let towns = [],  dungeons = [], castle;\n  for (let i = world.terrain.length - 1; i >= 0; i--) {\n    let row = world.terrain[i];\n    for (let j = row.length - 1; j >= 0; j--) {\n      if (row[j] === 3) {\n        towns.push([i, j]);\n      } else if (row[j] === 4) {\n        dungeons.push([i, j]);\n      } else if (row[j] === 5) {\n        castle = [i, j];\n      }\n    }\n  }\n  // each town should have at least one side clear for entry\n  let check = [\n    [0, 1], // EAST\n    [0, -1], // WEST\n    [1, 0], // SOUTH\n    [-1, 0] // NORTH\n  ];\n  // check that all towns have at least one reachable side\n  for (let i = towns.length - 1; i >= 0; i--) {\n    let valid = false;\n    for (let j = check.length - 1; j >= 0; j--) {\n      let y = towns[i][0] + check[j][0];\n      let x = towns[i][1] + check[j][1];\n      if (x >= 0 && x < world.terrain[0].length) {\n        if (y >= 0 && y < world.terrain[0].length) {\n          if (world.terrain[y][x] !== 3) {\n            // not a mountain\n            valid = true;\n            break;\n          }\n        }\n      }\n    }\n    expect(valid).toBeTruthy();\n  }\n  // check that all dungeons have at least one reachable side\n  for (let i = dungeons.length - 1; i >= 0; i--) {\n    let valid = false;\n    for (let j = check.length - 1; j >= 0; j--) {\n      let y = dungeons[i][0] + check[j][0];\n      let x = dungeons[i][1] + check[j][1];\n      if (x >= 0 && x < world.terrain[0].length) {\n        if (y >= 0 && y < world.terrain[0].length) {\n          if (world.terrain[y][x] !== 3) {\n            // not a mountain\n            valid = true;\n            break;\n          }\n        }\n      }\n    }\n    expect(valid).toBeTruthy();\n  }\n  // check that the castle has at least one reachable side\n  {\n    let valid = false;\n    for (let j = check.length - 1; j >= 0; j--) {\n      let y = castle[0] + check[j][0];\n      let x = castle[1] + check[j][1];\n      if (x >= 0 && x < world.terrain[0].length) {\n        if (y >= 0 && y < world.terrain[0].length) {\n          if (world.terrain[y][x] !== 3) {\n            // not a mountain\n            valid = true;\n            break;\n          }\n        }\n      }\n    }\n    expect(valid).toBeTruthy();\n  }\n  \n  // then\n  expect(world._terrain.length).toBe(21);\n}",
                              "order": "1"
                            }
                          ],
                          "uid": "kw0v6aicqmcrmzd4by"
                        }
                      ],
                      "design": [],
                      "uid": "kw0t23hwc9cyasmuf0l"
                    }
                  ],
                  "design": [
                    {
                      "classTitle": "Akalabeth World Test",
                      "classHandle": "AkalabethWorldTest",
                      "fileHandle": "akalabeth-world.test",
                      "tags": [
                        "class",
                        "prototype test"
                      ],
                      "classDefinition": "Unit testing for class AkalabethWorld.",
                      "weight": 1,
                      "uid": "kw0t23hwu9yyznjuaoq",
                      "filePath": [
                        "bus",
                        "akalabeth"
                      ]
                    }
                  ],
                  "uid": "kw0t23hp8imy4x0yg0r"
                }
              ],
              "design": [],
              "uid": "kvawexbvaflgquslq68",
              "unitTestingPercentage": 0
            },
            {
              "title": "Monster Data",
              "order": 5,
              "content": "A new class will define monster data.",
              "children": [
                {
                  "title": "The Akalabeth Monster Data Class",
                  "order": 1,
                  "content": "A new class will be defined using the 'prototype' template.",
                  "children": [],
                  "design": [
                    {
                      "classTitle": "Akalabeth Monster Data",
                      "classHandle": "AkalabethMonsterData",
                      "fileHandle": "akalabeth-monster-data",
                      "tags": [
                        "class",
                        "prototype"
                      ],
                      "classDefinition": "A new class will define monster data.",
                      "weight": "1",
                      "uid": "kvwkh3ab6j46tbdentv",
                      "filePath": [
                        "bus",
                        "akalabeth"
                      ]
                    },
                    {
                      "classUid": "kvwkh3ab6j46tbdentv",
                      "tags": [
                        "code",
                        "constructor body"
                      ],
                      "code": "Watchable.apply(this);",
                      "order": 9999,
                      "uid": "kvwkh3ac848sj2njfbe"
                    },
                    {
                      "classUid": "kvwkh3ab6j46tbdentv",
                      "tags": [
                        "code",
                        "inheritance"
                      ],
                      "classInheritance": "Watchable",
                      "order": 9999,
                      "uid": "kvwkh3acyl5fr34xeo"
                    }
                  ],
                  "uid": "kvwkh3abny8ebkcgoni"
                },
                {
                  "title": "File Imports",
                  "order": 2,
                  "content": "The Akalabeth Monster Data class will require the following imports:",
                  "children": [],
                  "design": [
                    {
                      "classUid": "kvwkh3ab6j46tbdentv",
                      "importHandle": "Watchable",
                      "importPath": "../../../../../../../lib/RPGBase-NodeJS/src/bus/watchable",
                      "tags": [
                        "code",
                        "required import"
                      ],
                      "uid": "kw10peviqpebrnpcgjg"
                    }
                  ],
                  "uid": "kvwkh3ac9391nuphhjw"
                },
                {
                  "title": "Private Fields",
                  "order": 3,
                  "content": "The Akalabeth Monster Data class will have the following private fields:",
                  "children": [
                    {
                      "title": "Monster Type",
                      "order": 1,
                      "content": "A field to track the monster type.",
                      "children": [],
                      "design": [
                        {
                          "classUid": "kvwkh3ab6j46tbdentv",
                          "tags": [
                            "code",
                            "private field"
                          ],
                          "fieldName": "_type",
                          "fieldType": "int",
                          "fieldValue": "-1",
                          "fieldDefinition": "A field to track the monster type.",
                          "order": "1",
                          "uid": "kvwkml6ixzk16ni6rlb"
                        },
                        {
                          "classUid": "kvwkh3ab6j46tbdentv",
                          "tags": [
                            "code",
                            "public getter/setter property"
                          ],
                          "propertyName": "type",
                          "getterDefinition": "/**\n * Getter for field _type.\n * @returns {Number}\n */",
                          "getterBody": "return this._type;",
                          "setterDefinition": "/**\n * Setter for field _type.\n * @param {PropertyKey} value the value\n */",
                          "setterBody": "if (isNaN(parseInt(value))) {\n  throw [\"Invalid value\", value];\n}\nthis._type = value;",
                          "order": "1",
                          "uid": "kvwkml6j57kw9tl7rrr"
                        }
                      ],
                      "uid": "kvwkml6hp84qnrl06hk"
                    },
                    {
                      "title": "Monster Hit Points",
                      "order": 2,
                      "content": "A field to track the monster's hit points.",
                      "children": [],
                      "design": [
                        {
                          "classUid": "kvwkh3ab6j46tbdentv",
                          "tags": [
                            "code",
                            "private field"
                          ],
                          "fieldName": "_hitPoints",
                          "fieldType": "int",
                          "fieldValue": "0",
                          "fieldDefinition": "A field to track the monster's hit points.",
                          "order": "2",
                          "uid": "kvwkno2ba8m00ek87qu"
                        },
                        {
                          "classUid": "kvwkh3ab6j46tbdentv",
                          "tags": [
                            "code",
                            "public getter/setter property"
                          ],
                          "propertyName": "hitPoints",
                          "getterDefinition": "/**\n * Getter for field _hitPoints.\n * @returns {Number}\n */",
                          "getterBody": "return this._hitPoints;",
                          "setterDefinition": "/**\n * Setter for field _hitPoints.\n * @param {PropertyKey} value the value\n */",
                          "setterBody": "if (isNaN(parseInt(value))) {\n  throw [\"Invalid value\", value];\n}\nthis._hitPoints = value;",
                          "order": "2",
                          "uid": "kvwkno2by6gnkgadbbl"
                        }
                      ],
                      "uid": "kvwkno2afpekewrd7e4"
                    },
                    {
                      "title": "Monster X",
                      "order": 3,
                      "content": "A field to track the monster's X-coordinate.",
                      "children": [],
                      "design": [
                        {
                          "classUid": "kvwkh3ab6j46tbdentv",
                          "tags": [
                            "code",
                            "private field"
                          ],
                          "fieldName": "_x",
                          "fieldType": "int",
                          "fieldValue": "-1",
                          "fieldDefinition": "A field to track the monster's X-coordinate.",
                          "order": "3",
                          "uid": "kvwkojn9f2q67rm66xw"
                        },
                        {
                          "classUid": "kvwkh3ab6j46tbdentv",
                          "tags": [
                            "code",
                            "public getter/setter property"
                          ],
                          "propertyName": "x",
                          "getterDefinition": "/**\n * Getter for field _x.\n * @returns {Number}\n */",
                          "getterBody": "return this._x;",
                          "setterDefinition": "/**\n * Setter for field _x.\n * @param {PropertyKey} value the value\n */",
                          "setterBody": "if (isNaN(parseInt(value))) {\n  throw [\"Invalid value\", value];\n}\nthis._x = value;",
                          "order": "3",
                          "uid": "kvwkojn97cpqoskfnjw"
                        }
                      ],
                      "uid": "kvwkojn8vxhiwnbrw3o"
                    },
                    {
                      "title": "Monster Y",
                      "order": 4,
                      "content": "A field to track the monster's y-coordinate",
                      "children": [],
                      "design": [
                        {
                          "classUid": "kvwkh3ab6j46tbdentv",
                          "tags": [
                            "code",
                            "private field"
                          ],
                          "fieldName": "_y",
                          "fieldType": "int",
                          "fieldValue": "-1",
                          "fieldDefinition": "A field to track the monster's y-coordinate",
                          "order": "4",
                          "uid": "kvwkpobcyyn1fhw1v3"
                        },
                        {
                          "classUid": "kvwkh3ab6j46tbdentv",
                          "tags": [
                            "code",
                            "public getter/setter property"
                          ],
                          "propertyName": "y",
                          "getterDefinition": "/**\n * Getter for field _y.\n * @returns {Number}\n */",
                          "getterBody": "return this._y;",
                          "setterDefinition": "/**\n * Setter for field _y.\n * @param {PropertyKey} value the value\n */",
                          "setterBody": "if (isNaN(parseInt(value))) {\n  throw [\"Invalid value\", value];\n}\nthis._y = value;",
                          "order": "4",
                          "uid": "kvwkpobdnbi2gb7ue7f"
                        }
                      ],
                      "uid": "kvwkpobayzvebl5po2"
                    }
                  ],
                  "design": [],
                  "uid": "kvwkh3acisb6mcb4km"
                },
                {
                  "title": "Public Members",
                  "order": 4,
                  "content": "The Akalabeth Monster Data class will have the following public members:",
                  "children": [
                    {
                      "title": "Is Dead",
                      "order": 1,
                      "content": "A member will exist that indicates if the monster is dead.",
                      "children": [],
                      "design": [
                        {
                          "classUid": "kvwkh3ab6j46tbdentv",
                          "tags": [
                            "code",
                            "public member"
                          ],
                          "memberName": "isDead",
                          "memberDefinition": "/**\n * Determines if a monster is dead.\n * @returns {boolean] true if the monster is dead; false otherwise.\n */",
                          "arguments": "",
                          "code": "return this._hitPoints <= 0;",
                          "order": "1",
                          "uid": "kvwkrsifm1qr5exm56f"
                        }
                      ],
                      "uid": "kvwkrsifnoameycetff"
                    }
                  ],
                  "design": [],
                  "uid": "kvwkh3ac4q4o28dlgr6"
                }
              ],
              "design": [],
              "uid": "kvwkh3abd91vbly0w1d"
            }
          ],
          "design": [],
          "uid": "kuyu2us9qat4npkou4q"
        },
        {
          "title": "Game States",
          "order": 2,
          "content": "The game will have several states available to it.  The first state will be AKALABETH_CHARACTER_CREATION.",
          "children": [],
          "design": [
            {
              "classUid": "kuvp9k2jit3fzra9nj9",
              "groupName": "AKALABETH_GAME_STATES",
              "tags": [
                "code",
                "group properties"
              ],
              "elements": [
                {
                  "elementName": "AKALABETH_CHARACTER_CREATION",
                  "elementValue": "0",
                  "elementDefinition": "The Character Creation state, where the player's character is created.",
                  "order": 0
                },
                {
                  "elementName": "AKALABETH_EQUIPMENT_SHOP",
                  "elementValue": "1",
                  "elementDefinition": "The Equipment Shop state, where the Shop view is displayed after character creation.",
                  "order": 1
                },
                {
                  "elementName": "AKALABETH_SETUP",
                  "elementValue": "2",
                  "elementDefinition": "The Setup state, where the world is populated.",
                  "order": 2
                },
                {
                  "elementName": "AKALABETH_WORLD_MAP",
                  "elementValue": "3",
                  "elementDefinition": "The World Map state, where the world map is displayed.",
                  "order": 3
                },
                {
                  "elementName": "AKALABETH_CHARACTER_STATS",
                  "elementValue": "4",
                  "elementDefinition": "The Character Stats state, where the character stats screen is displayed.",
                  "order": 4
                },
                {
                  "elementName": "AKALABETH_DUNGEON",
                  "elementValue": "5",
                  "elementDefinition": "The Dungeon state, where the dungeon exploration screen is displayed.",
                  "order": 5
                },
                {
                  "elementName": "AKALABETH_CASTLE",
                  "elementValue": "6",
                  "elementDefinition": "The Castle state, where the castle screen is displayed.",
                  "order": 6
                },
                {
                  "elementName": "AKALABETH_GAME_OVER",
                  "elementValue": "7",
                  "elementDefinition": "The Game Over state, where the game over screen is displayed.",
                  "order": 7
                }
              ],
              "uid": "kuwpwejqv1ubvmooh8j"
            }
          ],
          "uid": "kuwpuzm6uest1vzbi2p"
        },
        {
          "title": "Game Views",
          "order": 3,
          "content": "The game will have several views that change during play.",
          "children": [
            {
              "title": "The Character Creation View",
              "order": 1,
              "content": "The first view displayed is the Character Creator",
              "children": [
                {
                  "title": "The Scene Container Class",
                  "order": 1,
                  "content": "A Scene Container class will need to be defined.  The Scene Container template will be used.",
                  "children": [],
                  "design": [
                    {
                      "classTitle": "Akalabeth Character Creation Scene",
                      "classHandle": "AkalabethCharacterCreationScene",
                      "fileHandle": "akalabeth-character-creation-scene",
                      "tags": [
                        "class",
                        "scene-container"
                      ],
                      "classDefinition": "The first view displayed is the Character Creator",
                      "weight": "1",
                      "uid": "kvk5yu7931y2w8rk7k5",
                      "filePath": [
                        "scenes",
                        "akalabeth",
                        "character-creation"
                      ]
                    }
                  ],
                  "uid": "kvk5yu7a93x0gkzbnjr"
                },
                {
                  "title": "File Imports",
                  "order": 2,
                  "content": "The Game class will include the Scene Container as a required import.\nThe Scene Container class will require the following imports:",
                  "requires design": true,
                  "children": [],
                  "design": [
                    {
                      "classUid": "AF89DG9sgahg9",
                      "importHandle": "RetroC64AkalabethCharacterCreationScene",
                      "importPath": "../scenes/akalabeth/character-creation/retroc64-akalabeth-character-creation-scene",
                      "tags": [
                        "code",
                        "required import"
                      ],
                      "uid": "kvk5yu7aguoatk8m1na"
                    }
                  ],
                  "uid": "kvk5yu7ahh1qctt4zu"
                },
                {
                  "title": "Postboot Processing",
                  "order": 3,
                  "content": "The Scene Container class will need to be added to the Game class postboot processing.",
                  "requires design": true,
                  "children": [],
                  "design": [
                    {
                      "classUid": "AF89DG9sgahg9",
                      "tags": [
                        "code",
                        "postboot"
                      ],
                      "code": "_game.scene.queueOp(\"start\", \"AkalabethCharacterCreationScene\");",
                      "order": "1",
                      "uid": "kvk5yu7a4fdvsm5c844"
                    }
                  ],
                  "uid": "kvk5yu7a3slnrphodmh"
                },
                {
                  "title": "Scene Key",
                  "order": 4,
                  "content": "The Scene Container class will need to be added to the scene groups in the Scene Controller class.",
                  "requires design": true,
                  "children": [],
                  "design": [
                    {
                      "classUid": "kuvp9k2j3kwh9rvfmqg",
                      "tags": [
                        "code",
                        "scene group"
                      ],
                      "sceneKey": "[RetroC64Constants.AKALABETH_CHARACTER_CREATION]",
                      "sceneValue": "\"AkalabethCharacterCreationScene\"",
                      "order": "1",
                      "uid": "kvk5yu7aduhr554bsxb"
                    }
                  ],
                  "uid": "kvk5yu7am2eks6ciyyg"
                },
                {
                  "title": "Scene states",
                  "order": 5,
                  "content": "A State Group will need to be added to the App Constants for this Scene Container",
                  "requires design": true,
                  "children": [],
                  "design": [
                    {
                      "classUid": "kuvp9k2jit3fzra9nj9",
                      "groupName": "AKALABETH_CHARACTER_CREATION_STATES",
                      "tags": [
                        "code",
                        "group properties"
                      ],
                      "elements": [
                        {
                          "elementName": "AKALABETH_CHARACTER_CREATION_LUCKY_NUMBER",
                          "elementValue": "1",
                          "elementDefinition": "the first character creation state is for the player's lucky number entry",
                          "order": 1
                        },
                        {
                          "elementName": "AKALABETH_CHARACTER_CREATION_LEVEL_OF_PLAY",
                          "elementValue": "2",
                          "elementDefinition": "the second character creation state is for the player's desired level of play",
                          "order": 2
                        },
                        {
                          "elementName": "AKALABETH_CHARACTER_CREATION_REVIEW_CHARACTER",
                          "elementValue": "3",
                          "elementDefinition": "the third character creation state is to review the character",
                          "order": 3
                        },
                        {
                          "elementName": "AKALABETH_CHARACTER_CREATION_SELECT_CLASS",
                          "elementValue": "4",
                          "elementDefinition": "the fourth character creation state is to select the character's class",
                          "order": 4
                        }
                      ],
                      "uid": "kvkcjm8wprqhlnop24b"
                    },
                    {
                      "classUid": "kvk5yu7931y2w8rk7k5",
                      "tags": [
                        "code",
                        "scoped dictionary body 0"
                      ],
                      "dictionaryKey": "[RetroC64Constants.AKALABETH_CHARACTER_CREATION_LUCKY_NUMBER]",
                      "dictionaryDefinition": "the scene instances displayed during the lucky number process",
                      "dictionaryValue": "_akalabethCharacterCreationInterface",
                      "uid": "kvkd1gvw9lh80894c0c"
                    },
                    {
                      "classUid": "kvk5yu7931y2w8rk7k5",
                      "tags": [
                        "code",
                        "scoped dictionary body 0"
                      ],
                      "dictionaryKey": "[RetroC64Constants.AKALABETH_CHARACTER_CREATION_LEVEL_OF_PLAY]",
                      "dictionaryDefinition": "the scene instances displayed during the level of play capture",
                      "dictionaryValue": "_akalabethCharacterCreationInterface",
                      "uid": "kvkd3bpbmcj0bgwt83"
                    },
                    {
                      "classUid": "kvk5yu7931y2w8rk7k5",
                      "tags": [
                        "code",
                        "scoped dictionary body 0"
                      ],
                      "dictionaryKey": "[RetroC64Constants.AKALABETH_CHARACTER_CREATION_REVIEW_CHARACTER]",
                      "dictionaryDefinition": "the scene instances displayed during the character review process",
                      "dictionaryValue": "[_akalabethCharacterCreationInterface]",
                      "uid": "kvkd4e4uqwj1t0g97in"
                    },
                    {
                      "classUid": "kvk5yu7931y2w8rk7k5",
                      "tags": [
                        "code",
                        "scoped dictionary body 0"
                      ],
                      "dictionaryKey": "[RetroC64Constants.AKALABETH_CHARACTER_CREATION_SELECT_CLASS]",
                      "dictionaryDefinition": "the scene instances displayed during the character class selection phase",
                      "dictionaryValue": "[_akalabethCharacterCreationInterface]",
                      "uid": "kvkdc17s28mpanzcucl"
                    }
                  ],
                  "uid": "kvk5yu7aizjngbmhxf"
                },
                {
                  "title": "Scene Initial State",
                  "order": 6,
                  "content": "The Scene Container initial state is set in the 'create' method of the Scene Controller class. It will be set to the following state:",
                  "requires design": true,
                  "children": [],
                  "design": [
                    {
                      "classUid": "kuvp9k2j3kwh9rvfmqg",
                      "tags": [
                        "code",
                        "create"
                      ],
                      "code": "\n// set initial state for Character Creation\n[app-handle]AkalabethCharacterCreationScene.state = [app-handle]Constants.AKALABETH_CHARACTER_CREATION_LUCKY_NUMBER;",
                      "order": "1",
                      "uid": "kvkdhmj55rlwu0bvrg"
                    }
                  ],
                  "uid": "kvk5yu7azvuwiw7xwv9"
                },
                {
                  "title": "Child Scenes",
                  "order": 7,
                  "content": "The Scene Container is just that: a container.  It will manage the following child scenes:",
                  "requires design": true,
                  "children": [
                    {
                      "title": "The Character Creation Interface",
                      "order": 1,
                      "content": "A UI for the character creation process. This UI will handle the four steps in the process:\n\n* getting the player's lucky number\n* getting the game's level of play\n* rolling a new character\n* selecting the player's class",
                      "children": [
                        {
                          "title": "The UI Scene Class",
                          "order": 1,
                          "content": "A UI class will need to be defined.  The Ui Scene template will be used.",
                          "children": [],
                          "design": [
                            {
                              "classTitle": "Akalabeth Character Creation Interface",
                              "classHandle": "AkalabethCharacterCreationInterface",
                              "fileHandle": "akalabeth-character-creation-interface",
                              "tags": [
                                "class",
                                "ui-scene"
                              ],
                              "classDefinition": "A UI for the character creation process. This UI will handle the four steps in the process:\n\n* getting the player's lucky number\n* getting the game's level of play\n* rolling a new character\n* selecting the player's class",
                              "weight": "0.5",
                              "uid": "kvkcv6pjcr91c7n5xut",
                              "filePath": [
                                "scenes",
                                "akalabeth",
                                "character-creation"
                              ],
                              "initialState": "AKALABETH_CHARACTER_CREATION_LUCKY_NUMBER",
                              "gridWidth": "2",
                              "gridHeight": "24"
                            }
                          ],
                          "uid": "kvkcv6pkwi8q2vulyj"
                        },
                        {
                          "title": "File Imports",
                          "order": 2,
                          "content": "The UI class will require the following imports:\n* Scene Contoller\n* Parent Scene",
                          "children": [],
                          "design": [
                            {
                              "classUid": "kvkcv6pjcr91c7n5xut",
                              "importHandle": "RetroC64SceneController",
                              "importPath": "../../../scenes/retroc64-scene-controller",
                              "tags": [
                                "code",
                                "required import"
                              ],
                              "uid": "kvkcv6pk3rkqi7tr61r"
                            },
                            {
                              "classUid": "kvkcv6pjcr91c7n5xut",
                              "importHandle": "RetroC64AkalabethCharacterCreationScene",
                              "importPath": "./retroc64-akalabeth-character-creation-scene",
                              "tags": [
                                "code",
                                "required import"
                              ],
                              "uid": "kvkcv6pkzc5qr8y9m6n"
                            },
                            {
                              "classUid": "kvk5yu7931y2w8rk7k5",
                              "importHandle": "RetroC64AkalabethCharacterCreationInterface",
                              "importPath": "./retroc64-akalabeth-character-creation-interface",
                              "tags": [
                                "code",
                                "required import"
                              ],
                              "uid": "kvkcv6pkg12nfrcl96"
                            }
                          ],
                          "uid": "kvkcv6pkklnmbhmnmcm"
                        },
                        {
                          "title": "Private Fields",
                          "order": 3,
                          "content": "The UI class will be added as a private member of its scene parent.\nThe Ui Scene will have the following private fields:",
                          "children": [
                            {
                              "title": "Key Entry Delay",
                              "order": 1,
                              "content": "A delay of 500 milliseconds will be used when processing user keyboard entry.",
                              "children": [],
                              "design": [
                                {
                                  "classUid": "kvkcv6pjcr91c7n5xut",
                                  "tags": [
                                    "code",
                                    "private field"
                                  ],
                                  "fieldName": "_keyEntryDelay",
                                  "fieldType": "int",
                                  "fieldValue": "500",
                                  "fieldDefinition": "A delay of 500 milliseconds will be used when processing user keyboard entry.",
                                  "order": "1",
                                  "uid": "kvl46d0hehhk73gsoe7"
                                }
                              ],
                              "uid": "kvl46d0hv04g1k8ifr"
                            }
                          ],
                          "design": [
                            {
                              "classUid": "kvk5yu7931y2w8rk7k5",
                              "tags": [
                                "code",
                                "private field"
                              ],
                              "fieldName": "_akalabethCharacterCreationInterface",
                              "fieldType": "UiScene",
                              "fieldValue": "new RetroC64AkalabethCharacterCreationInterface({ scene: _scene, show: false })",
                              "fieldDefinition": "RetroC64AkalabethCharacterCreationInterface instance",
                              "order": "10",
                              "uid": "kvkcv6pkjdhv16qens"
                            }
                          ],
                          "uid": "kvkcv6pkh7v8yds87x7"
                        },
                        {
                          "title": "View Templates",
                          "order": 4,
                          "content": "The UI class will have defined templates for each view. These will be added to the Constructor Body. Templates have been defined for the following views:",
                          "requires design": true,
                          "children": [
                            {
                              "title": "The Lucky Number View",
                              "order": 1,
                              "content": "The first view is for the Lucky Number entry",
                              "children": [],
                              "design": [
                                {
                                  "tags": [
                                    "view template",
                                    "code"
                                  ],
                                  "uid": "kvl2xvl4k9ubwwlbe7m",
                                  "classUid": "kvkcv6pjcr91c7n5xut",
                                  "entryKey": "AKALABETH_CHARACTER_CREATION_LUCKY_NUMBER",
                                  "code": "group: null,\nchildren: [\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"TYPE THY LUCKY NUMBER (0-9)..... \", // text\n    ],\n    position: {\n      x: {\n        fixed: -0.5,\n        offset: 2\n      },\n      y: 5\n    },\n    origin: [0, 0.5],\n    tint: 10920447,\n    dynamicField: \"luckyField1\"\n  },\n  {\n    comment: \"CREATE TWO IMAGE (F OR M)S, CURSOR_ON AND CURSOR_OFF. OFF IS MADE FIRST, SINCE THE GRAPHICS NEEDS TO BE EMPTY\",\n    type: \"graphics-texture\",\n    commands: [\n      {\n        order: 1,\n        command: \"fillStyle\",\n        args: [0xA6A1FF, 0] // color, alpha\n      },\n      {\n        order: 2,\n        command: \"fillRect\",\n        args: [0, 0, 16, 16], // x, y, width, height, corner radius,\n        \"scale controlled args\": [] // no scaled graphics\n      },\n      {\n        order: 3,\n        command: \"generateTexture\",\n        args: [\"cursor_off\", 16, 16], // key, scale width, scale height\n        \"scale controlled args\": [] // no scaled graphics\n      },\n      {\n        order: 4,\n        command: \"fillStyle\",\n        args: [0xA6A1FF, 1] // color, alpha\n      },\n      {\n        order: 5,\n        command: \"fillRect\",\n        args: [0, 0, 16, 16], // x, y, width, height, corner radius,\n        \"scale controlled args\": [] // no scaled graphics\n      },\n      {\n        order: 6,\n        command: \"generateTexture\",\n        args: [\"cursor_on\", 16, 16], // key, scale width, scale height\n        \"scale controlled args\": [] // no scaled graphics\n      },\n    ]\n  },\n  {\n    comment: \"CREATE CURSOR SPRITE\",\n    type: \"sprite\",\n    args: [\n      0, // x\n      0, // y\n      \"cursor_on\" // texture\n    ],\n    position: {\n      x: {\n        fixed: -0.5,\n        offset: {\n          field: \"luckyField1\"\n        }\n      },\n      y: 5\n    },\n    origin: [0, 0.5],\n    dynamicField: \"blinkingCursor1\"\n  }\n]",
                                  "order": "1"
                                }
                              ],
                              "uid": "kvl2xvl2v8gsb091aw"
                            },
                            {
                              "title": "Level of Play View",
                              "order": 2,
                              "content": "A view will be created for the Level of Play entry",
                              "children": [],
                              "design": [
                                {
                                  "tags": [
                                    "view template",
                                    "code"
                                  ],
                                  "uid": "kvl351o0vmvhn526awf",
                                  "classUid": "kvkcv6pjcr91c7n5xut",
                                  "entryKey": "AKALABETH_CHARACTER_CREATION_LEVEL_OF_PLAY",
                                  "code": "group: null,\nchildren: [\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"\", // text\n    ],\n    position: {\n      x: {\n        fixed: -0.5,\n        offset: 2\n      },\n      y: 5\n    },\n    origin: [0, 0.5],\n    tint: 10920447,\n    dynamicField: \"luckyField2\"\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"LEVEL OF PLAY (1-10)...... \", // text\n    ],\n    position: {\n      x: {\n        fixed: -0.5,\n        offset: 2\n      },\n      y: 7\n    },\n    origin: [0, 0.5],\n    tint: 10920447,\n    dynamicField: \"levelOfPlayField2\"\n  },\n  {\n    comment: \"CREATE TWO IMAGE (F OR M)S, CURSOR_ON AND CURSOR_OFF. OFF IS MADE FIRST, SINCE THE GRAPHICS NEEDS TO BE EMPTY\",\n    type: \"graphics-texture\",\n    commands: [\n      {\n        order: 1,\n        command: \"fillStyle\",\n        args: [0xA6A1FF, 0] // color, alpha\n      },\n      {\n        order: 2,\n        command: \"fillRect\",\n        args: [0, 0, 16, 16], // x, y, width, height, corner radius,\n        \"scale controlled args\": [] // no scaled graphics\n      },\n      {\n        order: 3,\n        command: \"generateTexture\",\n        args: [\"cursor_off\", 16, 16], // key, scale width, scale height\n        \"scale controlled args\": [] // no scaled graphics\n      },\n      {\n        order: 4,\n        command: \"fillStyle\",\n        args: [0xA6A1FF, 1] // color, alpha\n      },\n      {\n        order: 5,\n        command: \"fillRect\",\n        args: [0, 0, 16, 16], // x, y, width, height, corner radius,\n        \"scale controlled args\": [] // no scaled graphics\n      },\n      {\n        order: 6,\n        command: \"generateTexture\",\n        args: [\"cursor_on\", 16, 16], // key, scale width, scale height\n        \"scale controlled args\": [] // no scaled graphics\n      },\n    ]\n  },\n  {\n    comment: \"CREATE CURSOR SPRITE\",\n    type: \"sprite\",\n    args: [\n      0, // x\n      0, // y\n      \"cursor_on\" // texture\n    ],\n    position: {\n      x: {\n        fixed: -0.5,\n        offset: {\n          pixel: 2,\n          field: \"levelOfPlayField2\"\n        }\n      },\n      y: 7\n    },\n    origin: [0, 0.5],\n    dynamicField: \"blinkingCursor2\"\n  }\n]",
                                  "order": "2"
                                }
                              ],
                              "uid": "kvl351o0wgb7vwmenqh"
                            },
                            {
                              "title": "The Review Character View",
                              "order": 3,
                              "content": "A view will be needed for reviewing freshly-rolled characters.",
                              "children": [],
                              "design": [
                                {
                                  "classUid": "kvkcv6pjcr91c7n5xut",
                                  "tags": [
                                    "code",
                                    "view template"
                                  ],
                                  "entryKey": "AKALABETH_CHARACTER_CREATION_REVIEW_CHARACTER",
                                  "code": "group: null,\nchildren: [\n  {\n    comment: \"HP\",\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"HIT POINTS.....\", // text\n    ],\n    position: {\n      x: {\n        fixed: -0.5,\n        offset: 2\n      },\n      y: 7\n    },\n    origin: [0, 0.5],\n    tint: 10920447\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"\", // text\n    ],\n    position: {\n      x: {\n        fixed: 0,\n        offset: 24\n      },\n      y: 7\n    },\n    origin: [1, 0.5],\n    tint: 10920447,\n    dynamicField: \"hpValue3\"\n  },\n  {\n    comment: \"STR\",\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"STRENGTH........\", // text\n    ],\n    position: {\n      x: {\n        fixed: -0.5,\n        offset: 2\n      },\n      y: 8\n    },\n    origin: [0, 0.5],\n    tint: 10920447\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"\", // text\n    ],\n    position: {\n      x: {\n        fixed: 0,\n        offset: 24\n      },\n      y: 8\n    },\n    origin: [1, 0.5],\n    tint: 10920447,\n    dynamicField: \"strValue3\"\n  },\n  {\n    comment: \"DEX\",\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"DEXTERITY.......\", // text\n    ],\n    position: {\n      x: {\n        fixed: -0.5,\n        offset: 2\n      },\n      y: 9\n    },\n    origin: [0, 0.5],\n    tint: 10920447\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"\", // text\n    ],\n    position: {\n      x: {\n        fixed: 0,\n        offset: 24\n      },\n      y: 9\n    },\n    origin: [1, 0.5],\n    tint: 10920447,\n    dynamicField: \"dexValue3\"\n  },\n  {\n    comment: \"ST\",\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"STAMINA...........\", // text\n    ],\n    position: {\n      x: {\n        fixed: -0.5,\n        offset: 2\n      },\n      y: 10\n    },\n    origin: [0, 0.5],\n    tint: 10920447\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"\", // text\n    ],\n    position: {\n      x: {\n        fixed: 0,\n        offset: 24\n      },\n      y: 10\n    },\n    origin: [1, 0.5],\n    tint: 10920447,\n    dynamicField: \"stValue3\"\n  },\n  {\n    comment: \"WIS\",\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"WISDOM.............\", // text\n    ],\n    position: {\n      x: {\n        fixed: -0.5,\n        offset: 2\n      },\n      y: 11\n    },\n    origin: [0, 0.5],\n    tint: 10920447\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"\", // text\n    ],\n    position: {\n      x: {\n        fixed: 0,\n        offset: 24\n      },\n      y: 11\n    },\n    origin: [1, 0.5],\n    tint: 10920447,\n    dynamicField: \"wisValue3\"\n  },\n  {\n    comment: \"GOLD\",\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"GOLD.................\", // text\n    ],\n    position: {\n      x: {\n        fixed: -0.5,\n        offset: 2\n      },\n      y: 12\n    },\n    origin: [0, 0.5],\n    tint: 10920447\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"\", // text\n    ],\n    position: {\n      x: {\n        fixed: 0,\n        offset: 24\n      },\n      y: 12\n    },\n    origin: [1, 0.5],\n    tint: 10920447,\n    dynamicField: \"goldValue3\"\n  },\n  {\n    comment: \"PROMPT\",\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"SHALT THOU PLAY WITH THESE QUALITIES (Y OR N)? \", // text\n    ],\n    position: {\n      x: {\n        fixed: -0.5,\n        offset: 2\n      },\n      y: 14\n    },\n    origin: [0, 0.5],\n    tint: 10920447,\n    dynamicField: \"promptField3\"\n  },\n  {\n    comment: \"CREATE TWO IMAGE (F OR M)S, CURSOR_ON AND CURSOR_OFF. OFF IS MADE FIRST, SINCE THE GRAPHICS NEEDS TO BE EMPTY\",\n    type: \"graphics-texture\",\n    commands: [\n      {\n        order: 1,\n        command: \"fillStyle\",\n        args: [0xA6A1FF, 0] // color, alpha\n      },\n      {\n        order: 2,\n        command: \"fillRect\",\n        args: [0, 0, 16, 16], // x, y, width, height, corner radius,\n        \"scale controlled args\": [] // no scaled graphics\n      },\n      {\n        order: 3,\n        command: \"generateTexture\",\n        args: [\"cursor_off\", 16, 16], // key, scale width, scale height\n        \"scale controlled args\": [] // no scaled graphics\n      },\n      {\n        order: 4,\n        command: \"fillStyle\",\n        args: [0xA6A1FF, 1] // color, alpha\n      },\n      {\n        order: 5,\n        command: \"fillRect\",\n        args: [0, 0, 16, 16], // x, y, width, height, corner radius,\n        \"scale controlled args\": [] // no scaled graphics\n      },\n      {\n        order: 6,\n        command: \"generateTexture\",\n        args: [\"cursor_on\", 16, 16], // key, scale width, scale height\n        \"scale controlled args\": [] // no scaled graphics\n      },\n    ]\n  },\n  {\n    comment: \"CREATE CURSOR SPRITE\",\n    type: \"sprite\",\n    args: [\n      0, // x\n      0, // y\n      \"cursor_on\" // texture\n    ],\n    position: {\n      x: {\n        fixed: -0.5,\n        offset: {\n          field: \"promptField3\"\n        }\n      },\n      y: 14\n    },\n    origin: [0, 0.5],\n    dynamicField: \"blinkingCursor3\"\n  }\n]",
                                  "order": "3",
                                  "uid": "kvmclxb08fprognhx8b"
                                }
                              ],
                              "uid": "kvmclxaz6n513cf1i7"
                            },
                            {
                              "title": "Character Class Selection",
                              "order": 4,
                              "content": "A unique view will exist for the class selection step.",
                              "children": [],
                              "design": [
                                {
                                  "classUid": "kvkcv6pjcr91c7n5xut",
                                  "tags": [
                                    "code",
                                    "view template"
                                  ],
                                  "entryKey": "AKALABETH_CHARACTER_CREATION_SELECT_CLASS",
                                  "code": "group: null,\nchildren: [\n  {\n    comment: \"HP\",\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"HIT POINTS.....\", // text\n    ],\n    position: {\n      x: {\n        fixed: -0.5,\n        offset: 2\n      },\n      y: 7\n    },\n    origin: [0, 0.5],\n    tint: 10920447\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"\", // text\n    ],\n    position: {\n      x: {\n        fixed: 0,\n        offset: 24\n      },\n      y: 7\n    },\n    origin: [1, 0.5],\n    tint: 10920447,\n    dynamicField: \"hpValue4\"\n  },\n  {\n    comment: \"STR\",\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"STRENGTH........\", // text\n    ],\n    position: {\n      x: {\n        fixed: -0.5,\n        offset: 2\n      },\n      y: 8\n    },\n    origin: [0, 0.5],\n    tint: 10920447\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"\", // text\n    ],\n    position: {\n      x: {\n        fixed: 0,\n        offset: 24\n      },\n      y: 8\n    },\n    origin: [1, 0.5],\n    tint: 10920447,\n    dynamicField: \"strValue4\"\n  },\n  {\n    comment: \"DEX\",\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"DEXTERITY.......\", // text\n    ],\n    position: {\n      x: {\n        fixed: -0.5,\n        offset: 2\n      },\n      y: 9\n    },\n    origin: [0, 0.5],\n    tint: 10920447\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"\", // text\n    ],\n    position: {\n      x: {\n        fixed: 0,\n        offset: 24\n      },\n      y: 9\n    },\n    origin: [1, 0.5],\n    tint: 10920447,\n    dynamicField: \"dexValue4\"\n  },\n  {\n    comment: \"ST\",\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"STAMINA...........\", // text\n    ],\n    position: {\n      x: {\n        fixed: -0.5,\n        offset: 2\n      },\n      y: 10\n    },\n    origin: [0, 0.5],\n    tint: 10920447\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"\", // text\n    ],\n    position: {\n      x: {\n        fixed: 0,\n        offset: 24\n      },\n      y: 10\n    },\n    origin: [1, 0.5],\n    tint: 10920447,\n    dynamicField: \"stValue4\"\n  },\n  {\n    comment: \"WIS\",\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"WISDOM.............\", // text\n    ],\n    position: {\n      x: {\n        fixed: -0.5,\n        offset: 2\n      },\n      y: 11\n    },\n    origin: [0, 0.5],\n    tint: 10920447\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"\", // text\n    ],\n    position: {\n      x: {\n        fixed: 0,\n        offset: 24\n      },\n      y: 11\n    },\n    origin: [1, 0.5],\n    tint: 10920447,\n    dynamicField: \"wisValue4\"\n  },\n  {\n    comment: \"GOLD\",\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"GOLD.................\", // text\n    ],\n    position: {\n      x: {\n        fixed: -0.5,\n        offset: 2\n      },\n      y: 12\n    },\n    origin: [0, 0.5],\n    tint: 10920447\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"\", // text\n    ],\n    position: {\n      x: {\n        fixed: 0,\n        offset: 24\n      },\n      y: 12\n    },\n    origin: [1, 0.5],\n    tint: 10920447,\n    dynamicField: \"goldValue4\"\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"SHALT THOU PLAY WITH THESE QUALITIES (Y OR N)? YES\", // text\n    ],\n    position: {\n      x: {\n        fixed: -0.5,\n        offset: 2\n      },\n      y: 14\n    },\n    origin: [0, 0.5],\n    tint: 10920447,\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"AND SHALT THOU BE A FIGHTER OR A MAGE (F OR M)? \", // text\n    ],\n    position: {\n      x: {\n        fixed: -0.5,\n        offset: 2\n      },\n      y: 15\n    },\n    origin: [0, 0.5],\n    tint: 10920447,\n  },\n  {\n    comment: \"PROMPT\",\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"\", // text\n    ],\n    position: [0.5, 16],\n    origin: [0, 0.5],\n    tint: 10920447,\n    dynamicField: \"promptField4\"\n  },\n  {\n    comment: \"CREATE TWO IMAGE (F OR M)S, CURSOR_ON AND CURSOR_OFF. OFF IS MADE FIRST, SINCE THE GRAPHICS NEEDS TO BE EMPTY\",\n    type: \"graphics-texture\",\n    commands: [\n      {\n        order: 1,\n        command: \"fillStyle\",\n        args: [0xA6A1FF, 0] // color, alpha\n      },\n      {\n        order: 2,\n        command: \"fillRect\",\n        args: [0, 0, 16, 16], // x, y, width, height, corner radius,\n        \"scale controlled args\": [] // no scaled graphics\n      },\n      {\n        order: 3,\n        command: \"generateTexture\",\n        args: [\"cursor_off\", 16, 16], // key, scale width, scale height\n        \"scale controlled args\": [] // no scaled graphics\n      },\n      {\n        order: 4,\n        command: \"fillStyle\",\n        args: [0xA6A1FF, 1] // color, alpha\n      },\n      {\n        order: 5,\n        command: \"fillRect\",\n        args: [0, 0, 16, 16], // x, y, width, height, corner radius,\n        \"scale controlled args\": [] // no scaled graphics\n      },\n      {\n        order: 6,\n        command: \"generateTexture\",\n        args: [\"cursor_on\", 16, 16], // key, scale width, scale height\n        \"scale controlled args\": [] // no scaled graphics\n      },\n    ]\n  },\n  {\n    comment: \"CREATE CURSOR SPRITE\",\n    type: \"sprite\",\n    args: [\n      0, // x\n      0, // y\n      \"cursor_on\" // texture\n    ],\n    position: {\n      x: {\n        fixed: 0.5,\n        offset: {\n          field: \"promptField4\"\n        }\n      },\n      y: 16\n    },\n    origin: [0, 0.5],\n    dynamicField: \"blinkingCursor4\"\n  }\n]",
                                  "order": "4",
                                  "uid": "kvmcoil97uar3ieqhed"
                                }
                              ],
                              "uid": "kvmcoil9a85776gxp5d"
                            }
                          ],
                          "design": [],
                          "uid": "kvkcv6pkebyrx3t36an"
                        },
                        {
                          "title": "Key Listeners",
                          "order": 5,
                          "content": "The UI class will have key listeners for the following views:",
                          "requires design": true,
                          "children": [
                            {
                              "title": "Lucky Number Listener",
                              "order": 1,
                              "content": "A listener will exist for the Lucky Number phase",
                              "children": [],
                              "design": [
                                {
                                  "classUid": "kvkcv6pjcr91c7n5xut",
                                  "tags": [
                                    "code",
                                    "key listener handler"
                                  ],
                                  "entryKey": "AKALABETH_CHARACTER_CREATION_LUCKY_NUMBER",
                                  "code": "switch (event.key) {\n  case \"1\":\n  case \"2\":\n  case \"3\":\n  case \"4\":\n  case \"5\":\n  case \"6\":\n  case \"7\":\n  case \"8\":\n  case \"9\":\n  case \"0\":\n    {\n      // set lucky number\n      RetroC64AkalabethController.luckyNumber = event.key;\n      \n      // display lucky number\n      context._dynamicFields.setText(\"luckyField1\", [context._dynamicFields.getText(\"luckyField1\"), RetroC64AkalabethController.luckyNumber].join(\"\"));\n      context._dynamicFields.setText(\"luckyField2\", context._dynamicFields.getText(\"luckyField1\"));\n      \n      // move cursor to the right\n      context.moveCursor(\"blinkingCursor1\", -0.5, 5, \"luckyField1\");\n\n      // start the timer to go to the next screen\n      context._scene.time.delayedCall(\n        context._keyEntryDelay, // milliseconds\n        function () {\n          // reset the text and move the cursor back\n          this._dynamicFields.setText(\"luckyField1\", \"TYPE THY LUCKY NUMBER (0-9)..... \");\n          this.moveCursor(\"blinkingCursor1\", -0.5, 5, \"luckyField1\");\n          \n          // go to the next state\n          this._state = RetroC64Constants.AKALABETH_CHARACTER_CREATION_LEVEL_OF_PLAY;\n          this._stateChangeResolved = false;\n        }, // callback function\n        [], // args\n        context\n      ); // the scope object\n    }\n    break;\n}",
                                  "order": "1",
                                  "uid": "kvmcqiz1cqh1y7sk9cp"
                                }
                              ],
                              "uid": "kvmcqiz1ij3q4djpmv"
                            },
                            {
                              "title": "Level of Play Listener",
                              "order": 2,
                              "content": "A listener will exist for the level of play selection.",
                              "children": [],
                              "design": [
                                {
                                  "classUid": "kvkcv6pjcr91c7n5xut",
                                  "tags": [
                                    "code",
                                    "key listener handler"
                                  ],
                                  "entryKey": "AKALABETH_CHARACTER_CREATION_LEVEL_OF_PLAY",
                                  "code": "switch (event.key) {\n  case \"1\":\n  case \"2\":\n  case \"3\":\n  case \"4\":\n  case \"5\":\n  case \"6\":\n  case \"7\":\n  case \"8\":\n  case \"9\":\n    {\n      // set level of play\n      RetroC64AkalabethController.levelOfPlay = event.key;\n      \n      // display level of play\n      context._dynamicFields.setText(\"levelOfPlayField2\", [\"LEVEL OF PLAY (1-10)...... \", RetroC64AkalabethController.levelOfPlay].join(\"\"));\n      \n      // move cursor to the right\n      context.moveCursor(\"blinkingCursor2\", -0.5, 7, \"levelOfPlayField2\");\n    }\n    break;\n  case \"0\":\n    {\n      console.log(RetroC64AkalabethController.levelOfPlay, )\n      if (RetroC64AkalabethController.levelOfPlay === 1) {\n        // set level of play to 10\n        RetroC64AkalabethController.levelOfPlay = 10;\n        console.log(RetroC64AkalabethController.levelOfPlay)\n        // display level of play\n      context._dynamicFields.setText(\"levelOfPlayField2\", [\"LEVEL OF PLAY (1-10)...... \", RetroC64AkalabethController.levelOfPlay].join(\"\"));\n        \n        // move cursor to the right\n        context.moveCursor(\"blinkingCursor2\", -0.5, 7, \"levelOfPlayField2\");\n      }\n    }\n    break;\n  case \"Enter\":\n    {\n      if (RetroC64AkalabethController.levelOfPlay > 0) {\n        // start the timer to go to the next screen\n        context._scene.time.delayedCall(\n          context._keyEntryDelay, // milliseconds\n          function () {\n            // reset the text and move the cursor back\n            this._dynamicFields.setText(\"luckyField2\", \"\");\n            this._dynamicFields.setText(\"levelOfPlayField2\", \"LEVEL OF PLAY (1-10)...... \");\n            this.moveCursor(\"blinkingCursor2\", -0.5, 7, \"levelOfPlayField2\");\n            \n            // go to the next state\n            RetroC64AkalabethController.character.newCharacter();\n            this._state = RetroC64Constants.AKALABETH_CHARACTER_CREATION_REVIEW_CHARACTER;\n            this._stateChangeResolved = false;\n          }, // callback function\n          [], // args\n          context\n        ); // the scope object\n      }\n    }\n    break;\n  case \"Backspace\":\n    {\n      if (RetroC64AkalabethController.levelOfPlay > 0) {\n        if (RetroC64AkalabethController.levelOfPlay / 10 === 1) {\n          // set level of play\n          RetroC64AkalabethController.levelOfPlay = 1;\n          \n          // display level of play\n          context._dynamicFields.setText(\"levelOfPlayField2\", [\"LEVEL OF PLAY (1-10)...... \", RetroC64AkalabethController.levelOfPlay].join(\"\"));\n        } else {                \n          // set level of play\n          RetroC64AkalabethController.levelOfPlay = 0;\n          \n          // display level of play\n          context._dynamicFields.setText(\"levelOfPlayField2\", \"LEVEL OF PLAY (1-10)...... \");                \n        }\n        // move cursor to the right\n        context.moveCursor(\"blinkingCursor2\", -0.5, 7, \"levelOfPlayField2\");\n      }\n    }\n    break;\n}",
                                  "order": "2",
                                  "uid": "kvmcwt8bz50mamjt16i"
                                }
                              ],
                              "uid": "kvmcwt8a9ncxyvewp3"
                            },
                            {
                              "title": "Review Character Listener",
                              "order": 3,
                              "content": "A listener will exist for the character review.",
                              "children": [],
                              "design": [
                                {
                                  "classUid": "kvkcv6pjcr91c7n5xut",
                                  "tags": [
                                    "code",
                                    "key listener handler"
                                  ],
                                  "entryKey": "AKALABETH_CHARACTER_CREATION_REVIEW_CHARACTER",
                                  "code": "switch (event.key) {\n  case \"Y\":\n  case \"y\":\n    {\n      // display entry\n      context._dynamicFields.setText(\"promptField3\", \"SHALT THOU PLAY WITH THESE QUALITIES (Y OR N)? YES\");\n      \n      // move cursor to the right\n      context.moveCursor(\"blinkingCursor3\", -0.5, 14, \"promptField3\");\n      // start the timer to go to the next screen\n      context._scene.time.delayedCall(\n        context._keyEntryDelay, // milliseconds\n        function () {\n          // reset the text and move the cursor back\n          this._dynamicFields.setText(\"promptField3\", \"SHALT THOU PLAY WITH THESE QUALITIES (Y OR N)? \");\n          this.moveCursor(\"blinkingCursor3\", -0.5, 14, \"promptField3\");\n          \n          // go to the next state\n          this._state = RetroC64Constants.AKALABETH_CHARACTER_CREATION_SELECT_CLASS;\n          this._stateChangeResolved = false;\n        }, // callback function\n        [], // args\n        context\n      ); // the scope object\n    }\n    break;\n  case \"N\":\n  case \"n\":\n    {\n      // display entry\n      context._dynamicFields.setText(\"promptField3\", \"SHALT THOU PLAY WITH THESE QUALITIES (Y OR N)? NO\");\n      \n      // move cursor to the right\n      context.moveCursor(\"blinkingCursor3\", -0.5, 14, \"promptField3\");\n      // start the timer to go to the next screen\n      context._scene.time.delayedCall(\n        context._keyEntryDelay, // milliseconds\n        function () {\n          // reset the text and move the cursor back\n          this._dynamicFields.setText(\"promptField3\", \"SHALT THOU PLAY WITH THESE QUALITIES (Y OR N)? \");\n          this.moveCursor(\"blinkingCursor3\", -0.5, 14, \"promptField3\");\n          \n          // re-roll stats\n          RetroC64AkalabethController.character.newCharacter();\n        }, // callback function\n        [], // args\n        context\n      ); // the scope object\n    }\n    break;\n}",
                                  "order": "3",
                                  "uid": "kvmcyirxgfo2f7mulv6"
                                }
                              ],
                              "uid": "kvmcyirwd0ckkqd5e4g"
                            },
                            {
                              "title": "Character Class Selection",
                              "order": 4,
                              "content": "A listener will exist for the character class selection.",
                              "children": [],
                              "design": [
                                {
                                  "classUid": "kvkcv6pjcr91c7n5xut",
                                  "tags": [
                                    "code",
                                    "key listener handler"
                                  ],
                                  "entryKey": "AKALABETH_CHARACTER_CREATION_SELECT_CLASS",
                                  "code": "let valid = false;\nswitch (event.key) {\n  case \"F\":\n  case \"f\":\n    {\n      // display entry\n      context._dynamicFields.setText(\"promptField4\", \"FIGHTER\");\n\n      // set the class\n      RetroC64AkalabethController.character.class = \"F\";\n\n      // validate the class\n      valid = true;\n    }\n    break;\n  case \"M\":\n  case \"m\":\n    {\n      // display entry\n      context._dynamicFields.setText(\"promptField4\", \"MAGE\");\n\n      // set the class\n      RetroC64AkalabethController.character.class = \"M\";\n\n      // validate the class\n      valid = true;\n    }\n    break;\n}\nif (valid) {\n  // move cursor to the right\n  context.moveCursor(\"blinkingCursor4\", 0.5, 16, \"promptField4\");\n  // start the timer to go to the next screen\n  context._scene.time.delayedCall(\n    context._keyEntryDelay, // milliseconds\n    function () {\n      // reset the text and move the cursor back\n      this._dynamicFields.setText(\"promptField4\", \"\");\n      this.moveCursor(\"blinkingCursor4\", 0.5, 16, \"promptField4\");\n      \n      // reset the state and go to the next scene\n      this._state = RetroC64Constants.AKALABETH_CHARACTER_CREATION_LUCKY_NUMBER;\n      this._stateChangeResolved = false;\n      RetroC64SceneController.gotoState({ state: RetroC64Constants.AKALABETH_EQUIPMENT_SHOP });\n    }, // callback function\n    [], // args\n    context\n  ); // the scope object\n}",
                                  "order": "4",
                                  "uid": "kvmd3wbab2ocn0npa7c"
                                }
                              ],
                              "uid": "kvmd3wbabt08jgwzuvf"
                            }
                          ],
                          "design": [],
                          "uid": "kvkcv6pkx1209ns6dx"
                        },
                        {
                          "title": "Updates to the 'create' methods",
                          "order": 6,
                          "content": "The UI class will have the following updates to the 'create' method:",
                          "children": [],
                          "design": [
                            {
                              "tags": [
                                "create",
                                "code"
                              ],
                              "uid": "kvkdm7iakgiy9xk5sxl",
                              "classUid": "kvkcv6pjcr91c7n5xut",
                              "code": "// start the cursor animation\nthis._dynamicFields.getObject(\"blinkingCursor1\")[0].anims.create({\n  key: \"blink\",\n  frames: [\n    { key: \"cursor_off\" },\n    { key: \"cursor_on\" }\n  ],\n  frameRate: 2,\n  repeat: -1 // repeat infinitely\n});\nthis._dynamicFields.getObject(\"blinkingCursor1\")[0].play(\"blink\");\n\nthis._dynamicFields.getObject(\"blinkingCursor2\")[0].anims.create({\n  key: \"blink\",\n  frames: [\n    { key: \"cursor_off\" },\n    { key: \"cursor_on\" }\n  ],\n  frameRate: 2,\n  repeat: -1 // repeat infinitely\n});\nthis._dynamicFields.getObject(\"blinkingCursor2\")[0].play(\"blink\");\n\nthis._dynamicFields.getObject(\"blinkingCursor3\")[0].anims.create({\n  key: \"blink\",\n  frames: [\n    { key: \"cursor_off\" },\n    { key: \"cursor_on\" }\n  ],\n  frameRate: 2,\n  repeat: -1 // repeat infinitely\n});\nthis._dynamicFields.getObject(\"blinkingCursor3\")[0].play(\"blink\");\n\nthis._dynamicFields.getObject(\"blinkingCursor4\")[0].anims.create({\n  key: \"blink\",\n  frames: [\n    { key: \"cursor_off\" },\n    { key: \"cursor_on\" }\n  ],\n  frameRate: 2,\n  repeat: -1 // repeat infinitely\n});\nthis._dynamicFields.getObject(\"blinkingCursor4\")[0].play(\"blink\");\nRetroC64AkalabethController.character.addWatcher(this);\nRetroC64AkalabethController.character.notifyWatchers(); ",
                              "order": "1"
                            }
                          ],
                          "uid": "kvkcv6pkc1witihz1j6"
                        },
                        {
                          "title": "Initial State",
                          "order": 7,
                          "content": "The UI Scene's initial state should be set in the Constructor Body",
                          "children": [],
                          "design": [],
                          "uid": "kvkcv6pkloben26g24"
                        },
                        {
                          "title": "Scene start/reset",
                          "order": 8,
                          "content": "When the UI scene is started/reset, the following changes are applied for each view:",
                          "children": [],
                          "design": [],
                          "uid": "kvkcv6pkvv683969fs"
                        },
                        {
                          "title": "Public Members",
                          "order": 9,
                          "content": "Occasionally, a UI Scene will need some further public members added.  This UI has added the following public members:",
                          "children": [
                            {
                              "title": "Move Cursor",
                              "order": 1,
                              "content": "A member to move the cursor to a specific location has been added.",
                              "children": [],
                              "design": [
                                {
                                  "classUid": "kvkcv6pjcr91c7n5xut",
                                  "tags": [
                                    "code",
                                    "public member"
                                  ],
                                  "memberName": "moveCursor",
                                  "memberDefinition": "/**\n * Moves the cursor to the right of a specific field.\n * @param {string} cursorId the cursor sprite's unique id\n * @param {Number} column the column where the cursor will be placed\n * @param {Number} row the row where the cursor will be placed\n * @param {string} offsetField the id of the field the cursor will be placed next to\n */",
                                  "arguments": "cursorId, column, row, offsetField",
                                  "code": "let x = column + this._dynamicFields.getObject(offsetField)[0].width / this._COLUMN_WIDTH; // to the right of the offset field\nx += 2 / this._COLUMN_WIDTH; // add 2px buffer\nlet y = row - 1 / this._ROW_HEIGHT; // move up 1 pixel (looks better);\nthis._grid.placeAt(x, y, this._dynamicFields.getObject(cursorId)[0]);",
                                  "order": "1",
                                  "uid": "kvmf487o7q1vxofeztp"
                                }
                              ],
                              "uid": "kvmf487lkq5tdv5ht4b"
                            },
                            {
                              "title": "Watch Updated",
                              "order": 2,
                              "content": "A member will be added to react to updates to the Character instance.",
                              "children": [],
                              "design": [
                                {
                                  "classUid": "kvkcv6pjcr91c7n5xut",
                                  "tags": [
                                    "code",
                                    "public member"
                                  ],
                                  "memberName": "watchUpdated",
                                  "memberDefinition": "/**\n * Handles updates to a Watchable instance.\n * @param {Watchable} data the Watchable instance being updated\n */",
                                  "arguments": "data",
                                  "code": "// call base\nWatcher.prototype.watchUpdated.call(this, data);\n// update fields\nthis._dynamicFields.setText(\"hpValue3\", data.hitPoints);\nthis._dynamicFields.setText(\"strValue3\", data.strength);\nthis._dynamicFields.setText(\"dexValue3\", data.dexterity);\nthis._dynamicFields.setText(\"stValue3\", data.stamina);\nthis._dynamicFields.setText(\"wisValue3\", data.wisdom);\nthis._dynamicFields.setText(\"goldValue3\", data.gold);\nthis._dynamicFields.setText(\"hpValue4\", data.hitPoints);\nthis._dynamicFields.setText(\"strValue4\", data.strength);\nthis._dynamicFields.setText(\"dexValue4\", data.dexterity);\nthis._dynamicFields.setText(\"stValue4\", data.stamina);\nthis._dynamicFields.setText(\"wisValue4\", data.wisdom);\nthis._dynamicFields.setText(\"goldValue4\", data.gold);",
                                  "order": "2",
                                  "uid": "kvmf7allkh9fcr0dhyf"
                                }
                              ],
                              "uid": "kvmf7alkgxcgxh88u5i"
                            }
                          ],
                          "design": [],
                          "uid": "kvkcv6pk739v76yxjrp"
                        }
                      ],
                      "design": [],
                      "uid": "kvkcv6pi81hjr72vgo6"
                    }
                  ],
                  "design": [],
                  "uid": "kvk5yu7a4tp0kcpe14"
                }
              ],
              "design": [],
              "uid": "kvk5yu77z3rh920u8c"
            },
            {
              "title": "The Shop View",
              "order": 2,
              "content": "After creating a character, the player will then be taken to the Shop View, where they will have the opportunity to purchase equipment for their character.",
              "children": [
                {
                  "title": "The Scene Container Class",
                  "order": 1,
                  "content": "A Scene Container class will need to be defined.  The Scene Container template will be used.",
                  "children": [],
                  "design": [
                    {
                      "classTitle": "Akalabeth Shop Scene",
                      "classHandle": "AkalabethShopScene",
                      "fileHandle": "akalabeth-shop-scene",
                      "tags": [
                        "class",
                        "scene-container"
                      ],
                      "classDefinition": "The Scene Container for rendering the Equipment Shop scene.",
                      "weight": "1",
                      "uid": "kv2ekqo1d2jfg5tlkbg",
                      "filePath": [
                        "scenes",
                        "akalabeth",
                        "shop"
                      ]
                    }
                  ],
                  "uid": "kv2ee93acqjcvdfu63q"
                },
                {
                  "title": "File Imports",
                  "order": 2,
                  "content": "The Scene Container class will require the following imports:\n\n* Shop Scene UI\n\nThe Game class will require the following imports:\n\n* Shop Scene",
                  "requires design": true,
                  "children": [],
                  "design": [
                    {
                      "classUid": "kv2ekqo1d2jfg5tlkbg",
                      "importHandle": "RetroC64ShopSceneUI",
                      "importPath": "./intro/retroc64-shop-scene-ui",
                      "tags": [
                        "code",
                        "required import"
                      ],
                      "uid": "kv2ey38n9hh5oncjika"
                    },
                    {
                      "classUid": "AF89DG9sgahg9",
                      "importHandle": "RetroC64AkalabethShopScene",
                      "importPath": "../scenes/akalabeth/shop/retroc64-akalabeth-shop-scene",
                      "tags": [
                        "code",
                        "required import"
                      ],
                      "uid": "kv2fkxo8y4mahtnc8r"
                    }
                  ],
                  "uid": "kv2ee93ahbnkk2x58fs"
                },
                {
                  "title": "Postboot Processing",
                  "order": 3,
                  "content": "The Scene Container class will need to be added to the Game class postboot processing.",
                  "requires design": true,
                  "children": [],
                  "design": [
                    {
                      "classUid": "AF89DG9sgahg9",
                      "tags": [
                        "code",
                        "postboot"
                      ],
                      "code": "_game.scene.queueOp(\"start\", \"AkalabethShopScene\");",
                      "order": "2",
                      "uid": "kv2fnotrrxtiwme34a"
                    }
                  ],
                  "uid": "kv2ee93ajy0121qmoxq"
                },
                {
                  "title": "Scene Key",
                  "order": 4,
                  "content": "The Scene Container class will need to be added to the scene groups in the Scene Controller class.",
                  "requires design": true,
                  "children": [],
                  "design": [
                    {
                      "classUid": "kuvp9k2j3kwh9rvfmqg",
                      "tags": [
                        "code",
                        "scene group"
                      ],
                      "sceneKey": "[RetroC64Constants.AKALABETH_EQUIPMENT_SHOP]",
                      "sceneValue": "\"AkalabethShopScene\"",
                      "order": "2",
                      "uid": "kv2fu4qiz1eu9ceusy"
                    }
                  ],
                  "uid": "kv2ee93b99or3qa4mje"
                },
                {
                  "title": "Scene states",
                  "order": 5,
                  "content": "A State Group will need to be added to the App Constants for this Scene Container",
                  "requires design": true,
                  "children": [],
                  "design": [
                    {
                      "classUid": "kuvp9k2jit3fzra9nj9",
                      "groupName": "AKALABETH_EQUIPMENT_SHOP_STATES",
                      "tags": [
                        "code",
                        "group properties"
                      ],
                      "elements": [
                        {
                          "elementName": "AKALABETH_EQUIPMENT_SHOP_PURCHASE",
                          "elementValue": "1",
                          "elementDefinition": "The initial state, where the player can purchase equipment.",
                          "order": 1
                        }
                      ],
                      "uid": "kv2h4h4opbvzt4ddfb"
                    },
                    {
                      "tags": [
                        "scoped dictionary body 0",
                        "code"
                      ],
                      "uid": "kv2ofr6mv8nayuqrp5",
                      "classUid": "kv2ekqo1d2jfg5tlkbg",
                      "dictionaryKey": "[RetroC64Constants.AKALABETH_EQUIPMENT_SHOP_PURCHASE]",
                      "dictionaryDefinition": "the scene instances displayed during the equipment purchase state",
                      "dictionaryValue": "[_akalabethShopPlayerStatsInterface, _akalabethShopInventoryInterface, _akalabethShopCommandsInterface]"
                    }
                  ],
                  "uid": "kv2ee93buo4ajfi9j4s"
                },
                {
                  "title": "Scene Initial State",
                  "order": 6,
                  "content": "The Scene Container initial state is set in the 'create' method of the Scene Controller class. It will be set to the following state:\n\n* AKALABETH_EQUIPMENT_SHOP_PURCHASE",
                  "requires design": true,
                  "children": [],
                  "design": [
                    {
                      "classUid": "kuvp9k2j3kwh9rvfmqg",
                      "tags": [
                        "code",
                        "create"
                      ],
                      "code": "\n// set initial state for Equipment Shop\n[app-handle]AkalabethShopScene.state = [app-handle]Constants.AKALABETH_EQUIPMENT_SHOP_PURCHASE;",
                      "order": "2",
                      "uid": "kv2hne2gighi7brjm4"
                    }
                  ],
                  "uid": "kv2ee93boxg6nsjj8af"
                },
                {
                  "title": "Private Fields",
                  "order": 7,
                  "content": "The Scene Container will have the following private fields:",
                  "children": [
                    {
                      "title": "The callback state",
                      "order": 1,
                      "content": "The Shop will track the state to which it calls back in the Scene Controller",
                      "children": [],
                      "design": [
                        {
                          "classUid": "kv2ekqo1d2jfg5tlkbg",
                          "tags": [
                            "code",
                            "private field"
                          ],
                          "fieldName": "_callbackState",
                          "fieldType": "int",
                          "fieldValue": "RetroC64Constants.AKALABETH_SETUP",
                          "fieldDefinition": "The Shop will track the state to which it calls back in the Scene Controller",
                          "order": "1",
                          "uid": "kvqvo7lci8db1bw63k"
                        },
                        {
                          "classUid": "kv2ekqo1d2jfg5tlkbg",
                          "tags": [
                            "code",
                            "public getter/setter property"
                          ],
                          "propertyName": "callbackState",
                          "getterDefinition": "/**\n * Getter for field _callbackState.\n */",
                          "getterBody": "return _callbackState;",
                          "setterDefinition": "/**\n * Setter for field _callbackState.\n * @param {PropertyKey} value the value\n */",
                          "setterBody": "if (isNaN(parseInt(value))) {\n  throw [\"Invalid value\", value];\n}\n_callbackState = value;",
                          "order": "1",
                          "uid": "kvqvo7ldhvw6c9nwax"
                        }
                      ],
                      "uid": "kvqvo7lca6k5ner6ik"
                    }
                  ],
                  "design": [],
                  "uid": "kvqvlmypsgtkc923veh"
                },
                {
                  "title": "Child Scenes",
                  "order": 8,
                  "content": "The Scene Container is just that: a container.  It will manage the following child scenes:",
                  "requires design": true,
                  "children": [
                    {
                      "title": "Shop Player Stats UI",
                      "order": 1,
                      "content": "A UI class for displaying the player's stats and equipment will fill the top half of the screen.",
                      "children": [
                        {
                          "title": "The UI Scene Class",
                          "order": 1,
                          "content": "A UI class will need to be defined.  The Ui Scene template will be used.",
                          "children": [],
                          "design": [
                            {
                              "classTitle": "Akalabeth Shop Player Stats Interface",
                              "classHandle": "AkalabethShopPlayerStatsInterface",
                              "fileHandle": "akalabeth-shop-player-stats-interface",
                              "tags": [
                                "class",
                                "ui-scene"
                              ],
                              "classDefinition": "A UI class for displaying the player's stats and equipment will fill the top half of the screen.",
                              "weight": "0.5",
                              "uid": "kv6x6lqoni6m08uuxi",
                              "filePath": [
                                "scenes",
                                "akalabeth",
                                "shop"
                              ],
                              "initialState": "AKALABETH_EQUIPMENT_SHOP_PURCHASE",
                              "gridWidth": "5",
                              "gridHeight": "24"
                            }
                          ],
                          "uid": "kv6x6lqpeeog10lq0jt"
                        },
                        {
                          "title": "File Imports",
                          "order": 2,
                          "content": "The UI class will require the following imports:\n* Scene Contoller\n* Parent Scene",
                          "children": [],
                          "design": [
                            {
                              "classUid": "kv6x6lqoni6m08uuxi",
                              "importHandle": "RetroC64SceneController",
                              "importPath": "../../../scenes/retroc64-scene-controller",
                              "tags": [
                                "code",
                                "required import"
                              ],
                              "uid": "kv6x6lqpekn47qb4v5"
                            },
                            {
                              "classUid": "kv6x6lqoni6m08uuxi",
                              "importHandle": "RetroC64AkalabethShopScene",
                              "importPath": "./retroc64-akalabeth-shop-scene",
                              "tags": [
                                "code",
                                "required import"
                              ],
                              "uid": "kv6x6lqp91sio5hbb3"
                            },
                            {
                              "classUid": "kv2ekqo1d2jfg5tlkbg",
                              "importHandle": "RetroC64AkalabethShopPlayerStatsInterface",
                              "importPath": "./retroc64-akalabeth-shop-player-stats-interface",
                              "tags": [
                                "code",
                                "required import"
                              ],
                              "uid": "kv6x6lqpm0hhqub4g9e"
                            }
                          ],
                          "uid": "kv6x6lqpqllw1f3fyds"
                        },
                        {
                          "title": "Private Fields",
                          "order": 3,
                          "content": "The UI class will be added as a private member of its scene parent.\nThe Ui Scene will have the following private fields:",
                          "children": [],
                          "design": [
                            {
                              "classUid": "kv2ekqo1d2jfg5tlkbg",
                              "tags": [
                                "code",
                                "private field"
                              ],
                              "fieldName": "_akalabethShopPlayerStatsInterface",
                              "fieldType": "UiScene",
                              "fieldValue": "new RetroC64AkalabethShopPlayerStatsInterface({ scene: _scene, show: false })",
                              "fieldDefinition": "RetroC64AkalabethShopPlayerStatsInterface instance",
                              "order": "10",
                              "uid": "kv6x6lqpbkrcvp0n4gf"
                            }
                          ],
                          "uid": "kv6x6lqp79bc56nf1e2"
                        },
                        {
                          "title": "View Templates",
                          "order": 4,
                          "content": "The UI class will have defined templates for each view. These will be added to the Constructor Body. Templates have been defined for the following views:",
                          "requires design": true,
                          "children": [
                            {
                              "title": "The Main Shop View",
                              "order": 1,
                              "content": "The main view for this UI will display the player's stats and inventory",
                              "children": [],
                              "design": [
                                {
                                  "classUid": "kv6x6lqoni6m08uuxi",
                                  "tags": [
                                    "code",
                                    "view template"
                                  ],
                                  "entryKey": "AKALABETH_EQUIPMENT_SHOP_PURCHASE",
                                  "code": "group: null,\ncomment: [\n  \"THE SHOP VIEW IS BROKEN OUT INTO THREE ROWS:\",\n  \"TOP - PLAYER STATS AND EQUIPMENT\",\n  \"MIDDLE - USER COMMAND SUMMARY AND ENTRY\",\n  \"BOTTOM - EQUIPMENT FOR PURCHASE\",\n  \"THIS IS THE TOP ROW\"\n],\nchildren: [\n  {\n    comment: \"COLUMN 1 HEADER\",\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"STAT'S\", // text\n    ],\n    position: [0.5, 1],\n    tint: 10920447\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"HIT POINTS.....\", // text\n    ],\n    position: {\n      x: {\n        fixed: -0.5,\n        offset: 2\n      },\n      y: 2\n    },\n    origin: [0, 0.5],\n    tint: 10920447\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"11\", // text\n    ],\n    position: [1, 2],\n    origin: [1, 0.5],\n    tint: 10920447,\n    dynamicField: \"hpValue\"\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"STRENGTH........\", // text\n    ],\n    position: {\n      x: {\n        fixed: -0.5,\n        offset: 2\n      },\n      y: 3\n    },\n    origin: [0, 0.5],\n    tint: 10920447\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"\", // text\n    ],\n    position: [1, 3],\n    origin: [1, 0.5],\n    tint: 10920447,\n    dynamicField: \"strValue\"\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"DEXTERITY.......\", // text\n    ],\n    position: {\n      x: {\n        fixed: -0.5,\n        offset: 2\n      },\n      y: 4\n    },\n    origin: [0, 0.5],\n    tint: 10920447\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"\", // text\n    ],\n    position: [1, 4],\n    origin: [1, 0.5],\n    tint: 10920447,\n    dynamicField: \"dexValue\"\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"STAMINA...........\", // text\n    ],\n    position: {\n      x: {\n        fixed: -0.5,\n        offset: 2\n      },\n      y: 5\n    },\n    origin: [0, 0.5],\n    tint: 10920447\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"\", // text\n    ],\n    position: [1, 5],\n    origin: [1, 0.5],\n    tint: 10920447,\n    dynamicField: \"stValue\"\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"WISDOM.............\", // text\n    ],\n    position: {\n      x: {\n        fixed: -0.5,\n        offset: 2\n      },\n      y: 6\n    },\n    origin: [0, 0.5],\n    tint: 10920447\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"\", // text\n    ],\n    position: [1, 6],\n    origin: [1, 0.5],\n    tint: 10920447,\n    dynamicField: \"wisValue\"\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"GOLD.................\", // text\n    ],\n    position: {\n      x: {\n        fixed: -0.5,\n        offset: 2\n      },\n      y: 7\n    },\n    origin: [0, 0.5],\n    tint: 10920447\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"\", // text\n    ],\n    position: [1, 7],\n    origin: [1, 0.5],\n    tint: 10920447,\n    dynamicField: \"goldValue\"\n  },\n  {\n    comment: [\n      \"************************************\",\n      \"COLUMN 2 HEADER\"\n    ],\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"WEAPONS\", // text\n    ],\n    position: [3.5, 1],\n    tint: 10920447\n  },\n  {\n    comment: [\"FOOD\"],\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"0\", // text\n    ],\n    position: [2.5, 2],\n    origin: [1, 0.5],\n    tint: 10920447,\n    dynamicField: \"foodCount\"\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"-FOOD\", // text\n    ],\n    position: [2.5, 2],\n    origin: [0, 0.5],\n    tint: 10920447\n  },\n  {\n    comment: [\"RAPIER\"],\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"0\", // text\n    ],\n    position: [2.5, 3],\n    origin: [1, 0.5],\n    tint: 10920447,\n    dynamicField: \"rapierCount\"\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"-RAPIER\", // text\n    ],\n    position: [2.5, 3],\n    origin: [0, 0.5],\n    tint: 10920447\n  },\n  {\n    comment: [\"AXE\"],\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"0\", // text\n    ],\n    position: [2.5, 4],\n    origin: [1, 0.5],\n    tint: 10920447,\n    dynamicField: \"axeCount\"\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"-AXE\", // text\n    ],\n    position: [2.5, 4],\n    origin: [0, 0.5],\n    tint: 10920447\n  },\n  {\n    comment: [\"SHUELD\"],\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"0\", // text\n    ],\n    position: [2.5, 5],\n    origin: [1, 0.5],\n    tint: 10920447,\n    dynamicField: \"shieldCount\"\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"-SHIELD\", // text\n    ],\n    position: [2.5, 5],\n    origin: [0, 0.5],\n    tint: 10920447\n  },\n  {\n    comment: [\"ARROWS\"],\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"0\", // text\n    ],\n    position: [2.5, 6],\n    origin: [1, 0.5],\n    tint: 10920447,\n    dynamicField: \"arrowCount\"\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"-BOW AND ARROWS\", // text\n    ],\n    position: [2.5, 6],\n    origin: [0, 0.5],\n    tint: 10920447\n  },\n  {\n    comment: [\"AMULET\"],\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"0\", // text\n    ],\n    position: [2.5, 7],\n    origin: [1, 0.5],\n    tint: 10920447,\n    dynamicField: \"amuletCount\"\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"-MAGIC AMULET\", // text\n    ],\n    position: [2.5, 7],\n    origin: [0, 0.5],\n    tint: 10920447\n  },\n]",
                                  "order": "1",
                                  "uid": "kvmgcupzy2gqvry1xuj"
                                }
                              ],
                              "uid": "kvmgcupxdnrkbnltfxw"
                            }
                          ],
                          "design": [],
                          "uid": "kv6x6lqpqqojjy7gl2e"
                        },
                        {
                          "title": "Key Listeners",
                          "order": 5,
                          "content": "The UI class will have key listeners for the following views:",
                          "requires design": true,
                          "children": [
                            {
                              "title": "Inactive Key Listener",
                              "order": 1,
                              "content": "The Key listener for this UI will be inactive.",
                              "children": [],
                              "design": [
                                {
                                  "classUid": "kv6x6lqoni6m08uuxi",
                                  "tags": [
                                    "code",
                                    "key listener handler"
                                  ],
                                  "entryKey": "AKALABETH_EQUIPMENT_SHOP_PURCHASE",
                                  "code": "",
                                  "order": "1",
                                  "uid": "kvmgedzf469sg1hm6ql"
                                }
                              ],
                              "uid": "kvmgedzf49psegvivn7"
                            }
                          ],
                          "design": [],
                          "uid": "kv6x6lqp1ly2lv0oto1"
                        },
                        {
                          "title": "Updates to the 'create' methods",
                          "order": 6,
                          "content": "The UI class will have the following updates to the 'create' method:",
                          "children": [],
                          "design": [
                            {
                              "classUid": "kv6x6lqoni6m08uuxi",
                              "tags": [
                                "code",
                                "create"
                              ],
                              "code": "RetroC64AkalabethController.character.addWatcher(this);\nRetroC64AkalabethController.character.notifyWatchers();",
                              "order": "1",
                              "uid": "kv74jo5ljzm41pjw83k"
                            }
                          ],
                          "uid": "kv6x6lqpa6kff457rc4"
                        },
                        {
                          "title": "Scene start/reset",
                          "order": 7,
                          "content": "When the UI scene is started/reset, the following changes are applied for each view:",
                          "children": [],
                          "design": [],
                          "uid": "kv6x6lqpo7wemh6cgzr"
                        },
                        {
                          "title": "Public Members",
                          "order": 8,
                          "content": "Occasionally, a UI Scene will need some further public members added.  This UI has added the following public members:\n\n* watchUpdated",
                          "children": [],
                          "design": [
                            {
                              "tags": [
                                "public member",
                                "code"
                              ],
                              "uid": "kv74qa0bhxzf83sbs7a",
                              "classUid": "kv6x6lqoni6m08uuxi",
                              "memberName": "watchUpdated",
                              "memberDefinition": "/**\n * Handles updates to a Watchable instance.\n * @param {Watchable} data the Watchable instance being updated\n */",
                              "arguments": "data",
                              "code": "// call base\nWatcher.prototype.watchUpdated.call(this, data);\n// update fields\nthis._dynamicFields.setText(\"hpValue\", data.hitPoints);\nthis._dynamicFields.setText(\"strValue\", data.strength);\nthis._dynamicFields.setText(\"dexValue\", data.dexterity);\nthis._dynamicFields.setText(\"stValue\", data.stamina);\nthis._dynamicFields.setText(\"wisValue\", data.wisdom);\nthis._dynamicFields.setText(\"goldValue\", data.gold);\nthis._dynamicFields.setText(\"foodCount\", data.getNumberInInventory(\"FOOD\"));\nthis._dynamicFields.setText(\"rapierCount\", data.getNumberInInventory(\"RAPIER\"));\nthis._dynamicFields.setText(\"axeCount\", data.getNumberInInventory(\"AXE\"));\nthis._dynamicFields.setText(\"shieldCount\", data.getNumberInInventory(\"SHIELD\"));\nthis._dynamicFields.setText(\"arrowCount\", data.getNumberInInventory(\"BOW AND ARROWS\"));\nthis._dynamicFields.setText(\"amuletCount\", data.getNumberInInventory(\"MAGIC AMULET\"));",
                              "order": "1"
                            }
                          ],
                          "uid": "kv74n5jf726gv0ct9fr"
                        }
                      ],
                      "design": [],
                      "uid": "kv6x6lqnjp7mztu97np"
                    },
                    {
                      "title": "Shop Commands UI",
                      "order": 2,
                      "content": "A UI class for displaying the commands available while in the shop.",
                      "children": [
                        {
                          "title": "The UI Scene Class",
                          "order": 1,
                          "content": "A UI class will need to be defined.  The Ui Scene template will be used.",
                          "children": [],
                          "design": [
                            {
                              "classTitle": "Akalabeth Shop Commands Interface",
                              "classHandle": "AkalabethShopCommandsInterface",
                              "fileHandle": "akalabeth-shop-commands-interface",
                              "tags": [
                                "class",
                                "ui-scene"
                              ],
                              "classDefinition": "A UI class for displaying the commands available while in the shop.",
                              "weight": "0.5",
                              "uid": "kv6xfb1k71dg3sn7c1v",
                              "filePath": [
                                "scenes",
                                "akalabeth",
                                "shop"
                              ],
                              "initialState": "AKALABETH_EQUIPMENT_SHOP_PURCHASE",
                              "gridWidth": "8",
                              "gridHeight": "24"
                            }
                          ],
                          "uid": "kv6xfb1kw1syjl6k5b"
                        },
                        {
                          "title": "File Imports",
                          "order": 2,
                          "content": "The UI class will require the following imports:\n* Scene Contoller\n* Parent Scene",
                          "children": [],
                          "design": [
                            {
                              "classUid": "kv6xfb1k71dg3sn7c1v",
                              "importHandle": "RetroC64SceneController",
                              "importPath": "../../../scenes/retroc64-scene-controller",
                              "tags": [
                                "code",
                                "required import"
                              ],
                              "uid": "kv6xfb1lye5r2z13ap"
                            },
                            {
                              "classUid": "kv6xfb1k71dg3sn7c1v",
                              "importHandle": "RetroC64ShopScene",
                              "importPath": "../retroc64-akalabeth-shop-scene",
                              "tags": [
                                "code",
                                "required import"
                              ],
                              "uid": "kv6xfb1lgzvpagiakwi"
                            },
                            {
                              "classUid": "kv2ekqo1d2jfg5tlkbg",
                              "importHandle": "RetroC64ShopCommandsUiScene",
                              "importPath": "./retroc64-akalabeth-shop-commands-interface",
                              "tags": [
                                "code",
                                "required import"
                              ],
                              "uid": "kv6xfb1lgd50r7duisl"
                            },
                            {
                              "classUid": "kv6xfb1k71dg3sn7c1v",
                              "importHandle": "RetroC64AkalabethController",
                              "importPath": "../../services/akalabeth/retroc64-akalabeth-controller",
                              "tags": [
                                "code",
                                "required import"
                              ],
                              "uid": "kv9nz3ldbkwg68bc5pa"
                            }
                          ],
                          "uid": "kv6xfb1lqcu1vrndrl8"
                        },
                        {
                          "title": "Private Fields",
                          "order": 3,
                          "content": "The UI class will be added as a private member of its scene parent.\nThe Ui Scene will have the following private fields:",
                          "children": [
                            {
                              "title": "Playing Animation",
                              "order": 1,
                              "content": "Flag indicating an animated sequence is playing.",
                              "children": [],
                              "design": [
                                {
                                  "classUid": "kv6xfb1k71dg3sn7c1v",
                                  "tags": [
                                    "code",
                                    "private field"
                                  ],
                                  "fieldName": "_playingAnimation",
                                  "fieldType": "boolean",
                                  "fieldValue": "false",
                                  "fieldDefinition": "Flag indicating an animated sequence is playing.",
                                  "order": "1",
                                  "uid": "kv9kccfoenxjpvfnd9j"
                                }
                              ],
                              "uid": "kv9kccfnzfbcrb0lebm"
                            },
                            {
                              "title": "Item Entry Dictionary",
                              "order": 2,
                              "content": "A dictionary of items for sale in the shop.",
                              "children": [],
                              "design": [
                                {
                                  "tags": [
                                    "private field",
                                    "code"
                                  ],
                                  "uid": "kv9km936v2hpb5h27s",
                                  "classUid": "kv6xfb1k71dg3sn7c1v",
                                  "fieldName": "_ITEM_ENTRIES",
                                  "fieldType": "dictionary",
                                  "fieldValue": "{\n    F: {\n      name: \"FOOD\",\n      count: 10,\n      price: 1,\n      purchaseMessage: \"YOU PURCHASE FOOD (YUM! CORNED BEEF HASH)\"\n    },\n    R: {\n      name: \"RAPIER\",\n      count: 1,\n      price: 8,\n      purchaseMessage: \"EN GARDE! YOU BUY A RAPIER\"\n    },\n    A: {\n      name: \"AXE\",\n      count: 1,\n      price: 5,\n      purchaseMessage: \"ENJOY YOUR AXE\"\n    },\n    S: {\n      name: \"SHIELD\",\n      count: 1,\n      price: 6,\n      purchaseMessage: \"HERE'S YOUR SHIELD\"\n    },\n    B: {\n      name: \"BOW AND ARROWS\",\n      count: 1,\n      price: 3,\n      purchaseMessage: \"A BOW AND SOME ARROWS - WATCH THE POINTY END\"\n    },\n    M: {\n      name: \"MAGIC AMULET\",\n      count: 1,\n      price: 15,\n      purchaseMessage: \"AN AMULET - OOOOH, MYSTERIOUS\"\n    }\n  }",
                                  "fieldDefinition": "A dictionary of items for sale in the shop.",
                                  "order": "2"
                                }
                              ],
                              "uid": "kv9km935pgyhckpyx4j"
                            },
                            {
                              "title": "Entry Delay",
                              "order": 4,
                              "content": "A delay of 2 seconds will occur after the player presses a key.",
                              "children": [],
                              "design": [
                                {
                                  "classUid": "kv6xfb1k71dg3sn7c1v",
                                  "tags": [
                                    "code",
                                    "private field"
                                  ],
                                  "fieldName": "_delay",
                                  "fieldType": "int",
                                  "fieldValue": "2000",
                                  "fieldDefinition": "A delay of 2 seconds will occur after the player presses a key.",
                                  "order": "4",
                                  "uid": "kvmis266n1ae2ramcf"
                                }
                              ],
                              "uid": "kvmis266tql7yi9yoh"
                            }
                          ],
                          "design": [
                            {
                              "classUid": "kv2ekqo1d2jfg5tlkbg",
                              "tags": [
                                "code",
                                "private field"
                              ],
                              "fieldName": "_akalabethShopCommandsInterface",
                              "fieldType": "UiScene",
                              "fieldValue": "new RetroC64AkalabethShopCommandsInterface({ scene: _scene, show: false })",
                              "fieldDefinition": "RetroC64AkalabethShopCommandsInterface instance",
                              "order": "10",
                              "uid": "kv6xfb1lqtkupbh42lj"
                            }
                          ],
                          "uid": "kv6xfb1lbu7793hi9vf"
                        },
                        {
                          "title": "View Templates",
                          "order": 4,
                          "content": "The UI class will have defined templates for each view. These will be added to the Constructor Body. Templates have been defined for the following views:",
                          "requires design": true,
                          "children": [
                            {
                              "title": "The Commands Display",
                              "order": 1,
                              "content": "The only view will display possible commands and reflect the player's choices.",
                              "children": [],
                              "design": [
                                {
                                  "classUid": "kv6xfb1k71dg3sn7c1v",
                                  "tags": [
                                    "code",
                                    "view template"
                                  ],
                                  "entryKey": "AKALABETH_EQUIPMENT_SHOP_PURCHASE",
                                  "code": "group: null,\ncomment: [\n  \"THE SHOP VIEW IS BROKEN OUT INTO THREE ROWS:\",\n  \"TOP - PLAYER STATS AND EQUIPMENT\",\n  \"MIDDLE - USER COMMAND SUMMARY AND ENTRY\",\n  \"BOTTOM - EQUIPMENT FOR PURCHASE\",\n  \"THIS IS THE TOP ROW\"\n],\nchildren: [\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"F-FOOD\", // text\n    ],\n    position: [0, 9],\n    origin: [0, 0.5],\n    tint: 10920447\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"R-RAPIER\", // text\n    ],\n    position: [0, 10],\n    origin: [0, 0.5],\n    tint: 10920447\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"A-AXE\", // text\n    ],\n    position: [3, 9],\n    origin: [0, 0.5],\n    tint: 10920447\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"S-SHIELD\", // text\n    ],\n    position: [3, 10],\n    origin: [0, 0.5],\n    tint: 10920447\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"Q-QUIT\", // text\n    ],\n    position: [3, 11],\n    origin: [0, 0.5],\n    tint: 10920447\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"B-BOW AND ARROW\", // text\n    ],\n    position: [5, 9],\n    origin: [0, 0.5],\n    tint: 10920447\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"M-MAGIC AMULET\", // text\n    ],\n    position: [5, 10],\n    origin: [0, 0.5],\n    tint: 10920447\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"WELCOME TO THE ADVENTURE SHOP\", // text\n    ],\n    position: {\n      x: {\n        fixed: -0.5,\n        offset: 2\n      },\n      y: 12\n    },\n    origin: [0, 0.5],\n    tint: 10920447\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"WHICH ITEM SHALT THOU BUY? \", // text\n    ],\n    position: {\n      x: {\n        fixed: -0.5,\n        offset: 2\n      },\n      y: 13\n    },\n    origin: [0, 0.5],\n    tint: 10920447,\n    dynamicField: \"promptField\"\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"\", // text\n    ],\n    position: {\n      x: {\n        fixed: -0.5,\n        offset: 2\n      },\n      y: 14\n    },\n    origin: [0, 0.5],\n    tint: 10920447,\n    dynamicField: \"messageField\"\n  },\n  {\n    comment: \"CREATE TWO IMAGES, CURSOR_ON AND CURSOR_OFF. OFF IS MADE FIRST, SINCE THE GRAPHICS NEEDS TO BE EMPTY\",\n    type: \"graphics-texture\",\n    commands: [\n      {\n        order: 1,\n        command: \"fillStyle\",\n        args: [0xA6A1FF, 0] // color, alpha\n      },\n      {\n        order: 2,\n        command: \"fillRect\",\n        args: [0, 0, 16, 16], // x, y, width, height, corner radius,\n        \"scale controlled args\": [] // no scaled graphics\n      },\n      {\n        order: 3,\n        command: \"generateTexture\",\n        args: [\"cursor_off\", 16, 16], // key, scale width, scale height\n        \"scale controlled args\": [] // no scaled graphics\n      },\n      {\n        order: 4,\n        command: \"fillStyle\",\n        args: [0xA6A1FF, 1] // color, alpha\n      },\n      {\n        order: 5,\n        command: \"fillRect\",\n        args: [0, 0, 16, 16], // x, y, width, height, corner radius,\n        \"scale controlled args\": [] // no scaled graphics\n      },\n      {\n        order: 6,\n        command: \"generateTexture\",\n        args: [\"cursor_on\", 16, 16], // key, scale width, scale height\n        \"scale controlled args\": [] // no scaled graphics\n      },\n    ]\n  },\n  {\n    comment: \"CREATE CURSOR SPRITE\",\n    type: \"sprite\",\n    args: [\n      0, // x\n      0, // y\n      \"cursor_on\" // texture\n    ],\n    position: {\n      x: {\n        fixed: -0.5,\n        offset: {\n          field: \"promptField\",\n          pixel: 2\n        }\n      },\n      y: {\n        fixed: 13,\n        offset: -1\n      }\n    },\n    origin: [0, 0.5],\n    dynamicField: \"blinkingCursor\"\n  }\n]",
                                  "order": "1",
                                  "uid": "kvmi2hdbl00ge4m2e8c"
                                }
                              ],
                              "uid": "kvmi2hdat6g3j8v8ume"
                            }
                          ],
                          "design": [],
                          "uid": "kv6xfb1ltbhx3huoj"
                        },
                        {
                          "title": "Key Listeners",
                          "order": 5,
                          "content": "The UI class will have key listeners for the following views:",
                          "requires design": true,
                          "children": [
                            {
                              "title": "Shop Interactivity",
                              "order": 1,
                              "content": "In the shop, player's will be allowed to purchase qualifying items, so long as they have the gold.",
                              "children": [],
                              "design": [
                                {
                                  "tags": [
                                    "key listener handler",
                                    "code"
                                  ],
                                  "uid": "kvmiqm5x3g0hdbiowqn",
                                  "classUid": "kv6xfb1k71dg3sn7c1v",
                                  "entryKey": "AKALABETH_EQUIPMENT_SHOP_PURCHASE",
                                  "code": "if (!context._playingAnimation) {\n  let callback = function() {\n    // clear the animation flag and the display\n    this._playingAnimation = false;\n    this._dynamicFields.setText(\"promptField\", \"WHICH ITEM SHALT THOU BUY? \");\n    this._dynamicFields.setText(\"messageField\", \"\");\n    \n    // move the cursor\n    context.moveCursor(\"blinkingCursor\", -0.5, 13, \"promptField\");\n  };\n  let message = \"\";\n  if (context._ITEM_ENTRIES.hasOwnProperty(event.key.toUpperCase())) {\n    let item = JSON.parse(JSON.stringify(context._ITEM_ENTRIES[event.key.toUpperCase()]));\n    \n    // display item entered\n    context._dynamicFields.setText(\"promptField\", [context._dynamicFields.getText(\"promptField\"), item.name].join(\"\"));\n    \n    // move cursor to the right\n    context.moveCursor(\"blinkingCursor\", -0.5, 13, \"promptField\");\n    \n    if ((item.name === \"RAPIER\" || item.name === \"BOW AND ARROWS\")\n        && RetroC64AkalabethController.character.class === \"M\") {\n      message = \"I'M SORRY - MAGES CAN'T USE THAT!\";\n    } else {\n      if (RetroC64AkalabethController.character.gold < item.price) {\n        message = \"M'LORD THOU CAN NOT AFFORD THAT ITEM.\";\n      } else {\n        message = item.purchaseMessage;\n        RetroC64AkalabethController.character.addToInventory(item);\n        RetroC64AkalabethController.character.gold -= item.price;\n      }\n    }\n  } else if (event.key.toUpperCase() === \"Q\") {\n    // display quit\n    context._dynamicFields.setText(\"promptField\", [context._dynamicFields.getText(\"promptField\"), \"QUIT\"].join(\"\"));\n    message = \"BYE\";\n    \n    // move cursor to the right\n    context.moveCursor(\"blinkingCursor\", -0.5, 13, \"promptField\");\n    \n    // change the callback function\n    callback = function() {\n      // clear the animation flag and the display\n      this._playingAnimation = false;\n      this._dynamicFields.setText(\"promptField\", \"WHICH ITEM SHALT THOU BUY? \");\n      this._dynamicFields.setText(\"messageField\", \"\");\n      \n      // move the cursor\n      context.moveCursor(\"blinkingCursor\", -0.5, 13, \"promptField\");\n      \n      // reset the state and go to the next scene\n      this._state = RetroC64Constants.AKALABETH_EQUIPMENT_SHOP_PURCHASE;\n      this._stateChangeResolved = false;\n      RetroC64SceneController.gotoState({ state: RetroC64AkalabethShopScene.callbackState });\n    };\n  } else {\n    // display item entered\n    context._dynamicFields.setText(\"promptField\", [context._dynamicFields.getText(\"promptField\"), event.key.toUpperCase()].join(\"\"));\n    message = \"I'M SORRY WE DON'T HAVE THAT.\";\n    \n    // move cursor to the right\n    context.moveCursor(\"blinkingCursor\", -0.5, 13, \"promptField\");\n  }\n  // display the message\n  context._dynamicFields.setText(\"messageField\", message);\n  \n  // begin animation sequence\n  context._playingAnimation = true;\n  \n  // after a pause, run the callback\n  context._scene.time.delayedCall(\n    context._delay, // milliseconds\n    callback, // callback function\n    [], // args\n    context // the scope object\n  );\n}",
                                  "order": "1"
                                }
                              ],
                              "uid": "kvmiqm5wyuou5grm7"
                            }
                          ],
                          "design": [],
                          "uid": "kv6xfb1lvr1xih7j6in"
                        },
                        {
                          "title": "Updates to the 'create' methods",
                          "order": 6,
                          "content": "The UI class will have the following updates to the 'create' method:",
                          "children": [],
                          "design": [
                            {
                              "classUid": "kv6xfb1k71dg3sn7c1v",
                              "tags": [
                                "code",
                                "create"
                              ],
                              "code": "this._dynamicFields.getObject(\"blinkingCursor\")[0].anims.create({\n  key: \"blink\",\n  frames: [\n    { key: \"cursor_off\" },\n    { key: \"cursor_on\" }\n  ],\n  frameRate: 2,\n  repeat: -1 // repeat infinitely\n});\nthis._dynamicFields.getObject(\"blinkingCursor\")[0].play(\"blink\");",
                              "order": "1",
                              "uid": "kv9h8oex6iagv5akd6e"
                            }
                          ],
                          "uid": "kv6xfb1l6ap3sjpelof"
                        },
                        {
                          "title": "Scene start/reset",
                          "order": 7,
                          "content": "When the UI scene is started/reset, the following changes are applied for each view:",
                          "children": [],
                          "design": [],
                          "uid": "kv6xfb1lfd2e8a793o4"
                        },
                        {
                          "title": "Public Members",
                          "order": 8,
                          "content": "The Shop Commands UI will have the following public members:\n\n* moveCursor - method for moving the cursor to several spots",
                          "children": [
                            {
                              "title": "Move Cursor",
                              "order": 1,
                              "content": "A member to move the cursor around will exist.",
                              "children": [],
                              "design": [
                                {
                                  "classUid": "kv6xfb1k71dg3sn7c1v",
                                  "tags": [
                                    "code",
                                    "public member"
                                  ],
                                  "memberName": "moveCursor",
                                  "memberDefinition": "/**\n * Moves the cursor to the right of a specific field.\n * @param {string} cursorId the cursor sprite's unique id\n * @param {Number} column the column where the cursor will be placed\n * @param {Number} row the row where the cursor will be placed\n * @param {string} offsetField the id of the field the cursor will be placed next to\n */",
                                  "arguments": "cursorId, column, row, offsetField",
                                  "code": "let x = column + this._dynamicFields.getObject(offsetField)[0].width / this._COLUMN_WIDTH; // to the right of the offset field\nx += 2 / this._COLUMN_WIDTH; // add 2px buffer\n  let y = row - 1 / this._ROW_HEIGHT; // move up 1 pixel (looks better);\nthis._grid.placeAt(x, y, this._dynamicFields.getObject(cursorId)[0]);",
                                  "order": "1",
                                  "uid": "kvmiweh5fpjlvt1tuwi"
                                }
                              ],
                              "uid": "kvmiweh4zesw46xtcfa"
                            }
                          ],
                          "design": [],
                          "uid": "kv9kio4u8zyx5vaqnml"
                        }
                      ],
                      "design": [],
                      "uid": "kv6xfb1j65m1i3ycgy6"
                    },
                    {
                      "title": "Shop Inventory Ui",
                      "order": 3,
                      "content": "A UI class for displaying the shop's inventory.",
                      "children": [
                        {
                          "title": "The UI Scene Class",
                          "order": 1,
                          "content": "A UI class will need to be defined.  The Ui Scene template will be used.",
                          "children": [],
                          "design": [
                            {
                              "classTitle": "Akalabeth Shop Inventory Interface",
                              "classHandle": "AkalabethShopInventoryInterface",
                              "fileHandle": "akalabeth-shop-inventory-interface",
                              "tags": [
                                "class",
                                "ui-scene"
                              ],
                              "classDefinition": "A UI class for displaying the shop's inventory.",
                              "weight": "0.5",
                              "uid": "kv6xjz4l5s5aims67tf",
                              "filePath": [
                                "scenes",
                                "akalabeth",
                                "shop"
                              ],
                              "initialState": "AKALABETH_EQUIPMENT_SHOP_PURCHASE",
                              "gridWidth": "8",
                              "gridHeight": "24"
                            }
                          ],
                          "uid": "kv6xjz4lz6szoj6cf3"
                        },
                        {
                          "title": "File Imports",
                          "order": 2,
                          "content": "The UI class will require the following imports:\n* Scene Contoller\n* Parent Scene",
                          "children": [],
                          "design": [
                            {
                              "classUid": "kv6xjz4l5s5aims67tf",
                              "importHandle": "RetroC64SceneController",
                              "importPath": "../../scenes/retroc64-scene-controller",
                              "tags": [
                                "code",
                                "required import"
                              ],
                              "uid": "kv6xjz4n60ezqj9qfaa"
                            },
                            {
                              "classUid": "kv6xjz4l5s5aims67tf",
                              "importHandle": "RetroC64AkalabethShopScene",
                              "importPath": "./retroc64-akalabeth-shop-scene",
                              "tags": [
                                "code",
                                "required import"
                              ],
                              "uid": "kv6xjz4o96r1kyr39u9"
                            },
                            {
                              "classUid": "kv2ekqo1d2jfg5tlkbg",
                              "importHandle": "RetroC64AkalabethShopInventoryInterface",
                              "importPath": "./retroc64-akalabeth-shop-inventory-interface",
                              "tags": [
                                "code",
                                "required import"
                              ],
                              "uid": "kv6xjz4o5fmvtra5d8b"
                            }
                          ],
                          "uid": "kv6xjz4o8yaps3r7vsa"
                        },
                        {
                          "title": "Private Fields",
                          "order": 3,
                          "content": "The UI class will be added as a private member of its scene parent.\nThe Ui Scene will have the following private fields:",
                          "children": [],
                          "design": [
                            {
                              "classUid": "kv2ekqo1d2jfg5tlkbg",
                              "tags": [
                                "code",
                                "private field"
                              ],
                              "fieldName": "_akalabethShopInventoryInterface",
                              "fieldType": "UiScene",
                              "fieldValue": "new RetroC64AkalabethShopInventoryInterface({ scene: _scene, show: false })",
                              "fieldDefinition": "RetroC64AkalabethShopInventoryInterface instance",
                              "order": "10",
                              "uid": "kv6xjz4o4mczmavgg8c"
                            }
                          ],
                          "uid": "kv6xjz4orumpxzt089d"
                        },
                        {
                          "title": "View Templates",
                          "order": 4,
                          "content": "The UI class will have defined templates for each view. These will be added to the Constructor Body. Templates have been defined for the following views:",
                          "requires design": true,
                          "children": [
                            {
                              "title": "The Item List",
                              "order": 1,
                              "content": "The Inventory UI will display a list of items for sale.",
                              "children": [],
                              "design": [
                                {
                                  "classUid": "kv6xjz4l5s5aims67tf",
                                  "tags": [
                                    "code",
                                    "view template"
                                  ],
                                  "entryKey": "AKALABETH_EQUIPMENT_SHOP_PURCHASE",
                                  "code": "group: null,\ncomment: [\n  \"THE SHOP VIEW IS BROKEN OUT INTO THREE ROWS:\",\n  \"TOP - PLAYER STATS AND EQUIPMENT\",\n  \"MIDDLE - USER COMMAND SUMMARY AND ENTRY\",\n  \"BOTTOM - EQUIPMENT FOR PURCHASE\",\n  \"THIS IS THE TOP ROW\"\n],\nchildren: [\n  {\n    comment: [\n      \"************************************\",\n      \"COLUMN 1 HEADER\"\n    ],\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"PRICE\", // text\n    ],\n    position: [1, 15],\n    origin: [0, 0.5],\n    tint: 10920447\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"1 FOR 10\", // text\n    ],\n    position: [1, 17],\n    origin: [0, 0.5],\n    tint: 10920447\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"8\", // text\n    ],\n    position: [1, 18],\n    origin: [0, 0.5],\n    tint: 10920447\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"5\", // text\n    ],\n    position: [1, 19],\n    origin: [0, 0.5],\n    tint: 10920447\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"6\", // text\n    ],\n    position: [1, 20],\n    origin: [0, 0.5],\n    tint: 10920447\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"3\", // text\n    ],\n    position: [1, 21],\n    origin: [0, 0.5],\n    tint: 10920447\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"15\", // text\n    ],\n    position: [1, 22],\n    origin: [0, 0.5],\n    tint: 10920447\n  },\n  {\n    comment: [\n      \"************************************\",\n      \"COLUMN 2 HEADER\"\n    ],\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"DAMAGE\", // text\n    ],\n    position: [3, 15],\n    origin: [0, 0.5],\n    tint: 10920447\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"N/A\", // text\n    ],\n    position: [3, 17],\n    origin: [0, 0.5],\n    tint: 10920447\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"1-10\", // text\n    ],\n    position: [3, 18],\n    origin: [0, 0.5],\n    tint: 10920447\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"1-5\", // text\n    ],\n    position: [3, 19],\n    origin: [0, 0.5],\n    tint: 10920447\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"1\", // text\n    ],\n    position: [3, 20],\n    origin: [0, 0.5],\n    tint: 10920447\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"1-4\", // text\n    ],\n    position: [3, 21],\n    origin: [0, 0.5],\n    tint: 10920447\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"?????\", // text\n    ],\n    position: [3, 22],\n    origin: [0, 0.5],\n    tint: 10920447\n  },\n  {\n    comment: [\n      \"************************************\",\n      \"COLUMN 3 HEADER\"\n    ],\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"ITEM\", // text\n    ],\n    position: [5, 15],\n    origin: [0, 0.5],\n    tint: 10920447\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"FOOD\", // text\n    ],\n    position: [5, 17],\n    origin: [0, 0.5],\n    tint: 10920447\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"RAPIER\", // text\n    ],\n    position: [5, 18],\n    origin: [0, 0.5],\n    tint: 10920447\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"AXE\", // text\n    ],\n    position: [5, 19],\n    origin: [0, 0.5],\n    tint: 10920447\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"SHIELD\", // text\n    ],\n    position: [5, 20],\n    origin: [0, 0.5],\n    tint: 10920447\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"BOW AND ARROWS\", // text\n    ],\n    position: [5, 21],\n    origin: [0, 0.5],\n    tint: 10920447\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"MAGIC AMULET\", // text\n    ],\n    position: [5, 22],\n    origin: [0, 0.5],\n    tint: 10920447\n  },\n]",
                                  "order": "1",
                                  "uid": "kvmh1jhgql3810dwsj"
                                }
                              ],
                              "uid": "kvmh1jhfggaq73dr4k9"
                            }
                          ],
                          "design": [],
                          "uid": "kv6xjz4oiclspcykzm"
                        },
                        {
                          "title": "Key Listeners",
                          "order": 5,
                          "content": "The UI class will have key listeners for the following views:",
                          "requires design": true,
                          "children": [
                            {
                              "title": "Inactive Key Listener",
                              "order": 1,
                              "content": "The key listener for this interface will be inactive",
                              "children": [],
                              "design": [
                                {
                                  "classUid": "kv6xjz4l5s5aims67tf",
                                  "tags": [
                                    "code",
                                    "key listener handler"
                                  ],
                                  "entryKey": "AKALABETH_EQUIPMENT_SHOP_PURCHASE",
                                  "code": "",
                                  "order": "1",
                                  "uid": "kvmhel06uh8wri0hsab"
                                }
                              ],
                              "uid": "kvmhel045uxzdq6t52"
                            }
                          ],
                          "design": [],
                          "uid": "kv6xjz4o6d6vaosrvx8"
                        },
                        {
                          "title": "Updates to the 'create' methods",
                          "order": 6,
                          "content": "The UI class will have the following updates to the 'create' method:",
                          "children": [],
                          "design": [],
                          "uid": "kv6xjz4o6uw87vidt47"
                        },
                        {
                          "title": "Scene start/reset",
                          "order": 7,
                          "content": "When the UI scene is started/reset, the following changes are applied for each view:",
                          "children": [],
                          "design": [],
                          "uid": "kv6xjz4onqpqsivst1o"
                        }
                      ],
                      "design": [],
                      "uid": "kv6xjz4h2x1tib7kcd8"
                    }
                  ],
                  "design": [],
                  "uid": "kv2ee93bykf74pwmuo"
                }
              ],
              "design": [],
              "uid": "kv2ee937ln1fc2gauc"
            },
            {
              "title": "The Setup View",
              "order": 3,
              "content": "While the game world is created, a wait screen is displayed.",
              "children": [
                {
                  "title": "The Scene Container Class",
                  "order": 1,
                  "content": "A Scene Container class will need to be defined.  The Scene Container template will be used.",
                  "children": [],
                  "design": [
                    {
                      "classTitle": "Akalabeth Setup Scene",
                      "classHandle": "AkalabethSetupScene",
                      "fileHandle": "akalabeth-setup-scene",
                      "tags": [
                        "class",
                        "scene-container"
                      ],
                      "classDefinition": "While the game world is created, a wait screen is displayed.",
                      "weight": "1",
                      "uid": "kv9uwd8gc0d4do96dy",
                      "filePath": [
                        "scenes",
                        "akalabeth",
                        "setup"
                      ]
                    }
                  ],
                  "uid": "kv9uwd8huyztqofrhyn"
                },
                {
                  "title": "File Imports",
                  "order": 2,
                  "content": "The Game class will include the Scene Container as a required import.\nThe Scene Container class will require the following imports:",
                  "requires design": true,
                  "children": [],
                  "design": [
                    {
                      "classUid": "AF89DG9sgahg9",
                      "importHandle": "RetroC64SetupScene",
                      "importPath": "../scenes/akalabeth/retroc64-akalabeth-setup-scene",
                      "tags": [
                        "code",
                        "required import"
                      ],
                      "uid": "kv9uwd8hkrvrf6li9c"
                    }
                  ],
                  "uid": "kv9uwd8h5mc1n17yg4w"
                },
                {
                  "title": "Postboot Processing",
                  "order": 3,
                  "content": "The Scene Container class will need to be added to the Game class postboot processing.",
                  "requires design": true,
                  "children": [],
                  "design": [
                    {
                      "classUid": "AF89DG9sgahg9",
                      "tags": [
                        "code",
                        "postboot"
                      ],
                      "code": "_game.scene.queueOp(\"start\", \"AkalabethSetupScene\");",
                      "order": "1",
                      "uid": "kv9uwd8hiphyb6m2n"
                    }
                  ],
                  "uid": "kv9uwd8h6z0gfe2qmkq"
                },
                {
                  "title": "Scene Key",
                  "order": 4,
                  "content": "The Scene Container class will need to be added to the scene groups in the Scene Controller class.",
                  "requires design": true,
                  "children": [],
                  "design": [
                    {
                      "classUid": "kuvp9k2j3kwh9rvfmqg",
                      "tags": [
                        "code",
                        "scene group"
                      ],
                      "sceneKey": "[RetroC64Constants.AKALABETH_SETUP]",
                      "sceneValue": "\"AkalabethSetupScene\"",
                      "order": "1",
                      "uid": "kv9uwd8h73fa9lqfvgc"
                    }
                  ],
                  "uid": "kv9uwd8hzlkgwjx0wfe"
                },
                {
                  "title": "Scene states",
                  "order": 5,
                  "content": "A State Group will need to be added to the App Constants for this Scene Container",
                  "requires design": true,
                  "children": [],
                  "design": [
                    {
                      "classUid": "kv9uwd8gc0d4do96dy",
                      "tags": [
                        "code",
                        "scoped dictionary body 0"
                      ],
                      "dictionaryKey": "[RetroC64Constants.AKALABETH_SETUP]",
                      "dictionaryDefinition": "the scene instances displayed during the setup view",
                      "dictionaryValue": "[_akalabethSetupInterface]",
                      "uid": "kv9w4u51d3ole567zeu"
                    }
                  ],
                  "uid": "kv9uwd8h2bjb2yn2lcd"
                },
                {
                  "title": "Scene Initial State",
                  "order": 6,
                  "content": "The Scene Container initial state is set in the 'create' method of the Scene Controller class. It will be set to the following state:",
                  "requires design": true,
                  "children": [],
                  "design": [
                    {
                      "classUid": "kuvp9k2j3kwh9rvfmqg",
                      "tags": [
                        "code",
                        "create"
                      ],
                      "code": "\n// set initial state for Equipment Shot\n[app-handle]AkalabethSetupScene.state = [app-handle]Constants.AKALABETH_SETUP;",
                      "order": "3",
                      "uid": "kv9vzyhndf2ziw888ko"
                    }
                  ],
                  "uid": "kv9uwd8he6lqgyyfcjf"
                },
                {
                  "title": "Child Scenes",
                  "order": 7,
                  "content": "The Scene Container is just that: a container.  It will manage the following child scenes:",
                  "requires design": true,
                  "children": [
                    {
                      "title": "Setup UI",
                      "order": 1,
                      "content": "A UI class for displaying a wait message while the world is populated. When this scene begins displaying, it will trigger the Game World to populate itself.  While this is happening, a 'Wait' message will appear on-screen. The UI scene will play for 10 cycles before moving on the the World Map.",
                      "children": [
                        {
                          "title": "The UI Scene Class",
                          "order": 1,
                          "content": "A UI class will need to be defined.  The Ui Scene template will be used.",
                          "children": [],
                          "design": [
                            {
                              "classTitle": "Akalabeth Setup Interface",
                              "classHandle": "AkalabethSetupInterface",
                              "fileHandle": "akalabeth-setup-interface",
                              "tags": [
                                "class",
                                "ui-scene"
                              ],
                              "classDefinition": "A UI class for displaying a wait message while the world is populated.",
                              "weight": "0.5",
                              "uid": "kv9vv4urtmoykuxe78r",
                              "filePath": [
                                "scenes",
                                "akalabeth",
                                "setup"
                              ],
                              "initialState": "AKALABETH_SETUP",
                              "gridWidth": "1",
                              "gridHeight": "24"
                            }
                          ],
                          "uid": "kv9vv4us9run2521uf6"
                        },
                        {
                          "title": "File Imports",
                          "order": 2,
                          "content": "The UI class will require the following imports:\n* Scene Contoller\n* Parent Scene",
                          "children": [],
                          "design": [
                            {
                              "classUid": "kv9vv4urtmoykuxe78r",
                              "importHandle": "RetroC64SceneController",
                              "importPath": "../../../scenes/retroc64-scene-controller",
                              "tags": [
                                "code",
                                "required import"
                              ],
                              "uid": "kv9vv4usl33jebfhzqf"
                            },
                            {
                              "classUid": "kv9vv4urtmoykuxe78r",
                              "importHandle": "RetroC64SetupScene",
                              "importPath": "./retroc64-akalabeth-setup-scene",
                              "tags": [
                                "code",
                                "required import"
                              ],
                              "uid": "kv9vv4uspmyglc0pml"
                            },
                            {
                              "classUid": "kv9uwd8gc0d4do96dy",
                              "importHandle": "RetroC64SetupUi",
                              "importPath": "./retroc64-akalabteh-setup-interface",
                              "tags": [
                                "code",
                                "required import"
                              ],
                              "uid": "kv9vv4us9j5pa2hhmrl"
                            }
                          ],
                          "uid": "kv9vv4usgzyi0zjtzh"
                        },
                        {
                          "title": "Private Fields",
                          "order": 3,
                          "content": "The UI class will be added as a private member of its scene parent.\nThe Ui Scene will have the following private fields:",
                          "children": [
                            {
                              "title": "First Update",
                              "order": 1,
                              "content": "Flag indicating the first update has been called.",
                              "children": [],
                              "design": [
                                {
                                  "classUid": "kv9vv4urtmoykuxe78r",
                                  "tags": [
                                    "code",
                                    "private field"
                                  ],
                                  "fieldName": "_firstUpdate",
                                  "fieldType": "boolean",
                                  "fieldValue": "true",
                                  "fieldDefinition": "Flag indicating the first update has been called.",
                                  "order": "1",
                                  "uid": "kv9xt2fn1a4obyqkxne"
                                }
                              ],
                              "uid": "kv9xt2fmhi0octnu9bi"
                            },
                            {
                              "title": "Cycle Length",
                              "order": 2,
                              "content": "The time each cycle of the scene is supposed to last.",
                              "children": [],
                              "design": [
                                {
                                  "classUid": "kv9vv4urtmoykuxe78r",
                                  "tags": [
                                    "code",
                                    "private field"
                                  ],
                                  "fieldName": "_cycleLength",
                                  "fieldType": "int",
                                  "fieldValue": "500",
                                  "fieldDefinition": "The time each cycle of the scene is supposed to last.",
                                  "order": "2",
                                  "uid": "kvb415n7hee8vfzygef"
                                }
                              ],
                              "uid": "kvb415n6hmdn3nq05up"
                            },
                            {
                              "title": "Max Cycles",
                              "order": 3,
                              "content": "The number of cycles to run before moving to the next scene.",
                              "children": [],
                              "design": [
                                {
                                  "classUid": "kv9vv4urtmoykuxe78r",
                                  "tags": [
                                    "code",
                                    "private field"
                                  ],
                                  "fieldName": "_maxCycles",
                                  "fieldType": "int",
                                  "fieldValue": "10",
                                  "fieldDefinition": "The number of cycles to run before moving to the next scene.",
                                  "order": "3",
                                  "uid": "kvb42kacyq5b447ii79"
                                }
                              ],
                              "uid": "kvb42kab8h2tdy1ve8u"
                            },
                            {
                              "title": "Cycle Start Time",
                              "order": 4,
                              "content": "A field to track the time (in ms) when the last cycle was started.",
                              "children": [],
                              "design": [
                                {
                                  "classUid": "kv9vv4urtmoykuxe78r",
                                  "tags": [
                                    "code",
                                    "private field"
                                  ],
                                  "fieldName": "_cycleStartTime",
                                  "fieldType": "int",
                                  "fieldValue": "0",
                                  "fieldDefinition": "A field to track the time (in ms) when the last cycle was started.",
                                  "order": "4",
                                  "uid": "kvb460vhw0i1agdborb"
                                }
                              ],
                              "uid": "kvb460vh5txa13evy3l"
                            },
                            {
                              "title": "Number of Cycles",
                              "order": 6,
                              "content": "The number of cycles that have run.",
                              "children": [],
                              "design": [
                                {
                                  "classUid": "kv9vv4urtmoykuxe78r",
                                  "tags": [
                                    "code",
                                    "private field"
                                  ],
                                  "fieldName": "_numCycles",
                                  "fieldType": "int",
                                  "fieldValue": "0",
                                  "fieldDefinition": "The number of cycles that have run.",
                                  "order": "6",
                                  "uid": "kvb4qsnqekrab54ofg"
                                }
                              ],
                              "uid": "kvb4qsnolxlxvsx9fhb"
                            }
                          ],
                          "design": [
                            {
                              "classUid": "kv9uwd8gc0d4do96dy",
                              "tags": [
                                "code",
                                "private field"
                              ],
                              "fieldName": "_akalabethSetupInterface",
                              "fieldType": "UiScene",
                              "fieldValue": "new RetroC64AkalabethSetupInterface({ scene: _scene, show: false })",
                              "fieldDefinition": "RetroC64AkalabethSetupInterface instance",
                              "order": "10",
                              "uid": "kv9vv4us55nzm9hntjq"
                            }
                          ],
                          "uid": "kv9vv4usf4fz9td7i5n"
                        },
                        {
                          "title": "View Templates",
                          "order": 4,
                          "content": "The UI class will have defined templates for each view. These will be added to the Constructor Body. Templates have been defined for the following views:",
                          "requires design": true,
                          "children": [
                            {
                              "title": "The Default View",
                              "order": 1,
                              "content": "There will be only one view.",
                              "children": [],
                              "design": [
                                {
                                  "classUid": "kv9vv4urtmoykuxe78r",
                                  "tags": [
                                    "code",
                                    "view template"
                                  ],
                                  "entryKey": "AKALABETH_SETUP",
                                  "code": "group: null,\nchildren: [\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \" WELCOME TO AKALABETH, WORLD OF DOOM!\", // text\n    ],\n    position: [-0.5, 11],\n    origin: [0, 0.5],\n    tint: 10920447\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"  (PLEASE WAIT)\", // text\n    ],\n    position: [-0.5, 22],\n    origin: [0, 0.5],\n    tint: 10920447,\n    dynamicField: \"waitField\"\n  }\n]",
                                  "order": "1",
                                  "uid": "kvmmo37w8udivbmvcdg"
                                }
                              ],
                              "uid": "kvmmo37vgozcwku0sz"
                            }
                          ],
                          "design": [],
                          "uid": "kv9vv4us7ftms4n7ck8"
                        },
                        {
                          "title": "Key Listeners",
                          "order": 5,
                          "content": "The UI class will have key listeners for the following views:",
                          "requires design": true,
                          "children": [
                            {
                              "title": "Inactive Key Listener",
                              "order": 1,
                              "content": "The key listener is inactive.",
                              "children": [],
                              "design": [
                                {
                                  "classUid": "kv9vv4urtmoykuxe78r",
                                  "tags": [
                                    "code",
                                    "key listener handler"
                                  ],
                                  "entryKey": "AKALABETH_SETUP",
                                  "code": "",
                                  "order": "1",
                                  "uid": "kvmmpa6y5cbth84n9g9"
                                }
                              ],
                              "uid": "kvmmpa6ymlxfivibge"
                            }
                          ],
                          "design": [],
                          "uid": "kv9vv4usib39s93kgz"
                        },
                        {
                          "title": "Updates to the 'create' methods",
                          "order": 6,
                          "content": "The UI class will have the following updates to the 'create' method:",
                          "children": [],
                          "design": [],
                          "uid": "kv9vv4usvgs2hxvdtva"
                        },
                        {
                          "title": "Scene start/reset",
                          "order": 7,
                          "content": "When the UI scene is started/reset, the following changes are applied for each view:",
                          "children": [],
                          "design": [],
                          "uid": "kv9vv4usev625te4sr6"
                        },
                        {
                          "title": "Public Members",
                          "order": 8,
                          "content": "Occasionally, a UI Scene will need some further public members added.  This UI has added the following public members:",
                          "children": [],
                          "design": [],
                          "uid": "kv9vv4us2vpr5iqvosr"
                        },
                        {
                          "title": "Updates to the 'update' method.",
                          "order": 9,
                          "content": "An update to the update method has been added to track how long the page is displayed.",
                          "children": [],
                          "design": [
                            {
                              "tags": [
                                "update",
                                "code"
                              ],
                              "uid": "kv9y3m2y7d8tk8k8bw",
                              "classUid": "kv9vv4urtmoykuxe78r",
                              "code": "if (this._firstUpdate) {\n  console.log(\"first update\");\n  RetroC64AkalabethController.world.newWorld();\n  this._firstUpdate = false;\n  this._cycleStartTime = time;\n}\nif (this._cycleStartTime + this._cycleLength <= time) {\n  if (this._numCycles < this._maxCycles) {\n    this._dynamicFields.setText(\"waitField\", [this._dynamicFields.getText(\"waitField\"), \".\"].join(\"\"));\n    this._cycleStartTime = time;\n    this._numCycles++;\n  } else {\n    // reset all variables\n    this._firstUpdate = true;\n    this._numCycles = 0;\n    this._dynamicFields.setText(\"waitField\", \"  (PLEASE WAIT)\");\n    // move on the next scene\n    RetroC64SceneController.gotoState({ state: RetroC64Constants.AKALABETH_WORLD_MAP });\n  }\n}",
                              "order": "1"
                            }
                          ],
                          "uid": "kv9y2t0k0ddcrudychap"
                        }
                      ],
                      "design": [],
                      "uid": "kv9vv4up5tzctt2qpxg"
                    }
                  ],
                  "design": [],
                  "uid": "kv9uwd8hb21eo5sgcr"
                }
              ],
              "design": [],
              "uid": "kv9uwd8g2qqk6ts9kt"
            },
            {
              "title": "The World Map View",
              "order": 4,
              "content": "When play first starts, the player will be shown the World Map scene",
              "children": [
                {
                  "title": "The Scene Container Class",
                  "order": 1,
                  "content": "A Scene Container class will need to be defined.  The Scene Container template will be used.",
                  "children": [],
                  "design": [
                    {
                      "classTitle": "Akalabeth World Map Scene",
                      "classHandle": "AkalabethWorldMapScene",
                      "fileHandle": "akalabeth-world-map-scene",
                      "tags": [
                        "class",
                        "scene-container"
                      ],
                      "classDefinition": "When play first starts, the player will be shown the World Map scene",
                      "weight": "1",
                      "uid": "kvb9u882akpjwedlt4",
                      "filePath": [
                        "scenes",
                        "akalabeth",
                        "world-map"
                      ]
                    }
                  ],
                  "uid": "kvb9u883qit63bppi8"
                },
                {
                  "title": "File Imports",
                  "order": 2,
                  "content": "The Game class will include the Scene Container as a required import.\nThe Scene Container class will require the following imports:",
                  "requires design": true,
                  "children": [],
                  "design": [
                    {
                      "classUid": "AF89DG9sgahg9",
                      "importHandle": "RetroC64AkalabethWorldMapScene",
                      "importPath": "../scenes/akalabeth/retroc64-akalabeth-world-map-scene",
                      "tags": [
                        "code",
                        "required import"
                      ],
                      "uid": "kvb9u88397eodcozo4l"
                    }
                  ],
                  "uid": "kvb9u883l8hgr44tad"
                },
                {
                  "title": "Postboot Processing",
                  "order": 3,
                  "content": "The Scene Container class will need to be added to the Game class postboot processing.",
                  "requires design": true,
                  "children": [],
                  "design": [
                    {
                      "classUid": "AF89DG9sgahg9",
                      "tags": [
                        "code",
                        "postboot"
                      ],
                      "code": "_game.scene.queueOp(\"start\", \"AkalabethWorldMapScene\");",
                      "order": "1",
                      "uid": "kvb9u88337mc5mhzk5n"
                    }
                  ],
                  "uid": "kvb9u883xeooa820ck"
                },
                {
                  "title": "Scene Key",
                  "order": 4,
                  "content": "The Scene Container class will need to be added to the scene groups in the Scene Controller class.",
                  "requires design": true,
                  "children": [],
                  "design": [
                    {
                      "classUid": "kuvp9k2j3kwh9rvfmqg",
                      "tags": [
                        "code",
                        "scene group"
                      ],
                      "sceneKey": "[RetroC64Constants.AKALABETH_WORLD_MAP]",
                      "sceneValue": "\"AkalabethWorldMapScene\"",
                      "order": "1",
                      "uid": "kvb9u883yzzxksy64mk"
                    }
                  ],
                  "uid": "kvb9u883lafqtp26be7"
                },
                {
                  "title": "Scene states",
                  "order": 5,
                  "content": "A State Group will need to be added to the App Constants for this Scene Container",
                  "requires design": true,
                  "children": [],
                  "design": [
                    {
                      "classUid": "kuvp9k2jit3fzra9nj9",
                      "groupName": "AKALABETH_WORLD_MAP_STATES",
                      "tags": [
                        "code",
                        "group properties"
                      ],
                      "elements": [
                        {
                          "elementName": "AKALABETH_WORLD_MAP_DISPLAY",
                          "elementValue": "1",
                          "elementDefinition": "The initial state.",
                          "order": 1
                        }
                      ],
                      "uid": "kvb9y59g0uuqloxzrh5m"
                    },
                    {
                      "tags": [
                        "scoped dictionary body 0",
                        "code"
                      ],
                      "uid": "kvbbdoggnpvwvo0lj5h",
                      "classUid": "kvb9u882akpjwedlt4",
                      "dictionaryKey": "[RetroC64Constants.AKALABETH_WORLD_MAP_DISPLAY]",
                      "dictionaryDefinition": "the scene instances displayed during the world map view",
                      "dictionaryValue": "[_akalabethWorldMapGraphics, _akalabethWorldMapInterface]"
                    }
                  ],
                  "uid": "kvb9u883fzfac6719y"
                },
                {
                  "title": "Scene Initial State",
                  "order": 6,
                  "content": "The Scene Container initial state is set in the 'create' method of the Scene Controller class. It will be set to the following state:",
                  "requires design": true,
                  "children": [],
                  "design": [
                    {
                      "tags": [
                        "create",
                        "code"
                      ],
                      "uid": "kvba1eiiobxp9qzx3sf",
                      "classUid": "kuvp9k2j3kwh9rvfmqg",
                      "code": "\n// set initial state for World Map\n[app-handle]AkalabethWorldMapScene.state = [app-handle]Constants.AKALABETH_WORLD_MAP_DISPLAY;",
                      "order": "4"
                    }
                  ],
                  "uid": "kvb9u8836ul70h9ycw3"
                },
                {
                  "title": "Private Fields",
                  "order": 7,
                  "content": "The Scene Container will have a few private fields. These include:\n\n* Animation Playing - a flag indicating an animation is currently playing.\n\n* Move Entered - a flag indicating a move has been entered.\n",
                  "children": [
                    {
                      "title": "Animation Playing",
                      "order": 1,
                      "content": "A flag will be used to indicate when an animation is playing.",
                      "children": [],
                      "design": [
                        {
                          "classUid": "kvb9u882akpjwedlt4",
                          "tags": [
                            "code",
                            "private field"
                          ],
                          "fieldName": "_animationPlaying",
                          "fieldType": "boolean",
                          "fieldValue": "false",
                          "fieldDefinition": "A flag will be used to indicate when an animation is playing.",
                          "order": "1",
                          "uid": "kvgzr4yhvdwkl4j403"
                        },
                        {
                          "classUid": "kvb9u882akpjwedlt4",
                          "tags": [
                            "code",
                            "public getter/setter property"
                          ],
                          "propertyName": "animationPlaying",
                          "getterDefinition": "/**\n * Getter for field _animationPlaying.\n * @returns {Object}\n */",
                          "getterBody": "return this._animationPlaying;",
                          "setterDefinition": "/**\n * Setter for field _animationPlaying.\n * @param {PropertyKey} value the value\n */",
                          "setterBody": "if (typeof(value) !== \"boolean\") {\n  throw [\"Invalid value\", value];\n}\nthis._animationPlaying = value;",
                          "order": "1",
                          "uid": "kvgzr4yi8h4lniwquxm"
                        }
                      ],
                      "uid": "kvgzr4ygtj29eze3y5"
                    },
                    {
                      "title": "Move Entered",
                      "order": 2,
                      "content": "A flag will be used to indicate when a 'Move' command has been entered by the player.",
                      "children": [],
                      "design": [
                        {
                          "classUid": "kvb9u882akpjwedlt4",
                          "tags": [
                            "code",
                            "private field"
                          ],
                          "fieldName": "_moveEntered",
                          "fieldType": "int",
                          "fieldValue": "-1",
                          "fieldDefinition": "A flag will be used to indicate when a 'Move' command has been entered by the player.",
                          "order": "2",
                          "uid": "kvgzsc9nb459mcuzunh"
                        },
                        {
                          "classUid": "kvb9u882akpjwedlt4",
                          "tags": [
                            "code",
                            "public getter/setter property"
                          ],
                          "propertyName": "moveEntered",
                          "getterDefinition": "/**\n * Getter for field _moveEntered.\n * @returns {Number}\n */",
                          "getterBody": "return this._moveEntered;",
                          "setterDefinition": "/**\n * Setter for field _moveEntered.\n * @param {PropertyKey} value the value\n */",
                          "setterBody": "if (isNaN(parseInt(value))) {\n  throw [\"Invalid value\", value];\n}\nthis._moveEntered = value;",
                          "order": "2",
                          "uid": "kvgzsc9n1swn7dd17it"
                        }
                      ],
                      "uid": "kvgzsc9mwjqorqubz2k"
                    },
                    {
                      "title": "Redraw Flag",
                      "order": 3,
                      "content": "A flag will be used to track when the world map needs to be re-drawn.",
                      "children": [],
                      "design": [
                        {
                          "classUid": "kvb9u882akpjwedlt4",
                          "tags": [
                            "code",
                            "public getter/setter property"
                          ],
                          "propertyName": "needsMapRedraw",
                          "getterDefinition": "/**\n * Getter for field _needsMapRedraw.\n */",
                          "getterBody": "return _needsMapRedraw;",
                          "setterDefinition": "/**\n * Setter for field _needsMapRedraw.\n * @param {PropertyKey} value the value\n */",
                          "setterBody": "if (typeof(value) !== \"boolean\") {\n  throw [\"Invalid value\", value];\n}\n_needsMapRedraw = value;",
                          "order": "3",
                          "uid": "kvbddimrf3r75khby7n"
                        },
                        {
                          "tags": [
                            "private field",
                            "code"
                          ],
                          "uid": "kvbe6kv3jes2yfzqlh",
                          "classUid": "kvb9u882akpjwedlt4",
                          "fieldName": "_needsMapRedraw",
                          "fieldType": "boolean",
                          "fieldValue": "true",
                          "fieldDefinition": "Flag indicating whether the world map needs to be re-drawn.",
                          "order": "3"
                        }
                      ],
                      "uid": "kvbe6kv31aetk8ai7yf"
                    }
                  ],
                  "design": [],
                  "uid": "kvgzpbnotr1kwn1srcr"
                },
                {
                  "title": "Child Scenes",
                  "order": 8,
                  "content": "The Scene Container is just that: a container.  It will manage the following child scenes:",
                  "requires design": true,
                  "children": [
                    {
                      "title": "World Map Graphical Display",
                      "order": 1,
                      "content": "The UI Scene class for displaying the graphical part of the display.",
                      "children": [
                        {
                          "title": "The UI Scene Class",
                          "order": 1,
                          "content": "A UI class will need to be defined.  The Ui Scene template will be used.",
                          "children": [],
                          "design": [
                            {
                              "classTitle": "Akalabeth World Map Graphics",
                              "classHandle": "AkalabethWorldMapGraphics",
                              "fileHandle": "akalabeth-world-map-graphics",
                              "tags": [
                                "class",
                                "ui-scene"
                              ],
                              "classDefinition": "The UI Scene class for displaying the graphical part of the display.",
                              "weight": "0.5",
                              "uid": "kvbb2vo6gvsmez4otdl",
                              "filePath": [
                                "scenes",
                                "akalabeth",
                                "world-map"
                              ],
                              "initialState": "AKALABETH_WORLD_MAP_DISPLAY",
                              "gridWidth": "1",
                              "gridHeight": "24"
                            }
                          ],
                          "uid": "kvbb2vo9a198a64nt86"
                        },
                        {
                          "title": "File Imports",
                          "order": 2,
                          "content": "The UI class will require the following imports:\n* Scene Contoller\n* Parent Scene",
                          "children": [],
                          "design": [
                            {
                              "classUid": "kvbb2vo6gvsmez4otdl",
                              "importHandle": "RetroC64SceneController",
                              "importPath": "../../../scenes/retroc64-scene-controller",
                              "tags": [
                                "code",
                                "required import"
                              ],
                              "uid": "kvbb2voaorm3t54ybs"
                            },
                            {
                              "classUid": "kvbb2vo6gvsmez4otdl",
                              "importHandle": "RetroC64AkalabethWorldMapScene",
                              "importPath": "./retroc64-akalabeth-world-map-scene",
                              "tags": [
                                "code",
                                "required import"
                              ],
                              "uid": "kvbb2vob76g5qh2wo9h"
                            },
                            {
                              "classUid": "kvb9u882akpjwedlt4",
                              "importHandle": "RetroC64AkalabethWorldMapGraphics",
                              "importPath": "./retroc64-akalabeth-world-map-graphics",
                              "tags": [
                                "code",
                                "required import"
                              ],
                              "uid": "kvbb2vob8zr6zn26rd5"
                            }
                          ],
                          "uid": "kvbb2vobr1mu5czme9"
                        },
                        {
                          "title": "Private Fields",
                          "order": 3,
                          "content": "The UI class will be added as a private member of its scene parent.\nThe Ui Scene will have the following private fields:",
                          "children": [
                            {
                              "title": "World Terrain Images",
                              "order": 1,
                              "content": "An array of 25 images will be used to render the game world. A 3x3 center surrounded by a border of partially drawn images",
                              "children": [],
                              "design": [
                                {
                                  "classUid": "kvbb2vo6gvsmez4otdl",
                                  "tags": [
                                    "code",
                                    "private field"
                                  ],
                                  "fieldName": "_terrainImages",
                                  "fieldType": "array",
                                  "fieldValue": "[]",
                                  "fieldDefinition": "An array of images visualizing the game world.",
                                  "order": "1",
                                  "uid": "kvbddimq7ta0ermyz0c"
                                }
                              ],
                              "uid": "kvbddimpycv1rjsjee"
                            },
                            {
                              "title": "Graphics Instance",
                              "order": 2,
                              "content": "A Phaser.Graphics instance used for rendering the world map.",
                              "children": [],
                              "design": [
                                {
                                  "classUid": "kvbb2vo6gvsmez4otdl",
                                  "tags": [
                                    "code",
                                    "private field"
                                  ],
                                  "fieldName": "_worldMapGraphics",
                                  "fieldType": "Phaser.Graphics",
                                  "fieldValue": "null",
                                  "fieldDefinition": "A Phaser.Graphics instance used for rendering the world map.",
                                  "order": "2",
                                  "uid": "kvbdqwk16ps5o2bgyxe"
                                }
                              ],
                              "uid": "kvbdqwk19dz7sdmr91t"
                            },
                            {
                              "title": "Move Animation Start Time",
                              "order": 4,
                              "content": "The time in milliseconds when the move animation was started.",
                              "children": [],
                              "design": [
                                {
                                  "classUid": "kvbb2vo6gvsmez4otdl",
                                  "tags": [
                                    "code",
                                    "private field"
                                  ],
                                  "fieldName": "_moveAnimationStarted",
                                  "fieldType": "int",
                                  "fieldValue": "0",
                                  "fieldDefinition": "The time in milliseconds when the move animation was started.",
                                  "order": "4",
                                  "uid": "kvbe7mpoho96lhxr8m"
                                }
                              ],
                              "uid": "kvbe7mpn56v59z9k4qy"
                            },
                            {
                              "title": "Animation Move Cycle",
                              "order": 5,
                              "content": "The length in milliseconds of the move cycle animation.",
                              "children": [],
                              "design": [
                                {
                                  "classUid": "kvbb2vo6gvsmez4otdl",
                                  "tags": [
                                    "code",
                                    "private field"
                                  ],
                                  "fieldName": "_moveCycleLength",
                                  "fieldType": "int",
                                  "fieldValue": "750",
                                  "fieldDefinition": "The length in milliseconds of the move cycle animation.",
                                  "order": "5",
                                  "uid": "kvbe8jgmo9j15ag3p7"
                                }
                              ],
                              "uid": "kvbe8jglqg0yl0b555"
                            },
                            {
                              "title": "Map Border Width",
                              "order": 11,
                              "content": "The World Map displays a 3x3 cluster of map cells, surrounded by a 5x5 border ring. The border ring cells will be cropped and not appear fully.",
                              "children": [],
                              "design": [
                                {
                                  "classUid": "kvbb2vo6gvsmez4otdl",
                                  "tags": [
                                    "code",
                                    "private field"
                                  ],
                                  "fieldName": "_borderCrop",
                                  "fieldType": "float",
                                  "fieldValue": "0.1667",
                                  "fieldDefinition": "The World Map displays a 3x3 cluster of map cells, surrounded by a 5x5 border ring. The border ring cells will be cropped and not appear fully.",
                                  "order": "11",
                                  "uid": "kvjmyxt0x2c3uz6pn6f"
                                }
                              ],
                              "uid": "kvjmyxt0aor5vj37o79"
                            }
                          ],
                          "design": [
                            {
                              "classUid": "kvb9u882akpjwedlt4",
                              "tags": [
                                "code",
                                "private field"
                              ],
                              "fieldName": "_akalabethWorldMapGraphics",
                              "fieldType": "UiScene",
                              "fieldValue": "new RetroC64AkalabethWorldMapGraphics({\n    cellWidth: 150,\n    cellHeight: 150,\n    xOffset: -125,\n    yOffset: -125,\n    gridHeight: 5,\n    gridWidth: 5,\n    scene: _scene,\n    show: false\n    })",
                              "fieldDefinition": "RetroC64AkalabethWorldMapGraphics instance",
                              "order": "10",
                              "uid": "kvbb2vobljiloaqd21"
                            }
                          ],
                          "uid": "kvbb2vobpe5amcclrwe"
                        },
                        {
                          "title": "View Templates",
                          "order": 4,
                          "content": "The UI class will have defined templates for each view. These will be added to the Constructor Body. Templates have been defined for the following views:",
                          "requires design": true,
                          "children": [
                            {
                              "title": "Empty View",
                              "order": 1,
                              "content": "Since the view is dynamically-generated, the template is empty.",
                              "children": [],
                              "design": [
                                {
                                  "classUid": "kvbb2vo6gvsmez4otdl",
                                  "tags": [
                                    "code",
                                    "view template"
                                  ],
                                  "entryKey": "AKALABETH_WORLD_MAP_DISPLAY",
                                  "code": "group: null,\nchildren: []",
                                  "order": "1",
                                  "uid": "kvmn2x4r4pb1cddmd7y"
                                }
                              ],
                              "uid": "kvmn2x4rx6stdd485ql"
                            }
                          ],
                          "design": [],
                          "uid": "kvbb2vobkidhumlv4zo"
                        },
                        {
                          "title": "Key Listeners",
                          "order": 5,
                          "content": "The UI class will have key listeners for the following views:",
                          "requires design": true,
                          "children": [
                            {
                              "title": "Inactive Key Listener",
                              "order": 1,
                              "content": "The key listener is inactive.",
                              "children": [],
                              "design": [
                                {
                                  "classUid": "kvbb2vo6gvsmez4otdl",
                                  "tags": [
                                    "code",
                                    "key listener handler"
                                  ],
                                  "entryKey": "AKALABETH_WORLD_MAP_DISPLAY",
                                  "code": "",
                                  "order": "1",
                                  "uid": "kvmn3wo4yxzwtiqoay"
                                }
                              ],
                              "uid": "kvmn3wo40895fbbc014v"
                            }
                          ],
                          "design": [],
                          "uid": "kvbb2vob1tvd4822mjv"
                        },
                        {
                          "title": "Updates to the 'create' methods",
                          "order": 6,
                          "content": "The UI class will have the following updates to the 'create' method:",
                          "children": [],
                          "design": [
                            {
                              "tags": [
                                "create",
                                "code"
                              ],
                              "uid": "kvbduz79ppxsn51s5q",
                              "classUid": "kvbb2vo6gvsmez4otdl",
                              "code": "this._worldMapGraphics = this._scene.make.graphics({ lineStyle: { width: 3, color: 10920447 } });\nthis.createCrosshairs();\nthis.generateCastleTexture();\nthis.generateDungeonTexture();\nthis.generateMountainTexture();\nthis.generateShopTexture();\nthis.generateUnknownTexture();\nthis.generateBlankTexture();\n// need 25 images for the terrain\nfor (let x = 0, lx = 5; x < lx; x++) {\n  this._terrainImages.push([]);\n  for (let y = 0, ly = 5; y < ly; y++) {\n    let image = this._scene.add.image(0, 0, 'akalabeth_blank');\n    image.setDepth(10);\n    this._terrainImages[x].push(image);\n  }\n}",
                              "order": "1"
                            }
                          ],
                          "uid": "kvbb2vob53jou8my53n"
                        },
                        {
                          "title": "Scene start/reset",
                          "order": 7,
                          "content": "When the UI scene is started/reset, the following changes are applied for each view:",
                          "children": [],
                          "design": [],
                          "uid": "kvbb2vob60vtywlb513"
                        },
                        {
                          "title": "Public Members",
                          "order": 8,
                          "content": "Occasionally, a UI Scene will need some further public members added.  This UI has added the following public members:",
                          "children": [
                            {
                              "title": "The Player's Location",
                              "order": 1,
                              "content": "The player's location on the world map is represented by crosshairs. This will be displayed above all world terrain in the center of the map.  The crosshairs' position will never change.",
                              "children": [],
                              "design": [
                                {
                                  "tags": [
                                    "public member",
                                    "code"
                                  ],
                                  "uid": "kvcdj9m39corvtzo2ww",
                                  "classUid": "kvbb2vo6gvsmez4otdl",
                                  "memberName": "createCrosshairs",
                                  "memberDefinition": "/**\n * Creates the crosshairs image representing the player's location. This image is displayed in the center of the world map, above all terrain. The image's location never changes.\n */",
                                  "arguments": "",
                                  "code": "// draw crosshairs for the player's position\nlet line = new Phaser.Geom.Line(0, 7, 14, 7);\nthis._worldMapGraphics.strokeLineShape(line);\nline = new Phaser.Geom.Line(7, 0, 7, 14);\nthis._worldMapGraphics.strokeLineShape(line);\n// generate the texture\nthis._worldMapGraphics.generateTexture('akalabeth_crosshairs', 15, 15);\nthis._worldMapGraphics.clear();\nlet crosshairs = this._scene.add.image(0, 0, 'akalabeth_crosshairs');\ncrosshairs.setDepth(20);\nthis._grid.placeAt(2, 2, crosshairs);",
                                  "order": "1"
                                }
                              ],
                              "uid": "kvcr3nirelpvub8i7tt"
                            },
                            {
                              "title": "Draw World Map",
                              "order": 2,
                              "content": "A member will be needed for rendering the world map.",
                              "children": [],
                              "design": [
                                {
                                  "tags": [
                                    "public member",
                                    "code"
                                  ],
                                  "uid": "kvbe3sr45b186qqsid8",
                                  "classUid": "kvbb2vo6gvsmez4otdl",
                                  "memberName": "drawWorldMap",
                                  "memberDefinition": "/**\n * Draws the world map.\n */",
                                  "arguments": "",
                                  "code": "console.log(\"player\",RetroC64AkalabethController.world.playerX,RetroC64AkalabethController.world.playerY)\nconsole.log(\"world\",RetroC64AkalabethController.world.terrain)\nconsole.log(\"terrain\",this._terrainImages)\n\n// draw the 8 positions around the player\nfor (let y = -2; y <= 2; y++) {\n  for (let x = -2; x <= 2; x++) {\n    let col = RetroC64AkalabethController.world.playerX + x;\n    let row = RetroC64AkalabethController.world.playerY + y;\n    let currentTerrain = 0;\n    if (col >= 0 && col < RetroC64AkalabethController.world.terrain.length\n        && row >= 0 && row < RetroC64AkalabethController.world.terrain[col].length) {\n      currentTerrain = RetroC64AkalabethController.world.terrain[row][col];\n    }\n    let image = this._terrainImages[x + 2][y + 2];\n    image.setCrop();\n    switch (currentTerrain) {\n      case 0:\n        image.setTexture(\"akalabeth_blank\");\n        break;\n      case 1:\n        image.setTexture(\"akalabeth_mountain\");\n        break;\n      case 2:\n        image.setTexture(\"akalabeth_unknown\");\n        break;\n      case 3:\n        image.setTexture(\"akalabeth_shop\");\n        break;\n      case 4:\n        image.setTexture(\"akalabeth_dungeon\");\n        break;\n      case 5:\n        image.setTexture(\"akalabeth_castle\");\n        break;\n      default:\n        throw [\"Uknown terrain\", currentTerrain]\n    }\n  }\n}\n// position the map images\nfor (let x = 0, lx = 5; x < lx; x++) {\n  for (let y = 0, ly = 5; y < ly; y++) {\n    this._grid.placeAt(x, y, this._terrainImages[x][y]);\n  }\n}\nthis.cropEdges(this._borderCrop);",
                                  "order": "2"
                                }
                              ],
                              "uid": "kvcqzdzehab4t1hl3k5"
                            },
                            {
                              "title": "Render Polygon",
                              "order": 3,
                              "content": "A member will be added to quickly render a polygon.",
                              "children": [],
                              "design": [
                                {
                                  "classUid": "kvbb2vo6gvsmez4otdl",
                                  "tags": [
                                    "code",
                                    "public member"
                                  ],
                                  "memberName": "renderPolygon",
                                  "memberDefinition": "/**\n * Renders a polygon based on the supplied points.\n * @param {string | Array.<number> | Array} List of points defining the perimeter of this Polygon\n */",
                                  "arguments": "points",
                                  "code": "if (!Array.isArray(points)) {\n  throw [\"Array is required\", points];\n}\nlet polygon = new Phaser.Geom.Polygon(points);\n// create a polygon out of the points\nthis._worldMapGraphics.beginPath();\nthis._worldMapGraphics.moveTo(polygon.points[0].x, polygon.points[0].y);\nfor (let i = 1; i < polygon.points.length; i++) {\n  this._worldMapGraphics.lineTo(polygon.points[i].x, polygon.points[i].y);\n}\n// this._worldMapGraphics.closePath();\nthis._worldMapGraphics.strokePath();",
                                  "order": "3",
                                  "uid": "kvcra9elu0wwbsngv7q"
                                }
                              ],
                              "uid": "kvcr55a2lym482ce8cl"
                            },
                            {
                              "title": "Render Terrain Features",
                              "order": 4,
                              "content": "Several members will define ways to quickly render different world features.  These include:\n\n* mountains\n* castles\n* shops\n* dungeons\n* unknown",
                              "children": [],
                              "design": [
                                {
                                  "tags": [
                                    "public member",
                                    "code"
                                  ],
                                  "uid": "kvcrjnx5yol7gfnm4y",
                                  "classUid": "kvbb2vo6gvsmez4otdl",
                                  "memberName": "generateCastleTexture",
                                  "memberDefinition": "/**\n * Generates the texture representing a castle terrain.\n */",
                                  "arguments": "",
                                  "code": "// generating the castle image in a 150x150 space to give room for the 3px wide line strokes, and also center the image\nthis.renderPolygon([\n  0, 0,\n  150, 0,\n  150, 150,\n  0, 150,\n  0, 0\n]);\nthis.renderPolygon([\n  30, 30,\n  30, 120,\n  120, 120,\n  120, 30,\n  30, 30,\n  120, 120\n]);\nthis.renderPolygon([\n  30, 120,\n  120, 30\n]);\n// generate the texture\nthis._worldMapGraphics.generateTexture('akalabeth_castle', 150, 150);\nthis._worldMapGraphics.clear();",
                                  "order": "11"
                                },
                                {
                                  "tags": [
                                    "public member",
                                    "code"
                                  ],
                                  "uid": "kvcrmtakjfiwnbonchh",
                                  "classUid": "kvbb2vo6gvsmez4otdl",
                                  "memberName": "generateDungeonTexture",
                                  "memberDefinition": "/**\n * Generates the texture representing a dungeon terrain.\n */",
                                  "arguments": "",
                                  "code": "this.renderPolygon([\n  60, 60,\n  90, 90\n]);\nthis.renderPolygon([\n  60, 90,\n  90, 60\n]);\n// generate the texture\nthis._worldMapGraphics.generateTexture('akalabeth_dungeon', 150, 150);\nthis._worldMapGraphics.clear();",
                                  "order": "12"
                                },
                                {
                                  "tags": [
                                    "public member",
                                    "code"
                                  ],
                                  "uid": "kvcroi1w9z7t4fqo5eq",
                                  "classUid": "kvbb2vo6gvsmez4otdl",
                                  "memberName": "generateMountainTexture",
                                  "memberDefinition": "/**\n * Generates the texture representing a mountain terrain.\n */",
                                  "arguments": "",
                                  "code": "this.renderPolygon([\n  30, 150,\n  30, 120,\n  60, 90,\n  120, 90,\n  120, 150\n]);\nthis.renderPolygon([\n  0, 30,\n  30, 30\n]);\nthis.renderPolygon([\n  150, 30,\n  120, 30\n]);\nthis.renderPolygon([\n  0, 120,\n  30, 120\n]);\nthis.renderPolygon([\n  120, 120,\n  150, 120\n]);\nthis.renderPolygon([\n  30, 0,\n  30, 60,\n  60, 60,\n  60, 90,\n  90, 90,\n  90, 30,\n  120, 30,\n  120, 0\n]);\n// generate the texture\nthis._worldMapGraphics.generateTexture('akalabeth_mountain', 150, 150);\nthis._worldMapGraphics.clear();",
                                  "order": "13"
                                },
                                {
                                  "tags": [
                                    "public member",
                                    "code"
                                  ],
                                  "uid": "kvcrpybtvq1s01togip",
                                  "classUid": "kvbb2vo6gvsmez4otdl",
                                  "memberName": "generateShopTexture",
                                  "memberDefinition": "/**\n * Generates the texture representing a shop terrain.\n */",
                                  "arguments": "",
                                  "code": "// generating the shop image in a 150x150 space to give room for the 3px wide line strokes, and also center the image\nthis.renderPolygon([\n  30, 30,\n  60, 30,\n  60, 120,\n  30, 120,\n  30, 90,\n  120, 90,\n  120, 120,\n  90, 120,\n  90, 30,\n  120, 30,\n  120, 60,\n  30, 60,\n  30, 30\n]);\n// generate the texture\nthis._worldMapGraphics.generateTexture('akalabeth_shop', 150, 150);\nthis._worldMapGraphics.clear();",
                                  "order": "14"
                                },
                                {
                                  "tags": [
                                    "public member",
                                    "code"
                                  ],
                                  "uid": "kvcrrsblrhedwtjmh7",
                                  "classUid": "kvbb2vo6gvsmez4otdl",
                                  "memberName": "generateUnknownTexture",
                                  "memberDefinition": "/**\n * Generates the texture representing an unknown terrain.\n */",
                                  "arguments": "",
                                  "code": "// generating the shop image in a 150x150 space to give room for the 3px wide line strokes, and also center the image\nthis.renderPolygon([\n  60, 60,\n  90, 60,\n  90, 90,\n  60, 90,\n  60, 60\n]);\n// generate the texture\nthis._worldMapGraphics.generateTexture('akalabeth_unknown', 150, 150);\nthis._worldMapGraphics.clear();",
                                  "order": "15"
                                },
                                {
                                  "classUid": "kvbb2vo6gvsmez4otdl",
                                  "tags": [
                                    "code",
                                    "public member"
                                  ],
                                  "memberName": "generateBlankTexture",
                                  "memberDefinition": "/**\n * Generates the texture representing blank terrain.\n */",
                                  "arguments": "",
                                  "code": "// generate the texture\nthis._worldMapGraphics.generateTexture('akalabeth_blank', 150, 150);\nthis._worldMapGraphics.clear();",
                                  "order": "16",
                                  "uid": "kvgxwamkxzxmxzgekib"
                                }
                              ],
                              "uid": "kvcr6jy6ww01pae10a"
                            },
                            {
                              "title": "Crop Borders",
                              "order": 5,
                              "content": "A method will be added to crop the map's borders",
                              "children": [],
                              "design": [
                                {
                                  "tags": [
                                    "public member",
                                    "code"
                                  ],
                                  "uid": "kvialvdeggkbl6ya57",
                                  "classUid": "kvbb2vo6gvsmez4otdl",
                                  "memberName": "cropEdges",
                                  "memberDefinition": "/**\n * Crops the right and bottom edges of the map display.\n * @param {Number} percent the percentage of the image to display\n */",
                                  "arguments": "percent",
                                  "code": "// crop the right column\nfor (let y = 4; y >= 0; y--) {\n  this._terrainImages[4][y].setCrop(\n    0,  // The x coordinate to start the crop from\n    0,  // The y coordinate to start the crop from\n    150 * percent, // The width of the crop rectangle in pixels.\n    150 // The height of the crop rectangle in pixels.\n  );\n}\n// crop the bottom row\nfor (let x = 4; x >= 0; x--) {\n  this._terrainImages[x][4].setCrop(\n    0,  // The x coordinate to start the crop from\n    0,  // The y coordinate to start the crop from\n    150, // The width of the crop rectangle in pixels.\n    150 * percent // The height of the crop rectangle in pixels.\n  );\n}\n// crop the bottom corner image\nthis._terrainImages[4][4].setCrop(\n  0,  // The x coordinate to start the crop from\n  0,  // The y coordinate to start the crop from\n  150 * percent, // The width of the crop rectangle in pixels.\n  150 * percent  // The height of the crop rectangle in pixels.\n);",
                                  "order": "5"
                                }
                              ],
                              "uid": "kvialvddayh8wja2u5"
                            },
                            {
                              "title": "Map Animations",
                              "order": 6,
                              "content": "The World Map will have several animations to display in response to user input. These animations include:\n\n* Moving North\n* Moving East\n* Moving South\n* Moving West",
                              "children": [],
                              "design": [
                                {
                                  "tags": [
                                    "public member",
                                    "code"
                                  ],
                                  "uid": "kviay7pkixzvkazgtvo",
                                  "classUid": "kvbb2vo6gvsmez4otdl",
                                  "memberName": "animateNorth",
                                  "memberDefinition": "/**\n * Animates a player moving North.\n * @param {Number} percent the percentage of the animation cycle that has passed.\n */",
                                  "arguments": "percent",
                                  "code": "// increase all images y\nfor (let i = this._terrainImages.length - 1; i >= 0; i--) {\n  for (let j = this._terrainImages[i].length - 1; j >= 0; j--) {\n    let image = this._terrainImages[i][j];\n    if (!image.hasOwnProperty(\"move animation starting x\")) {\n      image[\"move animation starting x\"] = image.x;\n      image[\"move animation starting y\"] = image.y;\n    }\n    image.y = image[\"move animation starting y\"] + 150 * percent;\n  }\n}\n// crop the old bottom row.\nfor (let x = 4; x >= 0; x--) {\n  this._terrainImages[x][4].setCrop(\n    0,  // The x coordinate to start the crop from\n    0,  // The y coordinate to start the crop from\n    150, // The width of the crop rectangle in pixels.\n    150 * (this._borderCrop - percent) // The height of the crop rectangle in pixels. the higher the percentile, the smaller the cropped image\n  );\n}\n// crop the new bottom row.\nfor (let x = 4; x >= 0; x--) {\n  this._terrainImages[x][3].setCrop(\n    0,  // The x coordinate to start the crop from\n    0,  // The y coordinate to start the crop from\n    150, // The width of the crop rectangle in pixels.\n    150 * (1.1667 - percent) // The height of the crop rectangle in pixels.\n  );\n}\n// crop the sides\nfor (let y = 4; y >= 0; y--) {\n  this._terrainImages[4][y].setCrop(\n    0,  // The x coordinate to start the crop from\n    0,  // The y coordinate to start the crop from\n    150 * this._borderCrop, // The width of the crop rectangle in pixels.\n    150 // The height of the crop rectangle in pixels.\n  );\n}\n// crop the old bottom corner\nthis._terrainImages[4][4].setCrop(\n  0,  // The x coordinate to start the crop from\n  0,  // The y coordinate to start the crop from\n  150 * this._borderCrop, // The width of the crop rectangle in pixels.\n  150 * (this._borderCrop - percent) // The height of the crop rectangle in pixels. the higher the percentile, the smaller the cropped image\n);\n// crop the new bottom corner\nthis._terrainImages[4][3].setCrop(\n  0,  // The x coordinate to start the crop from\n  0,  // The y coordinate to start the crop from\n  150 * this._borderCrop, // The width of the crop rectangle in pixels.\n  150 * (1.1667 - percent) // The height of the crop rectangle in pixels.\n);",
                                  "order": "51"
                                },
                                {
                                  "classUid": "kvbb2vo6gvsmez4otdl",
                                  "tags": [
                                    "code",
                                    "public member"
                                  ],
                                  "memberName": "animateSouth",
                                  "memberDefinition": "/**\n * Animates a player moving South.\n * @param {Number} percent the percentage of the animation cycle that has passed.\n */",
                                  "arguments": "percent",
                                  "code": "// decrease all images y\nfor (let i = this._terrainImages.length - 1; i >= 0; i--) {\n  for (let j = this._terrainImages[i].length - 1; j >= 0; j--) {\n    let image = this._terrainImages[i][j];\n    if (!image.hasOwnProperty(\"move animation starting x\")) {\n      image[\"move animation starting x\"] = image.x;\n      image[\"move animation starting y\"] = image.y;\n    }\n    image.y = image[\"move animation starting y\"] - 150 * percent;\n  }\n}\n// crop the bottom row. going from 1/6 crop to 1\nfor (let x = 4; x >= 0; x--) {\n  this._terrainImages[x][4].setCrop(\n    0,  // The x coordinate to start the crop from\n    0,  // The y coordinate to start the crop from\n    150, // The width of the crop rectangle in pixels.\n    150 * (this._borderCrop + percent) // The height of the crop rectangle in pixels. the higher the percentile, the smaller the cropped image\n  );\n}\n// crop the sides\nfor (let y = 4; y >= 0; y--) {\n  this._terrainImages[4][y].setCrop(\n    0,  // The x coordinate to start the crop from\n    0,  // The y coordinate to start the crop from\n    150 * this._borderCrop, // The width of the crop rectangle in pixels.\n    150 // The height of the crop rectangle in pixels.\n  );\n}\n// crop the bottom corner\nthis._terrainImages[4][4].setCrop(\n  0,  // The x coordinate to start the crop from\n  0,  // The y coordinate to start the crop from\n  150 * this._borderCrop, // The width of the crop rectangle in pixels.\n  150 * (this._borderCrop + percent) // The height of the crop rectangle in pixels. the higher the percentile, the smaller the cropped image\n);",
                                  "order": "52",
                                  "uid": "kvifpo73xukteotrvw"
                                },
                                {
                                  "classUid": "kvbb2vo6gvsmez4otdl",
                                  "tags": [
                                    "code",
                                    "public member"
                                  ],
                                  "memberName": "animateEast",
                                  "memberDefinition": "/**\n * Animates a player moving North.\n * @param {Number} percent the percentage of the animation cycle that has passed.\n */",
                                  "arguments": "percent",
                                  "code": "// decrease all images x\nfor (let i = this._terrainImages.length - 1; i >= 0; i--) {\n  for (let j = this._terrainImages[i].length - 1; j >= 0; j--) {\n    let image = this._terrainImages[i][j];\n    if (!image.hasOwnProperty(\"move animation starting x\")) {\n      image[\"move animation starting x\"] = image.x;\n      image[\"move animation starting y\"] = image.y;\n    }\n    image.x = image[\"move animation starting x\"] - 150 * percent;\n  }\n}\n// crop the bottom row.\nfor (let x = 4; x >= 0; x--) {\n  this._terrainImages[x][4].setCrop(\n    0,  // The x coordinate to start the crop from\n    0,  // The y coordinate to start the crop from\n    150, // The width of the crop rectangle in pixels.\n    150 * this._borderCrop // height is 1/6 of the image\n  );\n}\n// crop the sides. going from 1/6 crop to full size\nfor (let y = 4; y >= 0; y--) {\n  this._terrainImages[4][y].setCrop(\n    0,  // The x coordinate to start the crop from\n    0,  // The y coordinate to start the crop from\n    150 * (this._borderCrop + percent), // The width of the crop rectangle in pixels.\n    150 // The height of the crop rectangle in pixels.\n  );\n}\n// crop the bottom corner\nthis._terrainImages[4][4].setCrop(\n  0,  // The x coordinate to start the crop from\n  0,  // The y coordinate to start the crop from\n  150 * (this._borderCrop + percent), // The width of the crop rectangle in pixels.\n  150 * this._borderCrop // height is 1/6 of the image\n);",
                                  "order": "53",
                                  "uid": "kvifqwvm4qc7br6hts"
                                },
                                {
                                  "classUid": "kvbb2vo6gvsmez4otdl",
                                  "tags": [
                                    "code",
                                    "public member"
                                  ],
                                  "memberName": "animateWest",
                                  "memberDefinition": "/**\n * Animates a player moving West.\n * @param {Number} percent the percentage of the animation cycle that has passed.\n */",
                                  "arguments": "percent",
                                  "code": "// decrease all images x\nfor (let i = this._terrainImages.length - 1; i >= 0; i--) {\n  for (let j = this._terrainImages[i].length - 1; j >= 0; j--) {\n    let image = this._terrainImages[i][j];\n    if (!image.hasOwnProperty(\"move animation starting x\")) {\n      image[\"move animation starting x\"] = image.x;\n      image[\"move animation starting y\"] = image.y;\n    }\n    image.x = image[\"move animation starting x\"] + 150 * percent;\n  }\n}\n// crop the bottom row.\nfor (let x = 4; x >= 0; x--) {\n  this._terrainImages[x][4].setCrop(\n    0,  // The x coordinate to start the crop from\n    0,  // The y coordinate to start the crop from\n    150, // The width of the crop rectangle in pixels.\n    150 * this._borderCrop // height is 1/6 of the image\n  );\n}\n// crop the outer sides. going from 1/6 crop to 0\nfor (let y = 4; y >= 0; y--) {\n  this._terrainImages[4][y].setCrop(\n    0,  // The x coordinate to start the crop from\n    0,  // The y coordinate to start the crop from\n    150 * (this._borderCrop - percent), // The width of the crop rectangle in pixels.\n    150 // The height of the crop rectangle in pixels.\n  );\n}\n// crop the inner side. going from full to 1/6 crop\nfor (let y = 4; y >= 0; y--) {\n  this._terrainImages[3][y].setCrop(\n    0,  // The x coordinate to start the crop from\n    0,  // The y coordinate to start the crop from\n    150 * (1.1667 - percent), // The width of the crop rectangle in pixels.\n    150 // The height of the crop rectangle in pixels.\n  );\n}\n// crop the bottom corner\nthis._terrainImages[4][4].setCrop(\n  0,  // The x coordinate to start the crop from\n  0,  // The y coordinate to start the crop from\n  150 * (this._borderCrop - percent), // The width of the crop rectangle in pixels.\n  150 * this._borderCrop // height is 1/6 of the image\n);\n// crop the inner bottom corner\nthis._terrainImages[3][4].setCrop(\n  0,  // The x coordinate to start the crop from\n  0,  // The y coordinate to start the crop from\n  150 * (1.1667 - percent), // The width of the crop rectangle in pixels.\n  150 * this._borderCrop // height is 1/6 of the image\n);",
                                  "order": "54",
                                  "uid": "kvifrzklrg37qd8fpuk"
                                }
                              ],
                              "uid": "kviay7pjflf151nouri"
                            }
                          ],
                          "design": [],
                          "uid": "kvbb2vobjewn156vjqb"
                        },
                        {
                          "title": "Updates to the 'update' method.",
                          "order": 10,
                          "content": "An update to the 'update' method is needed to force the world map to be drawn when needed.",
                          "children": [],
                          "design": [
                            {
                              "tags": [
                                "update",
                                "code"
                              ],
                              "uid": "kvbej2ccnebmm8ti4pa",
                              "classUid": "kvbb2vo6gvsmez4otdl",
                              "code": "if (RetroC64AkalabethWorldMapScene.needsMapRedraw) {\n  this.drawWorldMap();\n  RetroC64AkalabethWorldMapScene.needsMapRedraw = false;\n}\nif (RetroC64AkalabethWorldMapScene.moveEntered > 0 && this._moveAnimationStarted === 0) {\n  // move was entered.  for now. just run an animation\n  this._moveAnimationStarted = time;\n  RetroC64AkalabethWorldMapScene.animationPlaying = true;\n}\nif (this._moveAnimationStarted > 0) {\n  // started the movement animation\n  if (this._moveAnimationStarted + this._moveCycleLength <= time) {\n    // animation cycle is over.\n    this._moveAnimationStarted = 0;\n    RetroC64AkalabethWorldMapScene.moveEntered = -1;\n    RetroC64AkalabethWorldMapScene.animationPlaying = false;\n    RetroC64AkalabethWorldMapScene.needsMapRedraw = true;\n    // remove old animation data\n    for (let i = this._terrainImages.length - 1; i >= 0; i--) {\n      for (let j = this._terrainImages[i].length - 1; j >= 0; j--) {\n        let image = this._terrainImages[i][j];\n        delete image[\"move animation starting x\"];\n        delete image[\"move animation starting y\"];\n      }\n    }\n  } else {\n    // animation cycle is still going\n    let percent = (time - this._moveAnimationStarted) / this._moveCycleLength;\n    switch (RetroC64AkalabethWorldMapScene.moveEntered) {\n      case 1: // NORTH\n        this.animateNorth(percent);\n        break;\n      case 2: // SOUTH\n        this.animateSouth(percent);\n        break;\n      case 3: // WEST\n        this.animateWest(percent);\n        break;\n      case 4: // EAST\n        this.animateEast(percent);\n        break;\n    }\n  }\n}",
                              "order": "1"
                            }
                          ],
                          "uid": "kvbeiemuy438ytj3kwl"
                        }
                      ],
                      "design": [],
                      "uid": "kvbb2vo34nrx7fn9esx"
                    },
                    {
                      "title": "The World Map Command Interface",
                      "order": 2,
                      "content": "A Ui Scene class will be created to handle user interaction with the World Scene",
                      "children": [
                        {
                          "title": "The UI Scene Class",
                          "order": 1,
                          "content": "A UI class will need to be defined.  The Ui Scene template will be used.",
                          "children": [],
                          "design": [
                            {
                              "classTitle": "Akalabeth World Map Interface",
                              "classHandle": "AkalabethWorldMapInterface",
                              "fileHandle": "akalabeth-world-map-interface",
                              "tags": [
                                "class",
                                "ui-scene"
                              ],
                              "classDefinition": "A Ui Scene class will be created to handle user interaction with the World Scene",
                              "weight": "0.5",
                              "uid": "kvgxovajzvbreqjpen",
                              "filePath": [
                                "scenes",
                                "akalabeth",
                                "world-map"
                              ],
                              "initialState": "AKALABETH_WORLD_MAP_DISPLAY",
                              "gridWidth": "8",
                              "gridHeight": "24"
                            }
                          ],
                          "uid": "kvgxovak8ywu0ahnp4u"
                        },
                        {
                          "title": "File Imports",
                          "order": 2,
                          "content": "The UI class will require the following imports:\n* Scene Contoller\n* Parent Scene",
                          "children": [],
                          "design": [
                            {
                              "classUid": "kvgxovajzvbreqjpen",
                              "importHandle": "RetroC64SceneController",
                              "importPath": "../../../scenes/retroc64-scene-controller",
                              "tags": [
                                "code",
                                "required import"
                              ],
                              "uid": "kvgxovak01jwtjl7skqx"
                            },
                            {
                              "classUid": "kvgxovajzvbreqjpen",
                              "importHandle": "RetroC64AkalabethWorldMapScene",
                              "importPath": "./retroc64-akalabeth-world-map-scene",
                              "tags": [
                                "code",
                                "required import"
                              ],
                              "uid": "kvgxovak8ipqc3ke2eu"
                            },
                            {
                              "classUid": "kvb9u882akpjwedlt4",
                              "importHandle": "RetroC64AkalabethWorldMapInterface",
                              "importPath": "./retroc64-akalabeth-world-map-interface",
                              "tags": [
                                "code",
                                "required import"
                              ],
                              "uid": "kvgxovakd0my3g7uzb"
                            },
                            {
                              "classUid": "kvgxovajzvbreqjpen",
                              "importHandle": "RetroC64AkalabethController",
                              "importPath": "../../../services/akalabeth/retroc64-akalabeth-controller",
                              "tags": [
                                "code",
                                "required import"
                              ],
                              "uid": "kvjkfl4vijwv4ow0lql"
                            },
                            {
                              "classUid": "kvgxovajzvbreqjpen",
                              "importHandle": "RetroC64AkalabethShopScene",
                              "importPath": "../shop/retroc64-akalabeth-shop-scene",
                              "tags": [
                                "code",
                                "required import"
                              ],
                              "uid": "kvwi58gftmne0jg9hlc"
                            },
                            {
                              "classUid": "kvgxovajzvbreqjpen",
                              "importHandle": "RetroC64AkalabethDungeonScene",
                              "importPath": "../dungeon/retroc64-akalabeth-dungeon-scene",
                              "tags": [
                                "code",
                                "required import"
                              ],
                              "uid": "kvwi6abqzdhfesyd3dq"
                            },
                            {
                              "classUid": "kvgxovajzvbreqjpen",
                              "importHandle": "RetroC64Constants",
                              "importPath": "../../../config/retroc64-constants",
                              "tags": [
                                "code",
                                "required import"
                              ],
                              "uid": "kvwidrgyjt3it2gbs4s"
                            }
                          ],
                          "uid": "kvgxovak5kdccd03df7"
                        },
                        {
                          "title": "Private Fields",
                          "order": 3,
                          "content": "The UI class will be added as a private member of its scene parent.\nThe Ui Scene will have the following private fields:",
                          "children": [
                            {
                              "title": "Action Taken",
                              "order": 1,
                              "content": "A flag to watch when an action has been taken has been added.",
                              "children": [],
                              "design": [
                                {
                                  "classUid": "kvgxovajzvbreqjpen",
                                  "tags": [
                                    "code",
                                    "private field"
                                  ],
                                  "fieldName": "_actionTaken",
                                  "fieldType": "boolean",
                                  "fieldValue": "false",
                                  "fieldDefinition": "A flag to watch when an action has been taken has been added.",
                                  "order": "1",
                                  "uid": "kvr5yi419yvkavmgqng"
                                },
                                {
                                  "classUid": "kvgxovajzvbreqjpen",
                                  "tags": [
                                    "code",
                                    "public setter property"
                                  ],
                                  "propertyName": "actionTaken",
                                  "setterDefinition": "/**\n * Setter for field _actionTaken.\n * @param {PropertyKey} value the value\n */",
                                  "setterBody": "if (typeof(value) !== \"boolean\") {\n  throw [\"Invalid value\", value];\n}\nthis._actionTaken = value;",
                                  "order": "1",
                                  "uid": "kvr5yi42ngh70645e4"
                                }
                              ],
                              "uid": "kvr5yi3ywvsg00mrm1"
                            }
                          ],
                          "design": [
                            {
                              "classUid": "kvb9u882akpjwedlt4",
                              "tags": [
                                "code",
                                "private field"
                              ],
                              "fieldName": "_akalabethWorldMapInterface",
                              "fieldType": "UiScene",
                              "fieldValue": "new RetroC64AkalabethWorldMapInterface({ scene: _scene, show: false })",
                              "fieldDefinition": "RetroC64AkalabethWorldMapInterface instance",
                              "order": "10",
                              "uid": "kvgxovakmqg348q1kk"
                            }
                          ],
                          "uid": "kvgxovak41zewqtgyqk"
                        },
                        {
                          "title": "View Templates",
                          "order": 4,
                          "content": "The UI class will have defined templates for each view. These will be added to the Constructor Body. Templates have been defined for the following views:",
                          "requires design": true,
                          "children": [
                            {
                              "title": "The Default View",
                              "order": 1,
                              "content": "The default view shows the player's command options, command history, and stats.",
                              "children": [],
                              "design": [
                                {
                                  "tags": [
                                    "view template",
                                    "code"
                                  ],
                                  "uid": "kvmna18d4e7w75luo4n",
                                  "classUid": "kvgxovajzvbreqjpen",
                                  "entryKey": "AKALABETH_WORLD_MAP_DISPLAY",
                                  "code": "group: null,\nchildren: [\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"COMMANDS\", // text\n    ],\n    position: [6, 5],\n    origin: [0.5, 0.5],\n    tint: 10920447,\n  },\n  {\n    comment: \"COMMAND NORTH\",\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"\\uE25E\", // text\n    ],\n    position: {\n      x: {\n        fixed: 6,\n        offset: -2\n      },\n      y: 6\n    },\n    origin: [0.5, 0.5],\n    tint: 10920447,\n    dynamicField: \"northLabel1\"\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"|\", // text\n    ],\n    position: [6, 7],\n    origin: [0.5, 0.5],\n    tint: 10920447,\n    dynamicField: \"northLabel2\"\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"NORTH\", // text\n    ],\n    position: [6, 8],\n    origin: [0.5, 0.5],\n    tint: 10920447,\n    dynamicField: \"northLabel3\"\n  },\n  {\n    comment: \"COMMAND WEST\",\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"\\uE25E\", // text\n    ],\n    position: [5, 9],\n    origin: [0.5, 0.5],\n    angle: [270],\n    tint: 10920447,\n    dynamicField: \"westLabelArrow\"\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"-WEST\", // text\n    ],\n    position: {\n      x: {\n        fixed: 5,\n        offset: {\n          field: \"westLabelArrow\",\n          pixel: -7\n        }\n      },\n      y: 9\n    },\n    origin: [0, 0.5],\n    tint: 10920447,\n    dynamicField: \"westLabel\"\n  },\n  {\n    comment: \"COMMAND EAST\",\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"EAST-\", // text\n    ],\n    position: {\n      x: {\n        fixed: 5.25,\n        offset: {\n          field: \"westLabel\",\n          pixel: 10\n        }\n      },\n      y: 9\n    },\n    origin: [0, 0.5],\n    tint: 10920447,\n    dynamicField: \"eastLabel\"\n  },\n  {\n    comment: \"COMMAND EAST\",\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"\\uE25E\", // text\n    ],\n    position: {\n      x: {\n        fixed: 7,\n        offset: -6\n      },\n      y: 9\n    },\n    origin: [0.5, 0.5],\n    angle: [90],\n    tint: 10920447,\n    dynamicField: \"eastLabelArrow\"\n  },\n  {\n    comment: \"COMMAND SOUTH\",\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"SOUTH\", // text\n    ],\n    position: [6, 10],\n    origin: [0.5, 0.5],\n    tint: 10920447,\n    dynamicField: \"southLabel1\"\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"|\", // text\n    ],\n    position: [6, 11],\n    origin: [0.5, 0.5],\n    tint: 10920447,\n    dynamicField: \"southLabel2\"\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"\\uE25E\", // text\n    ],\n    position: {\n      x: {\n        fixed: 6,\n        offset: -2\n      },\n      y: 12\n    },\n    origin: [0.5, 0.5],\n    angle: [180],\n    tint: 10920447,\n    dynamicField: \"southLabel3\"\n  },\n  {\n    comment: \"COMMAND STATS\",\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"\\uE253-STATS\", // text\n    ],\n    position: [6, 13],\n    origin: [0.5, 0.5],\n    tint: 10920447\n  },\n  {\n    comment: \"COMMAND GO SHOP\",\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"\\uE247-GO TOWN\", // text\n    ],\n    position: [6, 14],\n    origin: [0.5, 0.5],\n    tint: 10920447,\n    dynamicField: \"shopLabel\"\n  },\n  {\n    comment: \"COMMAND GO DUNGEON\",\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"\\uE247-GO DUNGEON\", // text\n    ],\n    position: [6, 14],\n    origin: [0.5, 0.5],\n    tint: 10920447,\n    dynamicField: \"dungeonLabel\"\n  },\n  {\n    comment: \"COMMAND GO CASTLE\",\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"\\uE247-GO CASTLE\", // text\n    ],\n    position: [6, 14],\n    origin: [0.5, 0.5],\n    tint: 10920447,\n    dynamicField: \"castleLabel\"\n  },\n  {\n    comment: \"FOOD\",\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"FOOD=\", // text\n    ],\n    position: [5, 21],\n    origin: [0, 0.5],\n    tint: 10920447,\n    dynamicField: \"foodField\"\n  },\n  {\n    comment: \"HP\",\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"H.P=\", // text\n    ],\n    position: [5, 22],\n    origin: [0, 0.5],\n    tint: 10920447,\n    dynamicField: \"hpField\"\n  },\n  {\n    comment: \"GOLD\",\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"GOLD=\", // text\n    ],\n    position: [5, 23],\n    origin: [0, 0.5],\n    tint: 10920447,\n    dynamicField: \"goldField\"\n  },\n  {\n    comment: \"COMMAND PROMPT\",\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"\", // text\n    ],\n    position: [-0.5, 20],\n    origin: [0, 0.5],\n    tint: 10920447,\n    dynamicField: \"commandHistory2\"\n  },\n  {\n    comment: \"COMMAND PROMPT\",\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"\", // text\n    ],\n    position: [-0.5, 21],\n    origin: [0, 0.5],\n    tint: 10920447,\n    dynamicField: \"commandHistory1\"\n  },\n  {\n    comment: \"COMMAND PROMPT\",\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"\", // text\n    ],\n    position: [-0.5, 22],\n    origin: [0, 0.5],\n    tint: 10920447,\n    dynamicField: \"commandHistory0\"\n  },\n  {\n    comment: \"COMMAND PROMPT\",\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \" COMMAND? \", // text\n    ],\n    position: [-0.5, 23],\n    origin: [0, 0.5],\n    tint: 10920447,\n    dynamicField: \"promptField\"\n  },\n  {\n    comment: \"CREATE TWO IMAGES, CURSOR_ON AND CURSOR_OFF. OFF IS MADE FIRST, SINCE THE GRAPHICS NEEDS TO BE EMPTY\",\n    type: \"graphics-texture\",\n    commands: [\n      {\n        order: 1,\n        command: \"fillStyle\",\n        args: [0xA6A1FF, 0] // color, alpha\n      },\n      {\n        order: 2,\n        command: \"fillRect\",\n        args: [0, 0, 16, 16], // x, y, width, height, corner radius,\n        \"scale controlled args\": [] // no scaled graphics\n      },\n      {\n        order: 3,\n        command: \"generateTexture\",\n        args: [\"cursor_off\", 16, 16], // key, scale width, scale height\n        \"scale controlled args\": [] // no scaled graphics\n      },\n      {\n        order: 4,\n        command: \"fillStyle\",\n        args: [0xA6A1FF, 1] // color, alpha\n      },\n      {\n        order: 5,\n        command: \"fillRect\",\n        args: [0, 0, 16, 16], // x, y, width, height, corner radius,\n        \"scale controlled args\": [] // no scaled graphics\n      },\n      {\n        order: 6,\n        command: \"generateTexture\",\n        args: [\"cursor_on\", 16, 16], // key, scale width, scale height\n        \"scale controlled args\": [] // no scaled graphics\n      },\n    ]\n  },\n  {\n    comment: \"CREATE CURSOR SPRITE\",\n    type: \"sprite\",\n    args: [\n      0, // x\n      0, // y\n      \"cursor_on\" // texture\n    ],\n    position: {\n      x: {\n        fixed: -0.5,\n        offset: {\n          field: \"promptField\",\n          pixel: 2\n        }\n      },\n      y: {\n        fixed: 23,\n        offset: -1\n      }\n    },\n    origin: [0, 0.5],\n    dynamicField: \"blinkingCursor\"\n  }\n]",
                                  "order": "1"
                                }
                              ],
                              "uid": "kvmna18dybvkg9ubjir"
                            }
                          ],
                          "design": [],
                          "uid": "kvgxovakcbk3cf5b58"
                        },
                        {
                          "title": "Key Listeners",
                          "order": 5,
                          "content": "The UI class will have key listeners for the following views:",
                          "requires design": true,
                          "children": [
                            {
                              "title": "Default Key Listener",
                              "order": 1,
                              "content": "The key listener will listen for valid commands.",
                              "children": [],
                              "design": [
                                {
                                  "tags": [
                                    "key listener handler",
                                    "code"
                                  ],
                                  "uid": "kvmnbgpuawp2rfdrdw",
                                  "classUid": "kvgxovajzvbreqjpen",
                                  "entryKey": "AKALABETH_WORLD_MAP_DISPLAY",
                                  "code": "if (!RetroC64AkalabethWorldMapScene.animationPlaying) {\n  switch (event.key) {\n    case \"ArrowUp\":\n      context.moveNorth();\n      break;\n    case \"ArrowDown\":\n      context.moveSouth();\n      break;\n    case \"ArrowLeft\":\n      context.moveWest();\n      break;\n    case \"ArrowRight\":\n      context.moveEast();\n      break;\n    case \" \":\n      // change the COMMAND PROMPT text\n      context._dynamicFields.setText(\"promptField\", \" COMMAND? PASS\");\n      // move the cursor\n      context.moveCursor();\n      // set move entered to anything > 0. this starts the animation sequence\n      RetroC64AkalabethWorldMapScene.moveEntered = 9999; // fake animation sequence\n      // start a timer to send the pass message after 375 ms and then update the screen after 375 more ms\n      context._scene.time.delayedCall(\n        750, // milliseconds\n        function() {\n          this.recordHistory();\n          this._dynamicFields.setText(\"promptField\", \" COMMAND? \");\n          this.moveCursor();\n          this._actionTaken = true;\n        }, // callback function\n        [], // args\n        context // the scope object\n      );\n      break;\n    case \"P\":\n    case \"p\":\n      // change the COMMAND PROMPT text\n      if (RetroC64AkalabethController.pauseOn) {\n        context._dynamicFields.setText(\"promptField\", \" COMMAND? PAUSE OFF\");\n      } else {\n        context._dynamicFields.setText(\"promptField\", \" COMMAND? PAUSE ON\");\n      }\n      RetroC64AkalabethController.pauseOn = !RetroC64AkalabethController.pauseOn;\n      // move the cursor\n      context.moveCursor();\n      // set move entered to anything > 0. this starts the animation sequence\n      RetroC64AkalabethWorldMapScene.moveEntered = 9999; // fake animation sequence\n      // start a timer to send the pass message after 375 ms and then update the screen after 375 more ms\n      context._scene.time.delayedCall(\n        750, // milliseconds\n        function() {\n          this.recordHistory();\n          this._dynamicFields.setText(\"promptField\", \" COMMAND? \");\n          this.moveCursor();\n        }, // callback function\n        [], // args\n        context // the scope object\n      );\n      break;\n    case \"S\":\n    case \"s\":\n      // change the COMMAND PROMPT text\n      context._dynamicFields.setText(\"promptField\", \" COMMAND? STATS\");\n      // move the cursor\n      context.moveCursor();\n      // clear commands\n      context.recordHistory();\n      context._dynamicFields.setText(\"promptField\", \" COMMAND? \");\n      context.moveCursor();\n      // go to stats\n      RetroC64AkalabethCharacterStatsScene.callbackState = RetroC64Constants.AKALABETH_WORLD_MAP;\n      RetroC64SceneController.gotoState({ state: RetroC64Constants.AKALABETH_CHARACTER_STATS });\n      break;\n    case \"G\":\n    case \"g\":\n      {\n        switch (RetroC64AkalabethController.world.terrain[RetroC64AkalabethController.world.playerY][RetroC64AkalabethController.world.playerX]) {\n          case 3:\n            // change the COMMAND PROMPT text\n            context._dynamicFields.setText(\"promptField\", \" COMMAND? GO TOWN\");\n            // move the cursor\n            context.moveCursor();\n            // go to shop screen in 375 ms\n            context._scene.time.delayedCall(\n              375, // milliseconds\n              function() {\n                // clear commands\n                this.recordHistory();\n                this._dynamicFields.setText(\"promptField\", \" COMMAND? \");\n                this.moveCursor();\n                // go to town\n                RetroC64AkalabethShopScene.callbackState = RetroC64Constants.AKALABETH_WORLD_MAP;\n                RetroC64SceneController.gotoState({\n                  state: RetroC64Constants.AKALABETH_EQUIPMENT_SHOP,\n                  actions: [\n                    function() {\n                      // run this in a delayed call so the process to eat food happens after returning to the scene\n                      context._scene.time.delayedCall(\n                        375, // milliseconds\n                        function() { this._actionTaken = true; }, // callback function\n                        [], // args\n                        context // the scope object\n                      )\n                    }\n                  ]\n                });\n              }, // callback function\n              [], // args\n              context // the scope object\n            );\n            break;\n          case 4:\n            // change the COMMAND PROMPT text\n            context._dynamicFields.setText(\"promptField\", \" COMMAND? GO DUNGEON\");\n            // move the cursor\n            context.moveCursor();\n            // go to shop screen in 375 ms\n            context._scene.time.delayedCall(\n              375, // milliseconds\n              function() {\n                // clear commands\n                this.recordHistory();\n                this._dynamicFields.setText(\"promptField\", \" COMMAND? \");\n                this.moveCursor();\n                // go to dungeon\n                RetroC64SceneController.gotoState({\n                  state: RetroC64Constants.AKALABETH_DUNGEON,\n                  actions: [\n                    function() {\n                      // do not delay this call, since it needs to process when hitting the dungeon scene\n                      // set direction facing and player location\n                      RetroC64AkalabethController.world.levelsUnderground = 1;\n                      RetroC64AkalabethController.world.newDungeonLevel();\n                      RetroC64AkalabethController.world.dx = 1;\n                      RetroC64AkalabethController.world.dy = 0;\n                      RetroC64AkalabethController.world.px = 1;\n                      RetroC64AkalabethController.world.py = 1;\n                      // signal to the dungeon scene that an action was taken and reduce the player's food\n                      RetroC64AkalabethDungeonScene.actionTaken = true;\n                    }\n                  ]\n                });\n              }, // callback function\n              [], // args\n              context // the scope object\n            );\n            break;\n          case 5:\n            // change the COMMAND PROMPT text\n            context._dynamicFields.setText(\"promptField\", \" COMMAND? GO CASTLE\");\n            // move the cursor\n            context.moveCursor();\n            // go to shop screen in 375 ms\n            context._scene.time.delayedCall(\n              375, // milliseconds\n              function() {\n                // clear commands\n                this.recordHistory();\n                this._dynamicFields.setText(\"promptField\", \" COMMAND? \");\n                this.moveCursor();\n                // go to town\n                RetroC64AkalabethShopScene.callbackState = RetroC64Constants.AKALABETH_WORLD_MAP;\n                RetroC64SceneController.gotoState({\n                  state: RetroC64Constants.AKALABETH_CASTLE,\n                  actions: [\n                    function() {\n                      context._scene.time.delayedCall(\n                        375, // milliseconds\n                        function() { this._actionTaken = true; }, // callback function\n                        [], // args\n                        context // the scope object\n                      )\n                    }\n                  ]\n                });\n              }, // callback function\n              [], // args\n              context // the scope object\n            );\n            break;\n          default:\n            context.huh();\n        }\n      }\n      break;\n    case \"Enter\":\n    case \"Escape\":\n    case \" \":\n      context.huh();\n      break;\n    default:\n      // change the COMMAND PROMPT text\n      context._dynamicFields.setText(\"promptField\", [\" COMMAND? \", event.key].join(\"\"));\n      // move the cursor\n      context.moveCursor();\n      context.huh();\n  }\n}",
                                  "order": "1"
                                }
                              ],
                              "uid": "kvmnbgpuwvx3yyhcr2"
                            }
                          ],
                          "design": [],
                          "uid": "kvgxovakbz0e1lpuymi"
                        },
                        {
                          "title": "Updates to the 'create' methods",
                          "order": 6,
                          "content": "The UI class will have the following updates to the 'create' method:",
                          "children": [],
                          "design": [
                            {
                              "classUid": "kvgxovajzvbreqjpen",
                              "tags": [
                                "code",
                                "create"
                              ],
                              "code": "// start the cursor animation\nthis._dynamicFields.getObject(\"blinkingCursor\")[0].anims.create({\n  key: \"blink\",\n  frames: [\n    { key: \"cursor_off\" },\n    { key: \"cursor_on\" }\n  ],\n  frameRate: 2,\n  repeat: -1 // repeat infinitely\n});\nthis._dynamicFields.getObject(\"blinkingCursor\")[0].play(\"blink\");\nRetroC64AkalabethController.character.addWatcher(this);\nRetroC64AkalabethController.character.notifyWatchers();\n",
                              "order": "1",
                              "uid": "kvig1n6sj48y0l9etf"
                            }
                          ],
                          "uid": "kvgxovakg1tu47adam7"
                        },
                        {
                          "title": "Scene start/reset",
                          "order": 7,
                          "content": "When the UI scene is started/reset, the following changes are applied for each view:",
                          "children": [],
                          "design": [],
                          "uid": "kvgxovaki44skroa6ea"
                        },
                        {
                          "title": "Public Members",
                          "order": 8,
                          "content": "Occasionally, a UI Scene will need some further public members added.  This UI has added the following public members:",
                          "children": [
                            {
                              "title": "Move Cursor",
                              "order": 1,
                              "content": "A public member will be created to handle moving the cursor after a command has been accepted. The cursor will be moved to the end of the command prompt line.",
                              "children": [],
                              "design": [
                                {
                                  "tags": [
                                    "public member",
                                    "code"
                                  ],
                                  "uid": "kvi4sbkn4qdtd328hgm",
                                  "classUid": "kvgxovajzvbreqjpen",
                                  "memberName": "moveCursor",
                                  "memberDefinition": "/**\n * Moves the cursor to the end of the command prompt line.\n */",
                                  "arguments": "",
                                  "code": "let x = -0.5 + this._dynamicFields.getObject(\"promptField\")[0].width / this._COLUMN_WIDTH; // to the right of the prompt message\nx += 2 / this._COLUMN_WIDTH; // add 2px buffer\nlet y = 23 - 1 / this._ROW_HEIGHT; // move up 1 pixel (looks better);\nthis._grid.placeAt(x, y, this._dynamicFields.getObject(\"blinkingCursor\")[0]);",
                                  "order": "1"
                                }
                              ],
                              "uid": "kvi4sbkmwcltyv1nlh"
                            },
                            {
                              "title": "Move North",
                              "order": 2,
                              "content": "A member will be added to handle the player choosing to move northwards",
                              "children": [],
                              "design": [
                                {
                                  "tags": [
                                    "public member",
                                    "code"
                                  ],
                                  "uid": "kvi4yx5cnq71nxbdrrh",
                                  "classUid": "kvgxovajzvbreqjpen",
                                  "memberName": "moveNorth",
                                  "memberDefinition": "/**\n * Handles the player action to move north.\n */",
                                  "arguments": "",
                                  "code": "// change the COMMAND PROMPT text\nthis._dynamicFields.setText(\"promptField\", \" COMMAND? NORTH\");\n// move the cursor\nthis.moveCursor();\n// check to see if mountains are in the way\nif (RetroC64AkalabethController.world.terrain[RetroC64AkalabethController.world.playerY - 1][RetroC64AkalabethController.world.playerX] === 1) {\n  // sequence for animation is as follows:\n  // set move entered to anything > 0. this starts the animation sequence\n  RetroC64AkalabethWorldMapScene.moveEntered = 9999; // fake animation sequence\n  // start a timer to send the error message after 375 ms and then update the screen after 375 more ms\n  this._scene.time.delayedCall(\n    375, // milliseconds\n    function() {\n      this.recordHistory();\n      this._dynamicFields.setText(\"promptField\", \" YOU CAN'T PASS THE MOUNTAINS\");\n      this.moveCursor();\n      this._scene.time.delayedCall(\n        375, // milliseconds\n        function() {\n          this.recordHistory();\n          this._actionTaken = true;\n        }, // callback function\n        [], // args\n        this // the scope object\n      );\n    }, // callback function\n    [], // args\n    this // the scope object\n  );\n} else {\n  // enter the move\n  RetroC64AkalabethWorldMapScene.moveEntered = 1;\n  // change the player's position\n  RetroC64AkalabethController.world.playerY--;\n  // start a timer to update the screen after 750 ms (about the time of the animation)\n  this._scene.time.delayedCall(\n    750, // milliseconds\n    function() {\n      this.recordHistory();\n      this._actionTaken = true;\n    }, // callback function\n    [], // args\n    this // the scope object\n  );\n}",
                                  "order": "21"
                                }
                              ],
                              "uid": "kvi4yx5bds2nwhp139m"
                            },
                            {
                              "title": "Move South",
                              "order": 3,
                              "content": "A member will be added to handle the player command to move south.",
                              "children": [],
                              "design": [
                                {
                                  "tags": [
                                    "public member",
                                    "code"
                                  ],
                                  "uid": "kvig6lpn6wqpj7ymttp",
                                  "classUid": "kvgxovajzvbreqjpen",
                                  "memberName": "moveSouth",
                                  "memberDefinition": "/**\n * Handles the player action to move south.\n */",
                                  "arguments": "",
                                  "code": "// change the COMMAND PROMPT text\nthis._dynamicFields.setText(\"promptField\", \" COMMAND? SOUTH\");\n// move the cursor\nthis.moveCursor();\n// check to see if mountains are in the way\nif (RetroC64AkalabethController.world.terrain[RetroC64AkalabethController.world.playerY + 1][RetroC64AkalabethController.world.playerX] === 1) {\n  // sequence for animation is as follows:\n  // set move entered to anything > 0. this starts the animation sequence\n  RetroC64AkalabethWorldMapScene.moveEntered = 9999; // fake animation sequence\n  // start a timer to send the error message after 375 ms and then update the screen after 375 more ms\n  this._scene.time.delayedCall(\n    375, // milliseconds\n    function() {\n      this.recordHistory();\n      this._dynamicFields.setText(\"promptField\", \" YOU CAN'T PASS THE MOUNTAINS\");\n      this.moveCursor();\n      this._scene.time.delayedCall(\n        375, // milliseconds\n        function() {\n          this.recordHistory();\n          this._actionTaken = true;\n        }, // callback function\n        [], // args\n        this // the scope object\n      );\n    }, // callback function\n    [], // args\n    this // the scope object\n  );\n} else {\n  // enter the move\n  RetroC64AkalabethWorldMapScene.moveEntered = 2;\n  // change the player's position\n  RetroC64AkalabethController.world.playerY++;\n  // start a timer to update the screen after 750 ms (about the time of the animation)\n  this._scene.time.delayedCall(\n    750, // milliseconds\n    function() {\n      this.recordHistory();\n      this._actionTaken = true;\n    }, // callback function\n    [], // args\n    this // the scope object\n  );\n}",
                                  "order": "22"
                                }
                              ],
                              "uid": "kvig6lpm30iv1tfpwth"
                            },
                            {
                              "title": "Move East",
                              "order": 4,
                              "content": "A member will be added to handle the player command to move east.",
                              "children": [],
                              "design": [
                                {
                                  "tags": [
                                    "public member",
                                    "code"
                                  ],
                                  "uid": "kvig8486yrgysp756yp",
                                  "classUid": "kvgxovajzvbreqjpen",
                                  "memberName": "moveEast",
                                  "memberDefinition": "/**\n * Handles the player action to move east.\n */",
                                  "arguments": "",
                                  "code": "// change the COMMAND PROMPT text\nthis._dynamicFields.setText(\"promptField\", \" COMMAND? EAST\");\n// move the cursor\nthis.moveCursor();\n// check to see if mountains are in the way\nif (RetroC64AkalabethController.world.terrain[RetroC64AkalabethController.world.playerY][RetroC64AkalabethController.world.playerX + 1] === 1) {\n  // sequence for animation is as follows:\n  // set move entered to anything > 0. this starts the animation sequence\n  RetroC64AkalabethWorldMapScene.moveEntered = 9999; // fake animation sequence\n  // start a timer to send the error message after 375 ms and then update the screen after 375 more ms\n  this._scene.time.delayedCall(\n    375, // milliseconds\n    function() {\n      this.recordHistory();\n      this._dynamicFields.setText(\"promptField\", \" YOU CAN'T PASS THE MOUNTAINS\");\n      this.moveCursor();\n      this._scene.time.delayedCall(\n        375, // milliseconds\n        function() {\n          this.recordHistory();\n          this._actionTaken = true;\n        }, // callback function\n        [], // args\n        this // the scope object\n      );\n    }, // callback function\n    [], // args\n    this // the scope object\n  );\n} else {\n  // enter the move\n  RetroC64AkalabethWorldMapScene.moveEntered = 4;\n  // change the player's position\n  RetroC64AkalabethController.world.playerX++;\n  // start a timer to update the screen after 750 ms (about the time of the animation)\n  this._scene.time.delayedCall(\n    750, // milliseconds\n    function() {\n      this.recordHistory();\n      this._actionTaken = true;\n    }, // callback function\n    [], // args\n    this // the scope object\n  );\n}",
                                  "order": "23"
                                }
                              ],
                              "uid": "kvig8486nn8y04uebze"
                            },
                            {
                              "title": "Move West",
                              "order": 5,
                              "content": "A member will be added to handle the player command to move west.",
                              "children": [],
                              "design": [
                                {
                                  "tags": [
                                    "public member",
                                    "code"
                                  ],
                                  "uid": "kvig9lqorwac8k1uyx",
                                  "classUid": "kvgxovajzvbreqjpen",
                                  "memberName": "moveWest",
                                  "memberDefinition": "/**\n * Handles the player action to move west.\n */",
                                  "arguments": "",
                                  "code": "// change the COMMAND PROMPT text\nthis._dynamicFields.setText(\"promptField\", \" COMMAND? WEST\");\n// move the cursor\nthis.moveCursor();\n// check to see if mountains are in the way\nif (RetroC64AkalabethController.world.terrain[RetroC64AkalabethController.world.playerY][RetroC64AkalabethController.world.playerX - 1] === 1) {\n  // sequence for animation is as follows:\n  // set move entered to anything > 0. this starts the animation sequence\n  RetroC64AkalabethWorldMapScene.moveEntered = 9999; // fake animation sequence\n  // start a timer to send the error message after 375 ms and then update the screen after 375 more ms\n  this._scene.time.delayedCall(\n    375, // milliseconds\n    function() {\n      this.recordHistory();\n      this._dynamicFields.setText(\"promptField\", \" YOU CAN'T PASS THE MOUNTAINS\");\n      this.moveCursor();\n      this._scene.time.delayedCall(\n        375, // milliseconds\n        function() {\n          this.recordHistory();\n          this._actionTaken = true;\n        }, // callback function\n        [], // args\n        this // the scope object\n      );\n    }, // callback function\n    [], // args\n    this // the scope object\n  );\n} else {\n  // enter the move\n  RetroC64AkalabethWorldMapScene.moveEntered = 3;\n  // change the player's position\n  RetroC64AkalabethController.world.playerX--;\n  // start a timer to update the screen after 750 ms (about the time of the animation)\n  this._scene.time.delayedCall(\n    750, // milliseconds\n    function() {\n      this.recordHistory();\n      this._actionTaken = true;\n    }, // callback function\n    [], // args\n    this // the scope object\n  );\n}",
                                  "order": "24"
                                }
                              ],
                              "uid": "kvig9lqo103j8g2q1x8c"
                            },
                            {
                              "title": "Record History",
                              "order": 6,
                              "content": "A member will be added to record the history of the user's command on-screen",
                              "children": [],
                              "design": [
                                {
                                  "classUid": "kvgxovajzvbreqjpen",
                                  "tags": [
                                    "code",
                                    "public member"
                                  ],
                                  "memberName": "recordHistory",
                                  "memberDefinition": "/**\n * Records command history on-screen.\n */",
                                  "arguments": "",
                                  "code": "this._dynamicFields.setText(\"commandHistory2\", this._dynamicFields.getText(\"commandHistory1\"));\nthis._dynamicFields.setText(\"commandHistory1\", this._dynamicFields.getText(\"commandHistory0\"));\nthis._dynamicFields.setText(\"commandHistory0\", this._dynamicFields.getText(\"promptField\"));",
                                  "order": "6",
                                  "uid": "kvihgnoza96zjz9gv3"
                                }
                              ],
                              "uid": "kvihgnoyt396g8o9udf"
                            },
                            {
                              "title": "Character Watcher",
                              "order": 7,
                              "content": "This interface will watch the character instance and update the view when the character updates.",
                              "children": [],
                              "design": [
                                {
                                  "classUid": "kvgxovajzvbreqjpen",
                                  "tags": [
                                    "code",
                                    "public member"
                                  ],
                                  "memberName": "watchUpdated",
                                  "memberDefinition": "/**\n * Handles updates to a Watchable instance.\n * @param {Watchable} data the Watchable instance being updated\n */",
                                  "arguments": "data",
                                  "code": "// call base\nWatcher.prototype.watchUpdated.call(this, data);\n// update fields\nthis._dynamicFields.setText(\"foodField\", [\"FOOD=\", data.getNumberInInventory(\"FOOD\")].join(\"\"));\nthis._dynamicFields.setText(\"hpField\",   [\"H.P.=\", data.hitPoints].join(\"\"));\nthis._dynamicFields.setText(\"goldField\", [\"GOLD=\", data.gold].join(\"\"));",
                                  "order": "7",
                                  "uid": "kvijqjes39xbbf7xdmq"
                                }
                              ],
                              "uid": "kvijqjeqg33bbfkfq6"
                            },
                            {
                              "title": "Eating Food",
                              "order": 8,
                              "content": "A member to have the player eat food after every action will be added.",
                              "children": [],
                              "design": [
                                {
                                  "tags": [
                                    "public member",
                                    "code"
                                  ],
                                  "uid": "kvil352zppn4jrvvjz",
                                  "classUid": "kvgxovajzvbreqjpen",
                                  "memberName": "eatFood",
                                  "memberDefinition": "/**\n * Handles the player eating food after an action.\n */",
                                  "arguments": "",
                                  "code": "// add -1 food count\nRetroC64AkalabethController.character.addToInventory({ name: \"FOOD\", count: -1 });\n// check to see if player has enough food.\nif (RetroC64AkalabethController.character.getNumberInInventory(\"FOOD\") > 0) {\n  this._dynamicFields.setText(\"promptField\", \" COMMAND? \");\n  this.moveCursor();\n} else {\n  RetroC64AkalabethWorldMapScene.moveEntered = 9999; // fake animation sequence\n  RetroC64AkalabethController.character.hitPoints = 0;\n  // show message\n  this._dynamicFields.setText(\"promptField\", \" YOU HAVE STARVED!!!!!\");\n  this.moveCursor();\n  // go to game over screen in 1500 ms\n  this._scene.time.delayedCall(\n    1500, // milliseconds\n    function() {\n      // clear messages and history and reset the cursor\n      this._dynamicFields.setText(\"commandHistory2\", \"\");\n      this._dynamicFields.setText(\"commandHistory1\", \"\");\n      this._dynamicFields.setText(\"commandHistory0\", \"\");\n      this._dynamicFields.setText(\"promptField\", \" COMMAND? \");\n      this.moveCursor();\n\n      // go to game over scene\n      RetroC64SceneController.gotoState({ state: RetroC64Constants.AKALABETH_GAME_OVER }); // GAME OVER\n    }, // callback function\n    [], // args\n    this // the scope object\n  );\n}",
                                  "order": "8"
                                }
                              ],
                              "uid": "kvil352xqr37egn4pme"
                            },
                            {
                              "title": "Set Commands",
                              "order": 9,
                              "content": "A public member to tell the UI to set the display of available commands will be added",
                              "children": [],
                              "design": [
                                {
                                  "tags": [
                                    "public member",
                                    "code"
                                  ],
                                  "uid": "kvjtz4qeja3jggbo3db",
                                  "classUid": "kvgxovajzvbreqjpen",
                                  "memberName": "setCommands",
                                  "memberDefinition": "/**\n * Sets the available commands display.\n */",
                                  "arguments": "",
                                  "code": "this._dynamicFields.setVisible(\"northLabel1\", true);\nthis._dynamicFields.setVisible(\"northLabel2\", true);\nthis._dynamicFields.setVisible(\"northLabel3\", true);\nthis._dynamicFields.setVisible(\"westLabelArrow\", true);\nthis._dynamicFields.setVisible(\"westLabel\", true);\nthis._dynamicFields.setVisible(\"eastLabelArrow\", true);\nthis._dynamicFields.setVisible(\"eastLabel\", true);\nthis._dynamicFields.setVisible(\"southLabel1\", true);\nthis._dynamicFields.setVisible(\"southLabel2\", true);\nthis._dynamicFields.setVisible(\"southLabel3\", true);\nthis._dynamicFields.setVisible(\"castleLabel\", false);\nthis._dynamicFields.setVisible(\"dungeonLabel\", false);\nthis._dynamicFields.setVisible(\"shopLabel\", false);\nif (RetroC64AkalabethController.world.terrain[RetroC64AkalabethController.world.playerY - 1][RetroC64AkalabethController.world.playerX] === 1) {\n  this._dynamicFields.setVisible(\"northLabel1\", false);\n  this._dynamicFields.setVisible(\"northLabel2\", false);\n  this._dynamicFields.setVisible(\"northLabel3\", false);\n}\nif (RetroC64AkalabethController.world.terrain[RetroC64AkalabethController.world.playerY][RetroC64AkalabethController.world.playerX - 1] === 1) {\n  this._dynamicFields.setVisible(\"westLabelArrow\", false);\n  this._dynamicFields.setVisible(\"westLabel\", false);\n}\nif (RetroC64AkalabethController.world.terrain[RetroC64AkalabethController.world.playerY][RetroC64AkalabethController.world.playerX + 1] === 1) {\n  this._dynamicFields.setVisible(\"eastLabelArrow\", false);\n  this._dynamicFields.setVisible(\"eastLabel\", false);\n}\nif (RetroC64AkalabethController.world.terrain[RetroC64AkalabethController.world.playerY + 1][RetroC64AkalabethController.world.playerX] === 1) {\n  this._dynamicFields.setVisible(\"southLabel1\", false);\n  this._dynamicFields.setVisible(\"southLabel2\", false);\n  this._dynamicFields.setVisible(\"southLabel3\", false);\n}\nif (RetroC64AkalabethController.world.terrain[RetroC64AkalabethController.world.playerY][RetroC64AkalabethController.world.playerX] === 3) {\n  this._dynamicFields.setVisible(\"shopLabel\", true);\n}\nif (RetroC64AkalabethController.world.terrain[RetroC64AkalabethController.world.playerY][RetroC64AkalabethController.world.playerX] === 4) {\n  this._dynamicFields.setVisible(\"dungeonLabel\", true);\n}\nif (RetroC64AkalabethController.world.terrain[RetroC64AkalabethController.world.playerY][RetroC64AkalabethController.world.playerX] === 5) {\n  this._dynamicFields.setVisible(\"castleLabel\", true);\n}",
                                  "order": "9"
                                }
                              ],
                              "uid": "kvjtz4qd444entjyef5"
                            },
                            {
                              "title": "Invalid Command Animation",
                              "order": 10,
                              "content": "A member to handle the moments when the player enters an invalid command is needed.",
                              "children": [],
                              "design": [
                                {
                                  "tags": [
                                    "public member",
                                    "code"
                                  ],
                                  "uid": "kvqwx2uigagh0cds8yh",
                                  "classUid": "kvgxovajzvbreqjpen",
                                  "memberName": "huh",
                                  "memberDefinition": "/**\n * Handles the player entering an invalid command.\n */",
                                  "arguments": "",
                                  "code": "// set move entered to anything > 0. this starts the animation sequence\nRetroC64AkalabethWorldMapScene.moveEntered = 9999; // fake animation sequence\n// start a timer to send the error message after 375 ms and then update the screen after 375 more ms\nthis._scene.time.delayedCall(\n  375, // milliseconds\n  function() {\n    this.recordHistory();\n    this._dynamicFields.setText(\"promptField\", \" HUH?\");\n    this.moveCursor();\n    this._scene.time.delayedCall(\n      375, // milliseconds\n      function() {\n        this.recordHistory();\n        this._dynamicFields.setText(\"promptField\", \" COMMAND? \");\n        this.moveCursor();\n      }, // callback function\n      [], // args\n      this // the scope object\n    );\n  }, // callback function\n  [], // args\n  this // the scope object\n);",
                                  "order": "25"
                                }
                              ],
                              "uid": "kvqwx2uhazqa08kowl5"
                            }
                          ],
                          "design": [],
                          "uid": "kvgxovakh04ywsdsni8"
                        },
                        {
                          "title": "Updates to the 'update' method.",
                          "order": 10,
                          "content": "Updates will be made to the 'update' method to perform various tasks during each cycle.  These include:\n\n* updating the command display",
                          "children": [],
                          "design": [
                            {
                              "tags": [
                                "update",
                                "code"
                              ],
                              "uid": "kvju22dun6zfzkuud",
                              "classUid": "kvgxovajzvbreqjpen",
                              "code": "if (RetroC64AkalabethWorldMapScene.needsMapRedraw) {\n  this.setCommands();\n}\nif (this._actionTaken) {\n  this.eatFood();\n  this._actionTaken = false;\n}",
                              "order": "1"
                            }
                          ],
                          "uid": "kvju13k5kkcm1o9273"
                        }
                      ],
                      "design": [],
                      "uid": "kvgxovah8lnau9kssxl"
                    }
                  ],
                  "design": [],
                  "uid": "kvb9u883oba77nbfmf"
                }
              ],
              "design": [],
              "uid": "kvb9u880xqak4zoc7c"
            },
            {
              "title": "The Character Stats View",
              "order": 5,
              "content": "The Player can view their character's stats through the Character Stats view.",
              "children": [
                {
                  "title": "The Scene Container Class",
                  "order": 1,
                  "content": "A Scene Container class will need to be defined.  The Scene Container template will be used.",
                  "children": [],
                  "design": [
                    {
                      "classTitle": "Akalabeth Character Stats Scene",
                      "classHandle": "AkalabethCharacterStatsScene",
                      "fileHandle": "akalabeth-character-stats-scene",
                      "tags": [
                        "class",
                        "scene-container"
                      ],
                      "classDefinition": "The Player can view their character's stats through the Character Stats view.",
                      "weight": "1",
                      "uid": "kvntxiu22gbhq9iqqa",
                      "filePath": [
                        "scenes",
                        "akalabeth",
                        "character-stats"
                      ]
                    }
                  ],
                  "uid": "kvntxiu2733y8zs5p6p"
                },
                {
                  "title": "File Imports",
                  "order": 2,
                  "content": "The Game class will include the Scene Container as a required import.\nThe Scene Container class will require the following imports:",
                  "requires design": true,
                  "children": [],
                  "design": [
                    {
                      "classUid": "AF89DG9sgahg9",
                      "importHandle": "RetroC64AkalabethCharacterStatsScene",
                      "importPath": "../scenes/akalabeth/character-stats/retroc64-akalabeth-character-stats-scene",
                      "tags": [
                        "code",
                        "required import"
                      ],
                      "uid": "kvntxiu2tjm0arsp5yq"
                    }
                  ],
                  "uid": "kvntxiu2ojb60qneee"
                },
                {
                  "title": "Postboot Processing",
                  "order": 3,
                  "content": "The Scene Container class will need to be added to the Game class postboot processing.",
                  "requires design": true,
                  "children": [],
                  "design": [
                    {
                      "classUid": "AF89DG9sgahg9",
                      "tags": [
                        "code",
                        "postboot"
                      ],
                      "code": "_game.scene.queueOp(\"start\", \"AkalabethCharacterStatsScene\");",
                      "order": "1",
                      "uid": "kvntxiu2mnkvq9guksq"
                    }
                  ],
                  "uid": "kvntxiu2a1t94lzic25"
                },
                {
                  "title": "Scene Key",
                  "order": 4,
                  "content": "The Scene Container class will need to be added to the scene groups in the Scene Controller class.",
                  "requires design": true,
                  "children": [],
                  "design": [
                    {
                      "classUid": "kuvp9k2j3kwh9rvfmqg",
                      "tags": [
                        "code",
                        "scene group"
                      ],
                      "sceneKey": "[RetroC64Constants.AKALABETH_CHARACTER_STATS]",
                      "sceneValue": "\"AkalabethCharacterStatsScene\"",
                      "order": "1",
                      "uid": "kvntxiu2gkxmvcyema"
                    }
                  ],
                  "uid": "kvntxiu3vkquz7sjo7h"
                },
                {
                  "title": "Scene states",
                  "order": 5,
                  "content": "A State Group will need to be added to the App Constants for this Scene Container",
                  "requires design": true,
                  "children": [],
                  "design": [
                    {
                      "classUid": "kuvp9k2jit3fzra9nj9",
                      "groupName": "AKALABETH_CHARACTER_STATS_STATES",
                      "tags": [
                        "code",
                        "group properties"
                      ],
                      "elements": [
                        {
                          "elementName": "AKALABETH_CHARACTER_STATS_MAIN",
                          "elementValue": "0",
                          "elementDefinition": "The main state for the Character Stats scene",
                          "order": 1
                        }
                      ],
                      "uid": "kvnu7w0g04szly714a3e"
                    },
                    {
                      "classUid": "kvntxiu22gbhq9iqqa",
                      "tags": [
                        "code",
                        "scoped dictionary body 0"
                      ],
                      "dictionaryKey": "[RetroC64Constants.AKALABETH_CHARACTER_STATS_MAIN]",
                      "dictionaryDefinition": "the scene instances displayed during the character stats scene",
                      "dictionaryValue": "[_akalabethCharacterStatsInterface]",
                      "uid": "kvnuaksj343fgrm2r6r"
                    }
                  ],
                  "uid": "kvntxiu36g1cipy0ot2"
                },
                {
                  "title": "Scene Initial State",
                  "order": 6,
                  "content": "The Scene Container initial state is set in the 'create' method of the Scene Controller class. It will be set to the following state:",
                  "requires design": true,
                  "children": [],
                  "design": [
                    {
                      "classUid": "kuvp9k2j3kwh9rvfmqg",
                      "tags": [
                        "code",
                        "create"
                      ],
                      "code": "// set initial state for Character Stats\n[app-handle]AkalabethCharacterStatsScene.state = [app-handle]Constants.AKALABETH_CHARACTER_STATS_MAIN;",
                      "order": "5",
                      "uid": "kvnudo8ywfljl1hktz8"
                    }
                  ],
                  "uid": "kvntxiu3j4skoluazq"
                },
                {
                  "title": "Private Fields",
                  "order": 7,
                  "content": "The Scene Container will have the following private fields:",
                  "children": [
                    {
                      "title": "The callback state",
                      "order": 1,
                      "content": "A private field will be used to track the state to return to from this scene.",
                      "children": [],
                      "design": [
                        {
                          "classUid": "kvntxiu22gbhq9iqqa",
                          "tags": [
                            "code",
                            "private field"
                          ],
                          "fieldName": "_callbackState",
                          "fieldType": "int",
                          "fieldValue": "RetroC64Constants.AKALABETH_WORLD_MAP",
                          "fieldDefinition": "A private field will be used to track the state to return to from this scene.",
                          "order": "1",
                          "uid": "kvqwr0shnam06rixv1e"
                        },
                        {
                          "classUid": "kvntxiu22gbhq9iqqa",
                          "tags": [
                            "code",
                            "public getter/setter property"
                          ],
                          "propertyName": "callbackState",
                          "getterDefinition": "/**\n * Getter for field _callbackState.\n * @returns {Number}\n */",
                          "getterBody": "return _callbackState;",
                          "setterDefinition": "/**\n * Setter for field _callbackState.\n * @param {PropertyKey} value the value\n */",
                          "setterBody": "if (isNaN(parseInt(value))) {\n  throw [\"Invalid value\", value];\n}\n_callbackState = value;",
                          "order": "1",
                          "uid": "kvqwr0sh3btmet0ttn9"
                        }
                      ],
                      "uid": "kvqwr0sevu6fpfhmnps"
                    }
                  ],
                  "design": [],
                  "uid": "kvqvur38y1e9as0uege"
                },
                {
                  "title": "Child Scenes",
                  "order": 8,
                  "content": "The Scene Container is just that: a container.  It will manage the following child scenes:",
                  "requires design": true,
                  "children": [
                    {
                      "title": "The Character Stats Interface",
                      "order": 1,
                      "content": "The Character Stats screen will display a simple interface.",
                      "children": [
                        {
                          "title": "The UI Scene Class",
                          "order": 1,
                          "content": "A UI class will need to be defined.  The Ui Scene template will be used.",
                          "children": [],
                          "design": [
                            {
                              "classTitle": "Akalabeth Character Stats Interface",
                              "classHandle": "AkalabethCharacterStatsInterface",
                              "fileHandle": "akalabeth-character-stats-interface",
                              "tags": [
                                "class",
                                "ui-scene"
                              ],
                              "classDefinition": "The Character Stats screen will display a simple interface.",
                              "weight": "0.5",
                              "uid": "kvnu4sqtbaanf9d3sv",
                              "filePath": [
                                "scenes",
                                "akalabeth",
                                "character-stats"
                              ],
                              "initialState": "AKALABETH_CHARACTER_STATS_MAIN",
                              "gridWidth": "5",
                              "gridHeight": "24"
                            }
                          ],
                          "uid": "kvnu4squory01qk8i79"
                        },
                        {
                          "title": "File Imports",
                          "order": 2,
                          "content": "The UI class will require the following imports:\n* Scene Contoller\n* Parent Scene",
                          "children": [],
                          "design": [
                            {
                              "classUid": "kvnu4sqtbaanf9d3sv",
                              "importHandle": "RetroC64SceneController",
                              "importPath": "../scenes/retroc64-scene-controller",
                              "tags": [
                                "code",
                                "required import"
                              ],
                              "uid": "kvnu4squqoovqqkfv"
                            },
                            {
                              "classUid": "kvnu4sqtbaanf9d3sv",
                              "importHandle": "RetroC64AkalabethCharacterStatsScene",
                              "importPath": "../retroc64-akalabeth-character-stats-scene",
                              "tags": [
                                "code",
                                "required import"
                              ],
                              "uid": "kvnu4squ7ke0ei5djww"
                            },
                            {
                              "classUid": "kvntxiu22gbhq9iqqa",
                              "importHandle": "RetroC64AkalabethCharacterStatsInterface",
                              "importPath": "../scenes/akalabeth/character-stats/retroc64-akalabeth-character-stats-interface",
                              "tags": [
                                "code",
                                "required import"
                              ],
                              "uid": "kvnu4squ3mkidd9usy8"
                            }
                          ],
                          "uid": "kvnu4squwbtcjf77sj"
                        },
                        {
                          "title": "Private Fields",
                          "order": 3,
                          "content": "The UI class will be added as a private member of its scene parent.\nThe Ui Scene will have the following private fields:",
                          "children": [],
                          "design": [
                            {
                              "classUid": "kvntxiu22gbhq9iqqa",
                              "tags": [
                                "code",
                                "private field"
                              ],
                              "fieldName": "_akalabethCharacterStatsInterface",
                              "fieldType": "UiScene",
                              "fieldValue": "new RetroC64AkalabethCharacterStatsInterface({ scene: _scene, show: true })",
                              "fieldDefinition": "RetroC64AkalabethCharacterStatsInterface instance",
                              "order": "10",
                              "uid": "kvnu4squjc9f1ca2r2s"
                            }
                          ],
                          "uid": "kvnu4squoihlpldajpa"
                        },
                        {
                          "title": "View Templates",
                          "order": 4,
                          "content": "The UI class will have defined templates for each view. These will be added to the Constructor Body. Templates have been defined for the following views:",
                          "requires design": true,
                          "children": [
                            {
                              "title": "Default View",
                              "order": 1,
                              "content": "The character stats interface has only one view.",
                              "children": [],
                              "design": [
                                {
                                  "tags": [
                                    "view template",
                                    "code"
                                  ],
                                  "uid": "kvpmn3trl80w0bsudul",
                                  "classUid": "kvnu4sqtbaanf9d3sv",
                                  "entryKey": "AKALABETH_CHARACTER_STATS_MAIN",
                                  "code": "group: null,\nchildren: [\n  {\n    comment: \"COLUMN 1 HEADER\",\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"STAT'S\", // text\n    ],\n    position: [0.5, 1],\n    tint: 10920447\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"HIT POINTS.....\", // text\n    ],\n    position: {\n      x: {\n        fixed: -0.5,\n        offset: 2\n      },\n      y: 2\n    },\n    origin: [0, 0.5],\n    tint: 10920447\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"11\", // text\n    ],\n    position: [1, 2],\n    origin: [1, 0.5],\n    tint: 10920447,\n    dynamicField: \"hpValue\"\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"STRENGTH........\", // text\n    ],\n    position: {\n      x: {\n        fixed: -0.5,\n        offset: 2\n      },\n      y: 3\n    },\n    origin: [0, 0.5],\n    tint: 10920447\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"\", // text\n    ],\n    position: [1, 3],\n    origin: [1, 0.5],\n    tint: 10920447,\n    dynamicField: \"strValue\"\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"DEXTERITY.......\", // text\n    ],\n    position: {\n      x: {\n        fixed: -0.5,\n        offset: 2\n      },\n      y: 4\n    },\n    origin: [0, 0.5],\n    tint: 10920447\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"\", // text\n    ],\n    position: [1, 4],\n    origin: [1, 0.5],\n    tint: 10920447,\n    dynamicField: \"dexValue\"\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"STAMINA...........\", // text\n    ],\n    position: {\n      x: {\n        fixed: -0.5,\n        offset: 2\n      },\n      y: 5\n    },\n    origin: [0, 0.5],\n    tint: 10920447\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"\", // text\n    ],\n    position: [1, 5],\n    origin: [1, 0.5],\n    tint: 10920447,\n    dynamicField: \"stValue\"\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"WISDOM.............\", // text\n    ],\n    position: {\n      x: {\n        fixed: -0.5,\n        offset: 2\n      },\n      y: 6\n    },\n    origin: [0, 0.5],\n    tint: 10920447\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"\", // text\n    ],\n    position: [1, 6],\n    origin: [1, 0.5],\n    tint: 10920447,\n    dynamicField: \"wisValue\"\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"GOLD.................\", // text\n    ],\n    position: {\n      x: {\n        fixed: -0.5,\n        offset: 2\n      },\n      y: 7\n    },\n    origin: [0, 0.5],\n    tint: 10920447\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"\", // text\n    ],\n    position: [1, 7],\n    origin: [1, 0.5],\n    tint: 10920447,\n    dynamicField: \"goldValue\"\n  },\n  {\n    comment: [\n      \"************************************\",\n      \"COLUMN 2 HEADER\"\n    ],\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"WEAPONS\", // text\n    ],\n    position: [3.5, 1],\n    tint: 10920447\n  },\n  {\n    comment: [\"FOOD\"],\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"0\", // text\n    ],\n    position: [2.5, 2],\n    origin: [1, 0.5],\n    tint: 10920447,\n    dynamicField: \"foodCount\"\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"-FOOD\", // text\n    ],\n    position: [2.5, 2],\n    origin: [0, 0.5],\n    tint: 10920447\n  },\n  {\n    comment: [\"RAPIER\"],\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"0\", // text\n    ],\n    position: [2.5, 3],\n    origin: [1, 0.5],\n    tint: 10920447,\n    dynamicField: \"rapierCount\"\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"-RAPIER\", // text\n    ],\n    position: [2.5, 3],\n    origin: [0, 0.5],\n    tint: 10920447\n  },\n  {\n    comment: [\"AXE\"],\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"0\", // text\n    ],\n    position: [2.5, 4],\n    origin: [1, 0.5],\n    tint: 10920447,\n    dynamicField: \"axeCount\"\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"-AXE\", // text\n    ],\n    position: [2.5, 4],\n    origin: [0, 0.5],\n    tint: 10920447\n  },\n  {\n    comment: [\"SHUELD\"],\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"0\", // text\n    ],\n    position: [2.5, 5],\n    origin: [1, 0.5],\n    tint: 10920447,\n    dynamicField: \"shieldCount\"\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"-SHIELD\", // text\n    ],\n    position: [2.5, 5],\n    origin: [0, 0.5],\n    tint: 10920447\n  },\n  {\n    comment: [\"ARROWS\"],\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"0\", // text\n    ],\n    position: [2.5, 6],\n    origin: [1, 0.5],\n    tint: 10920447,\n    dynamicField: \"arrowCount\"\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"-BOW AND ARROWS\", // text\n    ],\n    position: [2.5, 6],\n    origin: [0, 0.5],\n    tint: 10920447\n  },\n  {\n    comment: [\"AMULET\"],\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"0\", // text\n    ],\n    position: [2.5, 7],\n    origin: [1, 0.5],\n    tint: 10920447,\n    dynamicField: \"amuletCount\"\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"-MAGIC AMULET\", // text\n    ],\n    position: [2.5, 7],\n    origin: [0, 0.5],\n    tint: 10920447\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"PRESS -CR- TO CONTINUE\", // text\n    ],\n    position: [2, 9],\n    origin: [0.5, 0.5],\n    tint: 10920447\n  },\n]",
                                  "order": "1"
                                }
                              ],
                              "uid": "kvpmn3toof6s7omipce"
                            }
                          ],
                          "design": [],
                          "uid": "kvnu4squxheg4kkiie"
                        },
                        {
                          "title": "Key Listeners",
                          "order": 5,
                          "content": "The UI class will have key listeners for the following views:",
                          "requires design": true,
                          "children": [
                            {
                              "title": "Default Key Listener",
                              "order": 1,
                              "content": "The key listener will listen for any key entry and then return to the callback scene.",
                              "children": [],
                              "design": [
                                {
                                  "tags": [
                                    "key listener handler",
                                    "code"
                                  ],
                                  "uid": "kvqupkk5rcm3liuicuc",
                                  "classUid": "kvnu4sqtbaanf9d3sv",
                                  "entryKey": "AKALABETH_CHARACTER_STATS_MAIN",
                                  "code": "switch (event.key) {\n  case \"Enter\":\n    context._scene.time.delayedCall(\n      375, // milliseconds\n      function() {\n        RetroC64SceneController.gotoState({ state: RetroC64AkalabethCharacterStatsScene.callbackState });\n      }, // callback function\n      [], // args\n      context // the scope object\n    );\n    break;\n}",
                                  "order": "1"
                                }
                              ],
                              "uid": "kvqupkk0v6ugcxq1x6p"
                            }
                          ],
                          "design": [],
                          "uid": "kvnu4squab135hjoyv"
                        },
                        {
                          "title": "Updates to the 'create' methods",
                          "order": 6,
                          "content": "The UI class will have the following updates to the 'create' method:",
                          "children": [],
                          "design": [
                            {
                              "classUid": "kvnu4sqtbaanf9d3sv",
                              "tags": [
                                "code",
                                "create"
                              ],
                              "code": "RetroC64AkalabethController.character.addWatcher(this);\nRetroC64AkalabethController.character.notifyWatchers(); ",
                              "order": "1",
                              "uid": "kvqvcc20hcux8rd4xwo"
                            }
                          ],
                          "uid": "kvnu4squv89rh257kf"
                        },
                        {
                          "title": "Scene start/reset",
                          "order": 7,
                          "content": "When the UI scene is started/reset, the following changes are applied for each view:",
                          "children": [],
                          "design": [],
                          "uid": "kvnu4squsll3naztti"
                        },
                        {
                          "title": "Public Members",
                          "order": 8,
                          "content": "Occasionally, a UI Scene will need some further public members added.  This UI has added the following public members:",
                          "children": [
                            {
                              "title": "Character Watcher",
                              "order": 1,
                              "content": "A method to watch for character updates will exist within the interface.",
                              "children": [],
                              "design": [
                                {
                                  "classUid": "kvnu4sqtbaanf9d3sv",
                                  "tags": [
                                    "code",
                                    "public member"
                                  ],
                                  "memberName": "watchUpdated",
                                  "memberDefinition": "/**\n * Handles updates to a Watchable instance.\n * @param {Watchable} data the Watchable instance being updated\n */",
                                  "arguments": "data",
                                  "code": "// call base\nWatcher.prototype.watchUpdated.call(this, data);\n// update fields\nthis._dynamicFields.setText(\"hpValue\", data.hitPoints);\nthis._dynamicFields.setText(\"strValue\", data.strength);\nthis._dynamicFields.setText(\"dexValue\", data.dexterity);\nthis._dynamicFields.setText(\"stValue\", data.stamina);\nthis._dynamicFields.setText(\"wisValue\", data.wisdom);\nthis._dynamicFields.setText(\"goldValue\", data.gold);\nthis._dynamicFields.setText(\"foodCount\", data.getNumberInInventory(\"FOOD\"));\nthis._dynamicFields.setText(\"rapierCount\", data.getNumberInInventory(\"RAPIER\"));\nthis._dynamicFields.setText(\"axeCount\", data.getNumberInInventory(\"AXE\"));\nthis._dynamicFields.setText(\"shieldCount\", data.getNumberInInventory(\"SHIELD\"));\nthis._dynamicFields.setText(\"arrowCount\", data.getNumberInInventory(\"BOW AND ARROWS\"));\nthis._dynamicFields.setText(\"amuletCount\", data.getNumberInInventory(\"MAGIC AMULET\"));",
                                  "order": "1",
                                  "uid": "kvo882t0630fkqd8gt"
                                }
                              ],
                              "uid": "kvo882szvst43xtjlr"
                            }
                          ],
                          "design": [],
                          "uid": "kvnu4squmcvrmmjylug"
                        }
                      ],
                      "design": [],
                      "uid": "kvnu4sqrppcnmx7jj0c"
                    }
                  ],
                  "design": [],
                  "uid": "kvntxiu3uzha0up3my"
                }
              ],
              "design": [],
              "uid": "kvntxiu1m4gzl1b7y3j"
            },
            {
              "title": "The Dungeon View",
              "order": 6,
              "content": "The Dungeon View displays the character's trek through the dungeons.",
              "children": [
                {
                  "title": "The Scene Container Class",
                  "order": 1,
                  "content": "A Scene Container class will need to be defined.  The Scene Container template will be used.",
                  "children": [],
                  "design": [
                    {
                      "classTitle": "Akalabeth Dungeon Scene",
                      "classHandle": "AkalabethDungeonScene",
                      "fileHandle": "akalabeth-dungeon-scene",
                      "tags": [
                        "class",
                        "scene-container"
                      ],
                      "classDefinition": "The Dungeon View displays the character's trek through the dungeons.",
                      "weight": "1",
                      "uid": "kvqrg28m9v9wr42q0wf",
                      "filePath": [
                        "scenes",
                        "akalabeth",
                        "dungeon"
                      ]
                    }
                  ],
                  "uid": "kvqrg28nvqzqqodiex"
                },
                {
                  "title": "File Imports",
                  "order": 2,
                  "content": "The Game class will include the Scene Container as a required import.\nThe Scene Container class will require the following imports:",
                  "requires design": true,
                  "children": [],
                  "design": [
                    {
                      "classUid": "AF89DG9sgahg9",
                      "importHandle": "RetroC64AkalabethDungeonScene",
                      "importPath": "../scenes/akalabeth/dungeon/retroc64-akalabeth-dungeon-scene",
                      "tags": [
                        "code",
                        "required import"
                      ],
                      "uid": "kvqrg28nbo1frxf8lnc"
                    }
                  ],
                  "uid": "kvqrg28n5i1esmmikns"
                },
                {
                  "title": "Postboot Processing",
                  "order": 3,
                  "content": "The Scene Container class will need to be added to the Game class postboot processing.",
                  "requires design": true,
                  "children": [],
                  "design": [
                    {
                      "classUid": "AF89DG9sgahg9",
                      "tags": [
                        "code",
                        "postboot"
                      ],
                      "code": "_game.scene.queueOp(\"start\", \"AkalabethDungeonScene\");",
                      "order": "1",
                      "uid": "kvqrg28n87vncutdeb"
                    }
                  ],
                  "uid": "kvqrg28nlneusjzgerc"
                },
                {
                  "title": "Scene Key",
                  "order": 4,
                  "content": "The Scene Container class will need to be added to the scene groups in the Scene Controller class.",
                  "requires design": true,
                  "children": [],
                  "design": [
                    {
                      "classUid": "kuvp9k2j3kwh9rvfmqg",
                      "tags": [
                        "code",
                        "scene group"
                      ],
                      "sceneKey": "[RetroC64Constants.AKALABETH_DUNGEON]",
                      "sceneValue": "\"AkalabethDungeonScene\"",
                      "order": "1",
                      "uid": "kvqrg28npx9n07fwn6b"
                    }
                  ],
                  "uid": "kvqrg28nfu9znjrlxe9"
                },
                {
                  "title": "Scene states",
                  "order": 5,
                  "content": "A State Group will need to be added to the App Constants for this Scene Container",
                  "requires design": true,
                  "children": [],
                  "design": [
                    {
                      "classUid": "kuvp9k2jit3fzra9nj9",
                      "groupName": "AKALABETH_DUNGEON_STATES",
                      "tags": [
                        "code",
                        "group properties"
                      ],
                      "elements": [
                        {
                          "elementName": "AKALABETH_DUNGEON_MAIN",
                          "elementValue": "1",
                          "elementDefinition": "The initial state.",
                          "order": 1
                        }
                      ],
                      "uid": "kvqrg28o2knttfbkbtp"
                    },
                    {
                      "tags": [
                        "scoped dictionary body 0",
                        "code"
                      ],
                      "uid": "kvqrg28ory3xl4jpguc",
                      "classUid": "kvqrg28m9v9wr42q0wf",
                      "dictionaryKey": "[RetroC64Constants.AKALABETH_DUNGEON_MAIN]",
                      "dictionaryDefinition": "the scene instances displayed when this view is active",
                      "dictionaryValue": "[_akalabethDungeonGraphics, _akalabethDungeonInterface]"
                    }
                  ],
                  "uid": "kvqrg28ofvn747o9y3c"
                },
                {
                  "title": "Scene Initial State",
                  "order": 6,
                  "content": "The Scene Container initial state is set in the 'create' method of the Scene Controller class. It will be set to the following state:",
                  "requires design": true,
                  "children": [],
                  "design": [
                    {
                      "tags": [
                        "create",
                        "code"
                      ],
                      "uid": "kvqrg28o05jounceukjb",
                      "classUid": "kuvp9k2j3kwh9rvfmqg",
                      "code": "\n\n// set initial state for INSERT VIEW NAME\nRetroC64AkalabethDungeonScene.state = RetroC64Constants.AKALABETH_DUNGEON_MAIN;",
                      "order": "ORDER_TBD"
                    }
                  ],
                  "uid": "kvqrg28ot0mepcg0t1a"
                },
                {
                  "title": "Private Fields",
                  "order": 7,
                  "content": "The Scene Container may have a few private fields. If so, they will be added here.",
                  "children": [
                    {
                      "title": "Action Taken",
                      "order": 1,
                      "content": "A flag will be used to track whether the player has performed an action this turn.",
                      "children": [],
                      "design": [
                        {
                          "classUid": "kvqrg28m9v9wr42q0wf",
                          "tags": [
                            "code",
                            "private field"
                          ],
                          "fieldName": "_actionTaken",
                          "fieldType": "boolean",
                          "fieldValue": "false",
                          "fieldDefinition": "A flag will be used to track whether the player has performed an action this turn.",
                          "order": "1",
                          "uid": "kvwiakmwpw5otrtv7ij"
                        },
                        {
                          "classUid": "kvqrg28m9v9wr42q0wf",
                          "tags": [
                            "code",
                            "public getter/setter property"
                          ],
                          "propertyName": "actionTaken",
                          "getterDefinition": "/**\n * Getter for field _actionTaken.\n * @returns {Object}\n */",
                          "getterBody": "return _actionTaken;",
                          "setterDefinition": "/**\n * Setter for field _actionTaken.\n * @param {PropertyKey} value the value\n */",
                          "setterBody": "if (typeof(value) !== \"boolean\") {\n  throw [\"Invalid value\", value];\n}\n_actionTaken = value;",
                          "order": "1",
                          "uid": "kvwiakmwgn0xkean5k"
                        }
                      ],
                      "uid": "kvwiakmv1ezitq64711"
                    }
                  ],
                  "design": [],
                  "uid": "kvqrg28of0xctexszhg"
                },
                {
                  "title": "Public Members",
                  "order": 8,
                  "content": "The Scene Container may have a few public members. If so, they will be added here.",
                  "children": [],
                  "design": [],
                  "uid": "kvqrg28ooxmehw5ujz"
                },
                {
                  "title": "Child Scenes",
                  "order": 9,
                  "content": "The Scene Container is just that: a container.  It will manage the following child scenes:",
                  "requires design": true,
                  "children": [
                    {
                      "title": "Dungeon Graphics",
                      "order": 1,
                      "content": "The Dungeon view will have a scene instance for rendering the graphical portions.",
                      "children": [
                        {
                          "title": "The UI Scene Class",
                          "order": 1,
                          "content": "A UI class will need to be defined.  The Ui Scene template will be used.",
                          "children": [],
                          "design": [
                            {
                              "classTitle": "Akalabeth Dungeon Graphics",
                              "classHandle": "AkalabethDungeonGraphics",
                              "fileHandle": "akalabeth-dungeon-graphics",
                              "tags": [
                                "class",
                                "ui-scene"
                              ],
                              "classDefinition": "The Dungeon view will have a scene instance for rendering the graphical portions.",
                              "weight": "0.5",
                              "uid": "kvqriza4va0b77nhnsk",
                              "filePath": [
                                "scenes",
                                "akalabeth",
                                "dungeon"
                              ],
                              "initialState": "AKALABETH_DUNGEON_MAIN",
                              "gridWidth": "1",
                              "gridHeight": "1"
                            }
                          ],
                          "uid": "kvqriza5rn5ervk0x5o"
                        },
                        {
                          "title": "File Imports",
                          "order": 2,
                          "content": "The UI class will require the following imports:\n* Scene Contoller\n* Parent Scene",
                          "children": [],
                          "design": [
                            {
                              "classUid": "kvqriza4va0b77nhnsk",
                              "importHandle": "RetroC64SceneController",
                              "importPath": "../../../scenes/retroc64-scene-controller",
                              "tags": [
                                "code",
                                "required import"
                              ],
                              "uid": "kvqriza56oxof9ja334"
                            },
                            {
                              "classUid": "kvqriza4va0b77nhnsk",
                              "importHandle": "RetroC64AkalabethDungeonScene",
                              "importPath": "./retroc64-akalabeth-dungeon-scene",
                              "tags": [
                                "code",
                                "required import"
                              ],
                              "uid": "kvqriza5aal3f7ws0eb"
                            },
                            {
                              "classUid": "kvqrg28m9v9wr42q0wf",
                              "importHandle": "RetroC64AkalabethDungeonGraphics",
                              "importPath": "./retroc64-akalabeth-dungeon-graphics",
                              "tags": [
                                "code",
                                "required import"
                              ],
                              "uid": "kvqriza57f0okn1uie5"
                            },
                            {
                              "classUid": "kvqriza4va0b77nhnsk",
                              "importHandle": "RetroC64AkalabethController",
                              "importPath": "../../../services/akalabeth/retroc64-akalabeth-controller",
                              "tags": [
                                "code",
                                "required import"
                              ],
                              "uid": "kvwotaxi1tpps4xn51s"
                            }
                          ],
                          "uid": "kvqriza5djy59rz098"
                        },
                        {
                          "title": "Private Fields",
                          "order": 3,
                          "content": "The UI class will be added as a private member of its scene parent.\nThe Ui Scene will have the following private fields:",
                          "children": [
                            {
                              "title": "Graphics Instance",
                              "order": 1,
                              "content": "A Phaser.Graphics instance used for rendering the world map.",
                              "children": [],
                              "design": [
                                {
                                  "classUid": "kvqriza4va0b77nhnsk",
                                  "tags": [
                                    "code",
                                    "private field"
                                  ],
                                  "fieldName": "_dungeonGraphics",
                                  "fieldType": "Phaser.Graphics",
                                  "fieldValue": "null",
                                  "fieldDefinition": "A Phaser.Graphics instance used for rendering the world map.",
                                  "order": "1",
                                  "uid": "kvwwrcrfkmpypszquyn"
                                }
                              ],
                              "uid": "kvwwrcre8q4xh9r00x2"
                            }
                          ],
                          "design": [
                            {
                              "classUid": "kvqrg28m9v9wr42q0wf",
                              "tags": [
                                "code",
                                "private field"
                              ],
                              "fieldName": "_akalabethDungeonGraphics",
                              "fieldType": "UiScene",
                              "fieldValue": "new RetroC64AkalabethDungeonGraphics({ scene: _scene, show: true })",
                              "fieldDefinition": "RetroC64AkalabethDungeonGraphics instance",
                              "order": "10",
                              "uid": "kvqriza5gb3hemxwwqm"
                            }
                          ],
                          "uid": "kvqriza5mfz6cotrvdh"
                        },
                        {
                          "title": "View Templates",
                          "order": 4,
                          "content": "The UI class will have defined templates for each view. These will be added to the Constructor Body. Templates have been defined for the following views:",
                          "requires design": true,
                          "children": [
                            {
                              "title": "Default View",
                              "order": 1,
                              "content": "This is the default view for the scene.",
                              "children": [],
                              "design": [
                                {
                                  "classUid": "kvqriza4va0b77nhnsk",
                                  "tags": [
                                    "code",
                                    "view template"
                                  ],
                                  "entryKey": "AKALABETH_DUNGEON_MAIN",
                                  "code": "group: null,\nchildren: []",
                                  "order": "1",
                                  "uid": "kvqriza58oihdg9tmxj"
                                }
                              ],
                              "uid": "kvqriza5p1mk5967qf"
                            }
                          ],
                          "design": [],
                          "uid": "kvqriza55xw76nyxnu7"
                        },
                        {
                          "title": "Key Listeners",
                          "order": 5,
                          "content": "The UI class will have key listeners for the following views:",
                          "requires design": true,
                          "children": [
                            {
                              "title": "Inactive Key Listener",
                              "order": 1,
                              "content": "The default key listener is inactive.",
                              "children": [],
                              "design": [
                                {
                                  "classUid": "kvqriza4va0b77nhnsk",
                                  "tags": [
                                    "code",
                                    "key listener handler"
                                  ],
                                  "entryKey": "AKALABETH_DUNGEON_MAIN",
                                  "code": "",
                                  "order": "1",
                                  "uid": "kvqriza5rlo0557o0yb"
                                }
                              ],
                              "uid": "kvqriza5iveadi6lyzl"
                            }
                          ],
                          "design": [],
                          "uid": "kvqriza5qmgd76sin28"
                        },
                        {
                          "title": "Updates to the 'create' methods",
                          "order": 6,
                          "content": "The UI class will have the following updates to the 'create' method:",
                          "children": [],
                          "design": [
                            {
                              "classUid": "kvqriza4va0b77nhnsk",
                              "tags": [
                                "code",
                                "create"
                              ],
                              "code": "this._dungeonGraphics = this._scene.make.graphics({ lineStyle: { width: 3, color: 10920447 } });",
                              "order": "1",
                              "uid": "kvwwol6wvjot397wvrb"
                            }
                          ],
                          "uid": "kvqriza5lbnoubxy4j9"
                        },
                        {
                          "title": "Scene start/reset",
                          "order": 7,
                          "content": "When the UI scene is started/reset, the following changes are applied for each view:",
                          "children": [],
                          "design": [],
                          "uid": "kvqriza5j7r0vmg4bx"
                        },
                        {
                          "title": "Public Members",
                          "order": 8,
                          "content": "Occasionally, a UI Scene will need some further public members added.  This UI has added the following public members:",
                          "children": [
                            {
                              "title": "Render",
                              "order": 1,
                              "content": "A method for rendering the dungeon will be added.",
                              "children": [],
                              "design": [
                                {
                                  "classUid": "kvqriza4va0b77nhnsk",
                                  "tags": [
                                    "code",
                                    "public member"
                                  ],
                                  "memberName": "render",
                                  "memberDefinition": "/**\n * Renders the dungeon field of view.\n */",
                                  "arguments": "",
                                  "code": "let px = RetroC64AkalabethController.world.px, py = RetroC64AkalabethController.world.py, dx = RetroC64AkalabethController.world.dx, dy = RetroC64AkalabethController.world.dy;\nlet CENT = RetroC64AkalabethController.world.dungeonLevel[py + dy * DIS][px + dx * DIS];\nlet LEFT = RetroC64AkalabethController.world.dungeonLevel[py + dy * DIS - dx][px + dx * DIS - dy];\nlet RIGH = RetroC64AkalabethController.world.dungeonLevel[py + dy * DIS + dx][px + dx * DIS + dy];\nlet coords = {\n  L1: RetroC64AkalabethController.world.per[DIS][0],\n  R1: RetroC64AkalabethController.world.per[DIS][1],\n  T1: RetroC64AkalabethController.world.per[DIS][2],\n  B1: RetroC64AkalabethController.world.per[DIS][3],\n  L2: RetroC64AkalabethController.world.per[DIS + 1][0],\n  R2: RetroC64AkalabethController.world.per[DIS + 1][1],\n  T2: RetroC64AkalabethController.world.per[DIS + 1][2],\n  B2: RetroC64AkalabethController.world.per[DIS + 1][3]\n};\nconsole.log(\"center\",py + dy * DIS,px + dx * DIS);\nconsole.log(\"left\",py + dy * DIS - dx,px + dx * DIS - dy);\nconsole.log(\"right\",py + dy * DIS + dx,px + dx * DIS + dy);\nconsole.log(LEFT, CENT, RIGH);\nCENT  = parseInt(CENT);\nLEFT  = parseInt(LEFT);\nRIGH = parseInt(RIGH);\nlet MC = parseInt(CENT / 10); // the monster type in this location\nCENT  = CENT - MC * 10;\nLEFT  = parseInt((LEFT / 10 - parseInt(LEFT / 10)) * 10 + .1);\nRIGH  = parseInt((RIGH / 10 - parseInt(RIGH / 10)) * 10 + .1);\nconsole.log(LEFT, CENT, RIGH);\nconsole.log(\"DIS\",DIS,\"MC\",MC)\nif (DIS === 0) {\n  this.leftRightWalls(DIS, LEFT, RIGH, coords);\n} else {\n  this.centerWalls(CENT, coords);\n  switch (CENT) {\n    case 1:\n    case 3:\n    case 4:\n      EN = 1;\n      break;\n    case 5:\n      this.leftRightWalls();\n      if (DIS > 0) {\n        /*\n        HPLOT 139 - 10 / DIS,PER%(DIS,3) TO 139 - 10 / DIS,PER%(DIS,3) - 10 / DIS TO 139 + 10 / DIS,PER%(DIS,3) - 10 / DIS TO 139 + 10 / DIS,PER%(DIS,3) TO 139 - 10 / DIS,PER%(DIS,3)\n        INVERSE :\n        PRINT \"CHEST!\":\n        NORMAL\n        HPLOT 139 - 10 / DIS,PER%(DIS,3) - 10 / DIS TO 139 - 5 / DIS,PER%(DIS,3) - 15 / DIS TO 139 + 15 / DIS,PER%(DIS,3) - 15 / DIS TO 139 + 15 / DIS,PER%(DIS,3) - 5 / DIS TO 139 + 10 / DIS,PER%(DIS,3)\n        HPLOT 139 + 10 / DIS,PER%(DIS,3) - 10 / DIS TO 139 + 15 / DIS,PER%(DIS,3) - 15 / DIS\n        */\n      }\n      break;\n    case 7:\n    case 9:\n      this.leftRightWalls();\n      // HPLOT FT%(DIS,0),FT%(DIS,4) TO FT%(DIS,2),FT%(DIS,5) TO FT%(DIS,3),FT%(DIS,5) TO FT%(DIS,1),FT%(DIS,4) TO FT%(DIS,0),FT%(DIS,4)\n      if (CENT === 7) {\n        /*\n        BASE = LAD%(DIS,3): \n        TP   = LAD%(DIS,2):   \n        LX   = LAD%(DIS,0):   \n        RX   = LAD%(DIS,1):   \n        HPLOT LX,BA TO LX,TP:\n        HPLOT RX,TP TO RX,BA\n\n        Y1 = (BA * 4 + TP) / 5:     \n        Y2 = (BA * 3 + TP * 2) / 5: \n        Y3 = (BA * 2 + TP * 3) / 5: \n        Y4 = (BA + TP * 4) / 5:     \n        HPLOT LX,Y1 TO RX,Y1:\n        HPLOT LX,Y2 TO RX,Y2:\n        HPLOT LX,Y3 TO RX,Y3:\n        HPLOT LX,Y4 TO RX,Y4\n        */\n      }\n      break;\n    case 8:\n      this.leftRightWalls();\n      /*\n      HPLOT FT%(DIS,0),158 - FT%(DIS,4) TO FT%(DIS,2),158 - FT%(DIS,5) TO FT%(DIS,3),158 - FT%(DIS,5) TO FT%(DIS,1),158 - FT%(DIS,4) TO FT%(DIS,0),158 - FT%(DIS,4)\n      BASE = LAD%(DIS,3): \n      TP   = LAD%(DIS,2):   \n      LX   = LAD%(DIS,0):   \n      RX   = LAD%(DIS,1):   \n      HPLOT LX,BA TO LX,TP:\n      HPLOT RX,TP TO RX,BA\n\n      Y1 = (BA * 4 + TP) / 5:     \n      Y2 = (BA * 3 + TP * 2) / 5: \n      Y3 = (BA * 2 + TP * 3) / 5: \n      Y4 = (BA + TP * 4) / 5:     \n      HPLOT LX,Y1 TO RX,Y1:\n      HPLOT LX,Y2 TO RX,Y2:\n      HPLOT LX,Y3 TO RX,Y3:\n      HPLOT LX,Y4 TO RX,Y4\n      */\n      break;\n  }\n}\nif (MC > 0) {\n  /*\n  B = 79 + YY%(DIS): \n  C = 139\n  INVERSE :\n  IF MC = 8 THEN \n    PRINT \"CHEST!\";:\n    CALL - 868:\n    PRINT :\n    NORMAL :\n    GOTO 269\n  */\n}\nif (EN === 0) {\n  this.render(DIS + 1, EN);\n}",
                                  "order": "1",
                                  "uid": "kw0swhqlxbe570u7vxh"
                                }
                              ],
                              "uid": "kw0swhqgxft1diuynwn"
                            },
                            {
                              "title": "Center Walls",
                              "order": 2,
                              "content": "Renders the center walls.",
                              "children": [],
                              "design": [
                                {
                                  "classUid": "kvqriza4va0b77nhnsk",
                                  "tags": [
                                    "code",
                                    "public member"
                                  ],
                                  "memberName": "centerWalls",
                                  "memberDefinition": "/**\n * Renders the center walls.\n * @param {Number} CENT the center location's value\n * @param {object} coords the coordinates\n */",
                                  "arguments": "CENT, coords",
                                  "code": "if (CENT === 1 || CENT === 3 || CENT === 4) {\n  console.log(\"plot lines\", coords.L1, coords.T1, coords.R1, coords.T1)\n  console.log(\"plot lines\", coords.R1, coords.B1, coords.L1, coords.B1)\n  // HPLOT L1,T1 TO R1,T1 TO R1,B1 TO L1,B1 TO L1,T1\n  \n  if (CENT === 4) {\n    // HPLOT CD%(DIS,0),CD%(DIS,3) TO CD%(DIS,0),CD%(DIS,2) TO CD%(DIS,1),CD%(DIS,2) TO CD%(DIS,1),CD%(DIS,3):\n  }\n}",
                                  "order": "2",
                                  "uid": "kw0sz0p8htwvn1s6j4d"
                                }
                              ],
                              "uid": "kw0sz0p78po3chfa1s"
                            },
                            {
                              "title": "Left/Right Walls",
                              "order": 3,
                              "content": "A method for rendering the left and right walls will be added.",
                              "children": [],
                              "design": [
                                {
                                  "classUid": "kvqriza4va0b77nhnsk",
                                  "tags": [
                                    "code",
                                    "public member"
                                  ],
                                  "memberName": "leftRightWalls",
                                  "memberDefinition": "/**\n * Renders the left and right walls in the dungeon field of view.\n */",
                                  "arguments": "DIS, LEFT, RIGHT, coords",
                                  "code": "if (LEFT === 1 || LEFT == 3 || LEFT === 4) {\n  console.log(\"plot lines\", coords.L1, coords.T1, coords.L2, coords.T2)\n  console.log(\"plot lines\", coords.L1, coords.B1, coords.L2, coords.B2)\n  /*\n  HPLOT L1,T1 TO L2,T2:\n  HPLOT L1,B1 TO L2,B2\n  */\n  if (LEFT === 4) {\n    if (DIS > 0) {\n      // HPLOT LD%(DIS,0),LD%(DIS,4) TO LD%(DIS,0),LD%(DIS,2) TO LD%(DIS,1),LD%(DIS,3) TO LD%(DIS,1),LD%(DIS,5)\n    } else {\n      // HPLOT 0,LD%(DIS,2) - 3 TO LD%(DIS,1),LD%(DIS,3) TO LD%(DIS,1),LD%(DIS,5)\n    }\n  }\n} else {\n  // left is not a wall\n  if (DIS !== 0) {\n    // close off the left side with a line from top to bottom\n    // HPLOT L1,T1 TO L1,B1\n  }\n  // HPLOT L1,T2 TO L2,T2 TO L2,B2 TO L1,B2\n}\nif (RIGHT === 1 || RIGHT == 3 || RIGHT === 4) {\n  console.log(\"plot lines\", coords.R1, coords.T1, coords.R2, coords.T2)\n  console.log(\"plot lines\", coords.R1, coords.B1, coords.R2, coords.B2)\n  /*\n  HPLOT R1,T1 TO R2,T2:\n  HPLOT R1,B1 TO R2,B2\n  */\n  if (RIGHT === 4) {\n    if (DIS > 0) {\n      // HPLOT 279 - LD%(DIS,0),LD%(DIS,4) TO 279 - LD%(DIS,0),LD%(DIS,2) TO 279 - LD%(DIS,1),LD%(DIS,3) TO 279 - LD%(DIS,1),LD%(DIS,5)\n    } else {\n      // HPLOT 279,LD%(DIS,2) - 3 TO 279 - LD%(DIS,1),LD%(DIS,3) TO 279 - LD%(DIS,1),LD%(DIS,5)\n    }\n  }\n} else {\n  // right is not a wall\n  if (DIS !== 0) {\n    // close off the left side with a line from top to bottom\n    // HPLOT R1,T1 TO R1,B1\n  }\n  // HPLOT R1,T2 TO R2,T2 TO R2,B2 TO R1,B2\n}",
                                  "order": "3",
                                  "uid": "kw0t1ef6c5mto3kjz0w"
                                }
                              ],
                              "uid": "kw0t1ef6zsg2i8x9rkb"
                            }
                          ],
                          "design": [],
                          "uid": "kvqriza5yj2m7uejwi"
                        },
                        {
                          "title": "Updates to the 'update' method.",
                          "order": 9,
                          "content": "The following updates will be made to the 'update' method:",
                          "children": [],
                          "design": [
                            {
                              "classUid": "kvqriza4va0b77nhnsk",
                              "tags": [
                                "code",
                                "update"
                              ],
                              "code": "if (RetroC64AkalabethDungeonScene.actionTaken) {\n  this.render();\n  RetroC64AkalabethDungeonScene.actionTaken = false;\n}",
                              "order": "1",
                              "uid": "kw0t5eikgymawy7q7kj"
                            }
                          ],
                          "uid": "kw0t4iz4lh8po5rvt3p"
                        }
                      ],
                      "design": [],
                      "uid": "kvqriza2pmtzfp0pk6k"
                    },
                    {
                      "title": "Dungeon Interface",
                      "order": 2,
                      "content": "The Dungeon View will have a separate scene instance to handle rendering the user interface",
                      "children": [
                        {
                          "title": "The UI Scene Class",
                          "order": 1,
                          "content": "A UI class will need to be defined.  The Ui Scene template will be used.",
                          "children": [],
                          "design": [
                            {
                              "classTitle": "Akalabeth Dungeon Interface",
                              "classHandle": "AkalabethDungeonInterface",
                              "fileHandle": "akalabeth-dungeon-interface",
                              "tags": [
                                "class",
                                "ui-scene"
                              ],
                              "classDefinition": "The Dungeon View will have a separate scene instance to handle rendering the user interface",
                              "weight": "0.5",
                              "uid": "kvqrl8gr0wb5yf59amhk",
                              "filePath": [
                                "scenes",
                                "akalabeth",
                                "dungeon"
                              ],
                              "initialState": "AKALABETH_DUNGEON_MAIN",
                              "gridWidth": "1",
                              "gridHeight": "1"
                            }
                          ],
                          "uid": "kvqrl8grjf5wcyor2h"
                        },
                        {
                          "title": "File Imports",
                          "order": 2,
                          "content": "The UI class will require the following imports:\n* Scene Contoller\n* Parent Scene",
                          "children": [],
                          "design": [
                            {
                              "classUid": "kvqrl8gr0wb5yf59amhk",
                              "importHandle": "RetroC64SceneController",
                              "importPath": "../scenes/retroc64-scene-controller",
                              "tags": [
                                "code",
                                "required import"
                              ],
                              "uid": "kvqrl8gsve0b13nwi7"
                            },
                            {
                              "classUid": "kvqrl8gr0wb5yf59amhk",
                              "importHandle": "RetroC64AkalabethDungeonScene",
                              "importPath": "../retroc64-akalabeth-dungeon-scene",
                              "tags": [
                                "code",
                                "required import"
                              ],
                              "uid": "kvqrl8gs1zcokhbs9d2"
                            },
                            {
                              "classUid": "kvqrg28m9v9wr42q0wf",
                              "importHandle": "RetroC64AkalabethDungeonInterface",
                              "importPath": "../scenes/akalabeth/dungeon/retroc64-akalabeth-dungeon-interface",
                              "tags": [
                                "code",
                                "required import"
                              ],
                              "uid": "kvqrl8gslc1jq44rhy"
                            }
                          ],
                          "uid": "kvqrl8gsdjaea1r3b6n"
                        },
                        {
                          "title": "Private Fields",
                          "order": 3,
                          "content": "The UI class will be added as a private member of its scene parent.\nThe Ui Scene will have the following private fields:",
                          "children": [],
                          "design": [
                            {
                              "classUid": "kvqrg28m9v9wr42q0wf",
                              "tags": [
                                "code",
                                "private field"
                              ],
                              "fieldName": "_akalabethDungeonInterface",
                              "fieldType": "UiScene",
                              "fieldValue": "new RetroC64AkalabethDungeonInterface({ scene: _scene, show: true })",
                              "fieldDefinition": "RetroC64AkalabethDungeonInterface instance",
                              "order": "10",
                              "uid": "kvqrl8gs6rlaf545fh"
                            }
                          ],
                          "uid": "kvqrl8gsuyi80jjv2on"
                        },
                        {
                          "title": "View Templates",
                          "order": 4,
                          "content": "The UI class will have defined templates for each view. These will be added to the Constructor Body. Templates have been defined for the following views:",
                          "requires design": true,
                          "children": [
                            {
                              "title": "Default View",
                              "order": 1,
                              "content": "This is the default view for the scene.",
                              "children": [],
                              "design": [
                                {
                                  "classUid": "kvqrl8gr0wb5yf59amhk",
                                  "tags": [
                                    "code",
                                    "view template"
                                  ],
                                  "entryKey": "AKALABETH_DUNGEON_MAIN",
                                  "code": "group: null,\nchildren: []",
                                  "order": "1",
                                  "uid": "kvqrl8gsyou2a0wuzni"
                                }
                              ],
                              "uid": "kvqrl8gswjjt8z16yw"
                            }
                          ],
                          "design": [],
                          "uid": "kvqrl8gsu1bs5rmecz"
                        },
                        {
                          "title": "Key Listeners",
                          "order": 5,
                          "content": "The UI class will have key listeners for the following views:",
                          "requires design": true,
                          "children": [
                            {
                              "title": "Inactive Key Listener",
                              "order": 1,
                              "content": "The default key listener is inactive.",
                              "children": [],
                              "design": [
                                {
                                  "classUid": "kvqrl8gr0wb5yf59amhk",
                                  "tags": [
                                    "code",
                                    "key listener handler"
                                  ],
                                  "entryKey": "AKALABETH_DUNGEON_MAIN",
                                  "code": "",
                                  "order": "1",
                                  "uid": "kvqrl8gstvo6pxdep6"
                                }
                              ],
                              "uid": "kvqrl8gs8j8sr7i0md"
                            }
                          ],
                          "design": [],
                          "uid": "kvqrl8gssv6htu83bqs"
                        },
                        {
                          "title": "Updates to the 'create' methods",
                          "order": 6,
                          "content": "The UI class will have the following updates to the 'create' method:",
                          "children": [],
                          "design": [
                            {
                              "classUid": "kvqrl8gr0wb5yf59amhk",
                              "tags": [
                                "code",
                                "create"
                              ],
                              "code": "RetroC64AkalabethController.character.addWatcher(this);\nRetroC64AkalabethController.character.notifyWatchers(); ",
                              "order": "1",
                              "uid": "kvqvd5mft2rs405lz4h"
                            }
                          ],
                          "uid": "kvqrl8gszjmegxtfrbl"
                        },
                        {
                          "title": "Scene start/reset",
                          "order": 7,
                          "content": "When the UI scene is started/reset, the following changes are applied for each view:",
                          "children": [],
                          "design": [],
                          "uid": "kvqrl8gsh9tbze8guch"
                        },
                        {
                          "title": "Public Members",
                          "order": 8,
                          "content": "Occasionally, a UI Scene will need some further public members added.  This UI has added the following public members:",
                          "children": [],
                          "design": [],
                          "uid": "kvqrl8gsiky60ul5ebq"
                        }
                      ],
                      "design": [],
                      "uid": "kvqrl8gpbd2lzlfyk2k"
                    }
                  ],
                  "design": [],
                  "uid": "kvqrg28o79g4jpb2jh"
                }
              ],
              "design": [],
              "uid": "kvqrg28md3pk1bfxebb"
            },
            {
              "title": "The Castle View",
              "order": 7,
              "content": "The Castle View displays the character's interactions with Lord British.",
              "children": [
                {
                  "title": "The Scene Container Class",
                  "order": 1,
                  "content": "A Scene Container class will need to be defined.  The Scene Container template will be used.",
                  "children": [],
                  "design": [
                    {
                      "classTitle": "Akalabeth Castle Scene",
                      "classHandle": "AkalabethCastleScene",
                      "fileHandle": "akalabeth-castle-scene",
                      "tags": [
                        "class",
                        "scene-container"
                      ],
                      "classDefinition": "The Castle will be its own scene.",
                      "weight": "1",
                      "uid": "kvs2zk1lklqlbmi823",
                      "filePath": [
                        "scenes",
                        "akalabeth",
                        "castle"
                      ]
                    }
                  ],
                  "uid": "kvs2zk1ms2qmvex948"
                },
                {
                  "title": "File Imports",
                  "order": 2,
                  "content": "The Game class will include the Scene Container as a required import.\nThe Scene Container class will require the following imports:",
                  "requires design": true,
                  "children": [],
                  "design": [
                    {
                      "classUid": "AF89DG9sgahg9",
                      "importHandle": "RetroC64AkalabethCastleScene",
                      "importPath": "../scenes/akalabeth/castle/retroc64-akalabeth-castle-scene",
                      "tags": [
                        "code",
                        "required import"
                      ],
                      "uid": "kvs2zk1mxbjbcaxtx1k"
                    }
                  ],
                  "uid": "kvs2zk1mtfjlk7s73p"
                },
                {
                  "title": "Postboot Processing",
                  "order": 3,
                  "content": "The Scene Container class will need to be added to the Game class postboot processing.",
                  "requires design": true,
                  "children": [],
                  "design": [
                    {
                      "classUid": "AF89DG9sgahg9",
                      "tags": [
                        "code",
                        "postboot"
                      ],
                      "code": "_game.scene.queueOp(\"start\", \"AkalabethCastleScene\");",
                      "order": "1",
                      "uid": "kvs2zk1mvuocwjt94fk"
                    }
                  ],
                  "uid": "kvs2zk1m8073h34gx08"
                },
                {
                  "title": "Scene Key",
                  "order": 4,
                  "content": "The Scene Container class will need to be added to the scene groups in the Scene Controller class.",
                  "requires design": true,
                  "children": [],
                  "design": [
                    {
                      "classUid": "kuvp9k2j3kwh9rvfmqg",
                      "tags": [
                        "code",
                        "scene group"
                      ],
                      "sceneKey": "[RetroC64Constants.AKALABETH_CASTLE]",
                      "sceneValue": "\"AkalabethCastleScene\"",
                      "order": "1",
                      "uid": "kvs2zk1ntzhqxr33rf"
                    }
                  ],
                  "uid": "kvs2zk1nxw4obk16dl9"
                },
                {
                  "title": "Scene states",
                  "order": 5,
                  "content": "A State Group will need to be added to the App Constants for this Scene Container",
                  "requires design": true,
                  "children": [],
                  "design": [
                    {
                      "classUid": "kuvp9k2jit3fzra9nj9",
                      "groupName": "AKALABETH_CASTLE_STATES",
                      "tags": [
                        "code",
                        "group properties"
                      ],
                      "elements": [
                        {
                          "elementName": "AKALABETH_CASTLE_NAME_ENTRY",
                          "elementValue": "1",
                          "elementDefinition": "The initial state.",
                          "order": 1
                        },
                        {
                          "elementName": "AKALABETH_CASTLE_GOAL_ENTRY",
                          "elementValue": "2",
                          "elementDefinition": "The state rendered when the characteris asked their goals in the game.",
                          "order": 2
                        },
                        {
                          "elementName": "AKALABETH_CASTLE_QUEST_INCOMPLETE",
                          "elementValue": "3",
                          "elementDefinition": "The state rendered when the character's quest is incomplete.",
                          "order": 3
                        },
                        {
                          "elementName": "AKALABETH_CASTLE_QUEST_COMPLETE",
                          "elementValue": "4",
                          "elementDefinition": "The state rendered when the character's quest is complete.",
                          "order": 4
                        },
                        {
                          "elementName": "AKALABETH_CASTLE_GAME_COMPLETE",
                          "elementValue": "5",
                          "elementDefinition": "The state rendered when all quests are complete.",
                          "order": 5
                        }
                      ],
                      "uid": "kvs2zk1nfuzoaswg9wn"
                    },
                    {
                      "tags": [
                        "scoped dictionary body 0",
                        "code"
                      ],
                      "uid": "kvs2zk1nqzeekkygqa",
                      "classUid": "kvs2zk1lklqlbmi823",
                      "dictionaryKey": "[RetroC64Constants.AKALABETH_CASTLE_NAME_ENTRY]",
                      "dictionaryDefinition": "the scene instances displayed when this view is active",
                      "dictionaryValue": "[_akalabethCastleInterface]"
                    }
                  ],
                  "uid": "kvs2zk1nag4ri9r7rm4"
                },
                {
                  "title": "Scene Initial State",
                  "order": 6,
                  "content": "The Scene Container initial state is set in the 'create' method of the Scene Controller class. It will be set to the following state:",
                  "requires design": true,
                  "children": [],
                  "design": [
                    {
                      "tags": [
                        "create",
                        "code"
                      ],
                      "uid": "kvs2zk1nuwbpjx9wbw",
                      "classUid": "kuvp9k2j3kwh9rvfmqg",
                      "code": "\n\n// set initial state for Castle\nRetroC64AkalabethCastleScene.state = RetroC64Constants.AKALABETH_CASTLE_NAME_ENTRY;",
                      "order": "7"
                    }
                  ],
                  "uid": "kvs2zk1neadiv9i5ww5"
                },
                {
                  "title": "Private Fields",
                  "order": 7,
                  "content": "The Scene Container may have a few private fields. If so, they will be added here.",
                  "children": [
                    {
                      "title": "The name entry",
                      "order": 1,
                      "content": "An array field will be used to track user entry for the character's name.",
                      "children": [],
                      "design": [
                        {
                          "classUid": "kvs2zk1lklqlbmi823",
                          "tags": [
                            "code",
                            "private field"
                          ],
                          "fieldName": "_nameEntry",
                          "fieldType": "Array",
                          "fieldValue": "[]",
                          "fieldDefinition": "An array field will be used to track user entry for the character's name.",
                          "order": "1",
                          "uid": "kvs4uvkwmnvk7xuxq5r"
                        },
                        {
                          "classUid": "kvs2zk1lklqlbmi823",
                          "tags": [
                            "code",
                            "public getter/setter property"
                          ],
                          "propertyName": "nameEntry",
                          "getterDefinition": "/**\n * Getter for field _nameEntry.\n * @returns {Object}\n */",
                          "getterBody": "return _nameEntry;",
                          "setterDefinition": "/**\n * Setter for field _nameEntry.\n * @param {PropertyKey} value the value\n */",
                          "setterBody": "_nameEntry = value;",
                          "order": "1",
                          "uid": "kvs4uvkxrwkug0b38as"
                        }
                      ],
                      "uid": "kvs4uvkvh6b9dwxz1s"
                    },
                    {
                      "title": "Maximum Name Length",
                      "order": 2,
                      "content": "A constant field will set the maximum name length.",
                      "children": [],
                      "design": [
                        {
                          "classUid": "kvs2zk1lklqlbmi823",
                          "tags": [
                            "code",
                            "private field"
                          ],
                          "fieldName": "_MAX_NAME_LEN",
                          "fieldType": "int",
                          "fieldValue": "12",
                          "fieldDefinition": "A constant field will set the maximum name length.",
                          "order": "2",
                          "uid": "kvsc9d9390h283k4bae"
                        },
                        {
                          "classUid": "kvs2zk1lklqlbmi823",
                          "tags": [
                            "code",
                            "public getter property"
                          ],
                          "propertyName": "MAX_NAME_LEN",
                          "getterDefinition": "/**\n * Getter for field _MAX_NAME_LEN.\n * @returns {Number}\n */",
                          "getterBody": "return _MAX_NAME_LEN;",
                          "order": "2",
                          "uid": "kvsc9d944qzaywyjcad"
                        }
                      ],
                      "uid": "kvsc9d93cbqk4j19ige"
                    },
                    {
                      "title": "Goals Stated",
                      "order": 3,
                      "content": "A flag will track whether the player has entered their goal.",
                      "children": [],
                      "design": [
                        {
                          "classUid": "kvs2zk1lklqlbmi823",
                          "tags": [
                            "code",
                            "private field"
                          ],
                          "fieldName": "_goalsStated",
                          "fieldType": "boolean",
                          "fieldValue": "false",
                          "fieldDefinition": "A flag will track whether the player has entered their goal.",
                          "order": "3",
                          "uid": "kvscjqmg6yega4y5eog"
                        },
                        {
                          "classUid": "kvs2zk1lklqlbmi823",
                          "tags": [
                            "code",
                            "public getter/setter property"
                          ],
                          "propertyName": "goalsStated",
                          "getterDefinition": "/**\n * Getter for field _goalsStated.\n * @returns {Object}\n */",
                          "getterBody": "return _goalsStated;",
                          "setterDefinition": "/**\n * Setter for field _goalsStated.\n * @param {PropertyKey} value the value\n */",
                          "setterBody": "if (typeof(value) !== \"boolean\") {\n  throw [\"Invalid value\", value];\n}\n_goalsStated = value;",
                          "order": "3",
                          "uid": "kvscjqmhjlaj3peyigj"
                        }
                      ],
                      "uid": "kvscjqmgg5o5hm7ny9"
                    }
                  ],
                  "design": [],
                  "uid": "kvs2zk1n34gu4mljidh"
                },
                {
                  "title": "Public Members",
                  "order": 8,
                  "content": "The Scene Container may have a few public members. If so, they will be added here.",
                  "children": [],
                  "design": [],
                  "uid": "kvs2zk1nf0mb24djqwp"
                },
                {
                  "title": "Child Scenes",
                  "order": 9,
                  "content": "The Scene Container is just that: a container.  It will manage the following child scenes:",
                  "requires design": true,
                  "children": [
                    {
                      "title": "The Castle Interface",
                      "order": 1,
                      "content": "The Castle Scene will have a user interface.",
                      "children": [
                        {
                          "title": "The UI Scene Class",
                          "order": 1,
                          "content": "A UI class will need to be defined.  The Ui Scene template will be used.",
                          "children": [],
                          "design": [
                            {
                              "classTitle": "Akalabeth Castle Interface",
                              "classHandle": "AkalabethCastleInterface",
                              "fileHandle": "akalabeth-castle-interface",
                              "tags": [
                                "class",
                                "ui-scene"
                              ],
                              "classDefinition": "The Castle Scene will have a user interface.",
                              "weight": "0.5",
                              "uid": "kvs32yq1ss45w3709h",
                              "filePath": [
                                "scenes",
                                "akalabeth",
                                "castle"
                              ],
                              "initialState": "AKALABETH_CASTLE_NAME_ENTRY",
                              "gridWidth": "2",
                              "gridHeight": "24"
                            }
                          ],
                          "uid": "kvs32yq2hbyjmpvjta"
                        },
                        {
                          "title": "File Imports",
                          "order": 2,
                          "content": "The UI class will require the following imports:\n* Scene Contoller\n* Parent Scene",
                          "children": [],
                          "design": [
                            {
                              "classUid": "kvs32yq1ss45w3709h",
                              "importHandle": "RetroC64SceneController",
                              "importPath": "../../../scenes/retroc64-scene-controller",
                              "tags": [
                                "code",
                                "required import"
                              ],
                              "uid": "kvs32yq273cjcr131p"
                            },
                            {
                              "classUid": "kvs32yq1ss45w3709h",
                              "importHandle": "RetroC64AkalabethCastleScene",
                              "importPath": "./retroc64-akalabeth-castle-scene",
                              "tags": [
                                "code",
                                "required import"
                              ],
                              "uid": "kvs32yq2qmx2gwcm78"
                            },
                            {
                              "classUid": "kvs2zk1lklqlbmi823",
                              "importHandle": "RetroC64AkalabethCastleInterface",
                              "importPath": "./retroc64-akalabeth-castle-interface",
                              "tags": [
                                "code",
                                "required import"
                              ],
                              "uid": "kvs32yq2hvra6q3c8"
                            },
                            {
                              "classUid": "kvs32yq1ss45w3709h",
                              "importHandle": "RetroC64AkalabethController",
                              "importPath": "../../../services/akalabeth/retroc64-akalabeth-controller",
                              "tags": [
                                "code",
                                "required import"
                              ],
                              "uid": "kvscey4lmc3mxlombwc"
                            },
                            {
                              "classUid": "kvs32yq1ss45w3709h",
                              "importHandle": "RetroC64Constants",
                              "importPath": "../../../config/retroc64-constants",
                              "tags": [
                                "code",
                                "required import"
                              ],
                              "uid": "kvscg307gvtoxuaa66v"
                            }
                          ],
                          "uid": "kvs32yq2idooge24ag"
                        },
                        {
                          "title": "Private Fields",
                          "order": 3,
                          "content": "The UI class will be added as a private member of its scene parent.\nThe Ui Scene will have the following private fields:",
                          "children": [],
                          "design": [
                            {
                              "classUid": "kvs2zk1lklqlbmi823",
                              "tags": [
                                "code",
                                "private field"
                              ],
                              "fieldName": "_akalabethCastleInterface",
                              "fieldType": "UiScene",
                              "fieldValue": "new RetroC64AkalabethCastleInterface({ scene: _scene, show: false })",
                              "fieldDefinition": "RetroC64AkalabethCastleInterface instance",
                              "order": "10",
                              "uid": "kvs32yq2ju72ukvthg"
                            }
                          ],
                          "uid": "kvs32yq2ebxr8rzpkn"
                        },
                        {
                          "title": "View Templates",
                          "order": 4,
                          "content": "The UI class will have defined templates for each view. These will be added to the Constructor Body. Templates have been defined for the following views:",
                          "requires design": true,
                          "children": [
                            {
                              "title": "Name Entry View",
                              "order": 1,
                              "content": "The view for the name entry process.",
                              "children": [],
                              "design": [
                                {
                                  "tags": [
                                    "view template",
                                    "code"
                                  ],
                                  "uid": "kvs32yq2s7zsj6ku6ta",
                                  "classUid": "kvs32yq1ss45w3709h",
                                  "entryKey": "AKALABETH_CASTLE_NAME_ENTRY",
                                  "code": "group: null,\nchildren: [\n  {\n    comment: \"BEGIN NAMELESS GREETING\",\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"WELCOME PEASANT INTO THE HALLS OF\", // text\n    ],\n    position: [0.5, 2],\n    tint: 10920447\n  },\n  {\n    comment: \"BEGIN NAMELESS GREETING\",\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"THE MIGHTY LORD BRITISH.\", // text\n    ],\n    position: [0.5, 3],\n    tint: 10920447\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"HEREIN THOU MAY CHOOSE TO\", // text\n    ],\n    position: [0.5, 4],\n    tint: 10920447\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"DARE BATTLE WITH THE EVIL\", // text\n    ],\n    position: [0.5, 5],\n    tint: 10920447\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"CREATURES OF THE DEPTHS,\", // text\n    ],\n    position: [0.5, 6],\n    tint: 10920447\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"FOR GREAT REWARD!\", // text\n    ],\n    position: [0.5, 7],\n    tint: 10920447\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"WHAT IS THY NAME PEASANT? \", // text\n    ],\n    position: {\n      x: {\n        fixed: -0.5,\n        offset: 2\n      },\n      y: 9\n    },\n    origin: [0, 0.5],\n    tint: 10920447,\n    dynamicField: \"nameInputLabel\"\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"\", // text\n    ],\n    position: {\n      x: {\n        fixed: -0.5,\n        offset: {\n          pixel: 2,\n          field: \"nameInputLabel\"\n        }\n      },\n      y: 9\n    },\n    origin: [0, 0.5],\n    tint: 10920447,\n    dynamicField: \"nameInputField\"\n  },\n  {\n    comment: \"CREATE TWO IMAGES, CURSOR_ON AND CURSOR_OFF. OFF IS MADE FIRST, SINCE THE GRAPHICS NEEDS TO BE EMPTY\",\n    type: \"graphics-texture\",\n    commands: [\n      {\n        order: 1,\n        command: \"fillStyle\",\n        args: [0xA6A1FF, 0] // color, alpha\n      },\n      {\n        order: 2,\n        command: \"fillRect\",\n        args: [0, 0, 16, 16], // x, y, width, height, corner radius,\n        \"scale controlled args\": [] // no scaled graphics\n      },\n      {\n        order: 3,\n        command: \"generateTexture\",\n        args: [\"cursor_off\", 16, 16], // key, scale width, scale height\n        \"scale controlled args\": [] // no scaled graphics\n      },\n      {\n        order: 4,\n        command: \"fillStyle\",\n        args: [0xA6A1FF, 1] // color, alpha\n      },\n      {\n        order: 5,\n        command: \"fillRect\",\n        args: [0, 0, 16, 16], // x, y, width, height, corner radius,\n        \"scale controlled args\": [] // no scaled graphics\n      },\n      {\n        order: 6,\n        command: \"generateTexture\",\n        args: [\"cursor_on\", 16, 16], // key, scale width, scale height\n        \"scale controlled args\": [] // no scaled graphics\n      },\n    ]\n  },\n  {\n    comment: \"CREATE CURSOR SPRITE\",\n    type: \"sprite\",\n    args: [\n      0, // x\n      0, // y\n      \"cursor_on\" // texture\n    ],\n    position: {\n      x: {\n        fixed: -0.5,\n        offset: {\n          field: \"nameInputField\"\n        }\n      },\n      y: 9\n    },\n    origin: [0, 0.5],\n    dynamicField: \"blinkingCursor1\"\n  }\n]",
                                  "order": "1"
                                }
                              ],
                              "uid": "kvs32yq2g1g5nbhla6"
                            },
                            {
                              "title": "Goal Entry View",
                              "order": 2,
                              "content": "A view for the goal entry process exists.",
                              "children": [],
                              "design": [
                                {
                                  "tags": [
                                    "view template",
                                    "code"
                                  ],
                                  "uid": "kvsd63qcn79155qq5c",
                                  "classUid": "kvs32yq1ss45w3709h",
                                  "entryKey": "AKALABETH_CASTLE_GOAL_ENTRY",
                                  "code": "group: null,\nchildren: [\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"WELCOME PEASANT INTO THE HALLS OF\", // text\n    ],\n    position: [0.5, 2],\n    tint: 10920447\n  },\n  {\n    comment: \"BEGIN NAMELESS GREETING\",\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"THE MIGHTY LORD BRITISH.\", // text\n    ],\n    position: [0.5, 3],\n    tint: 10920447\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"HEREIN THOU MAY CHOOSE TO\", // text\n    ],\n    position: [0.5, 4],\n    tint: 10920447\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"DARE BATTLE WITH THE EVIL\", // text\n    ],\n    position: [0.5, 5],\n    tint: 10920447\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"CREATURES OF THE DEPTHS,\", // text\n    ],\n    position: [0.5, 6],\n    tint: 10920447\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"FOR GREAT REWARD!\", // text\n    ],\n    position: [0.5, 7],\n    tint: 10920447\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"WHAT IS THY NAME PEASANT? \", // text\n    ],\n    position: {\n      x: {\n        fixed: -0.5,\n        offset: 2\n      },\n      y: 9\n    },\n    origin: [0, 0.5],\n    tint: 10920447,\n    dynamicField: \"nameInputLabel2\"\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"\", // text\n    ],\n    position: {\n      x: {\n        fixed: -0.5,\n        offset: {\n          pixel: 2,\n          field: \"nameInputLabel2\"\n        }\n      },\n      y: 9\n    },\n    origin: [0, 0.5],\n    tint: 10920447,\n    dynamicField: \"nameInputField2\"\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"DOEST THOU WISH FOR GRAND ADVENTURE? \", // text\n    ],\n    position: {\n      x: {\n        fixed: -0.5,\n        offset: 2\n      },\n      y: 10\n    },\n    origin: [0, 0.5],\n    tint: 10920447,\n    dynamicField: \"goalInputLabel\"\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"\", // text\n    ],\n    position: {\n      x: {\n        fixed: -0.5,\n        offset: {\n          pixel: 2,\n          field: \"goalInputLabel\"\n        }\n      },\n      y: 10\n    },\n    origin: [0, 0.5],\n    tint: 10920447,\n    dynamicField: \"goalInputField\"\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"\", // text\n    ],\n    position: [0.5, 12],\n    origin: [0.5, 0.5],\n    tint: 10920447,\n    dynamicField: \"goalMessageLabel1\"\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"\", // text\n    ],\n    position: [0.5, 13],\n    origin: [0.5, 0.5],\n    tint: 10920447,\n    dynamicField: \"goalMessageLabel2\"\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"\", // text\n    ],\n    position: [0.5, 14],\n    origin: [0.5, 0.5],\n    tint: 10920447,\n    dynamicField: \"goalMessageLabel3\"\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"\", // text\n    ],\n    position: [0.5, 15],\n    origin: [0.5, 0.5],\n    tint: 10920447,\n    dynamicField: \"goalMessageLabel4\"\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"\", // text\n    ],\n    position: [0.5, 16],\n    origin: [0.5, 0.5],\n    tint: 10920447,\n    dynamicField: \"goalMessageLabel5\"\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"\", // text\n    ],\n    position: [0.5, 17],\n    origin: [0.5, 0.5],\n    tint: 10920447,\n    dynamicField: \"goalMessageLabel6\"\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"\", // text\n    ],\n    position: [0.5, 18],\n    origin: [0.5, 0.5],\n    tint: 10920447,\n    dynamicField: \"goalMessageLabel7\"\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"\", // text\n    ],\n    position: [0.5, 19],\n    origin: [0.5, 0.5],\n    tint: 10920447,\n    dynamicField: \"goalMessageLabel8\"\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"\", // text\n    ],\n    position: [0.5, 20],\n    origin: [0.5, 0.5],\n    tint: 10920447,\n    dynamicField: \"goalMessageLabel9\"\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"\", // text\n    ],\n    position: [0.5, 21],\n    origin: [0.5, 0.5],\n    tint: 10920447,\n    dynamicField: \"goalMessageLabel10\"\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"\", // text\n    ],\n    position: [0.5, 22],\n    origin: [0.5, 0.5],\n    tint: 10920447,\n    dynamicField: \"goalMessageLabel11\"\n  },\n  {\n    comment: \"CREATE TWO IMAGES, CURSOR_ON AND CURSOR_OFF. OFF IS MADE FIRST, SINCE THE GRAPHICS NEEDS TO BE EMPTY\",\n    type: \"graphics-texture\",\n    commands: [\n      {\n        order: 1,\n        command: \"fillStyle\",\n        args: [0xA6A1FF, 0] // color, alpha\n      },\n      {\n        order: 2,\n        command: \"fillRect\",\n        args: [0, 0, 16, 16], // x, y, width, height, corner radius,\n        \"scale controlled args\": [] // no scaled graphics\n      },\n      {\n        order: 3,\n        command: \"generateTexture\",\n        args: [\"cursor_off\", 16, 16], // key, scale width, scale height\n        \"scale controlled args\": [] // no scaled graphics\n      },\n      {\n        order: 4,\n        command: \"fillStyle\",\n        args: [0xA6A1FF, 1] // color, alpha\n      },\n      {\n        order: 5,\n        command: \"fillRect\",\n        args: [0, 0, 16, 16], // x, y, width, height, corner radius,\n        \"scale controlled args\": [] // no scaled graphics\n      },\n      {\n        order: 6,\n        command: \"generateTexture\",\n        args: [\"cursor_on\", 16, 16], // key, scale width, scale height\n        \"scale controlled args\": [] // no scaled graphics\n      },\n    ]\n  },\n  {\n    comment: \"CREATE CURSOR SPRITE\",\n    type: \"sprite\",\n    args: [\n      0, // x\n      0, // y\n      \"cursor_on\" // texture\n    ],\n    position: {\n      x: {\n        fixed: -0.5,\n        offset: {\n          field: \"goalInputField\"\n        }\n      },\n      y: 9\n    },\n    origin: [0, 0.5],\n    dynamicField: \"blinkingCursor2\"\n  }\n]",
                                  "order": "2"
                                }
                              ],
                              "uid": "kvsd63qacf7bd3zjwkc"
                            },
                            {
                              "title": "The Quest Incomplete View",
                              "order": 3,
                              "content": "The view for the Quest Incomplete display.",
                              "children": [],
                              "design": [
                                {
                                  "classUid": "kvs32yq1ss45w3709h",
                                  "tags": [
                                    "code",
                                    "view template"
                                  ],
                                  "entryKey": "AKALABETH_CASTLE_QUEST_INCOMPLETE",
                                  "code": "group: null,\nchildren: [\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"\", // text\n    ],\n    position: [0.5, 2],\n    tint: 10920447,\n    dynamicField: \"nameLineField3\"\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"\", // text\n    ],\n    position: [0.5, 3],\n    tint: 10920447,\n    dynamicField: \"taskLineField3\"\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"GO NOW AND COMPLETE THY QUEST!\", // text\n    ],\n    position: [0.5, 4],\n    tint: 10920447\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"PRESS -SPACE- TO CONT.\", // text\n    ],\n    position: [0.5, 6],\n    tint: 10920447\n  }\n]",
                                  "order": "3",
                                  "uid": "kvtw0oyya70pf1666o"
                                }
                              ],
                              "uid": "kvtw0oyx8e52lol4yd3"
                            },
                            {
                              "title": "The Quest Complete View",
                              "order": 4,
                              "content": "The display for quest completion.",
                              "children": [],
                              "design": [
                                {
                                  "classUid": "kvs32yq1ss45w3709h",
                                  "tags": [
                                    "code",
                                    "view template"
                                  ],
                                  "entryKey": "AKALABETH_CASTLE_QUEST_COMPLETE",
                                  "code": "group: null,\nchildren: [\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"\", // text\n    ],\n    position: [0.5, 4],\n    tint: 10920447,\n    dynamicField: \"nameLineField4\"\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"THOU HAST ACOMPLISHED THY QUEST!\", // text\n    ],\n    position: [0.5, 6],\n    tint: 10920447,\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"UNFORTUNATELY, THIS IS NOT ENOUGH TO\", // text\n    ],\n    position: [0.5, 7],\n    tint: 10920447\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"BECOME A KNIGHT.\", // text\n    ],\n    position: [0.5, 8],\n    tint: 10920447\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"\", // text\n    ],\n    position: [0.5, 10],\n    tint: 10920447,\n    dynamicField: \"taskLineField4\"\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"GO NOW UPON THIS QUEST, AND MAY\", // text\n    ],\n    position: [0.5, 12],\n    tint: 10920447\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"LADY LUCK BE FAIR UNTO YOU.....\", // text\n    ],\n    position: [0.5, 13],\n    tint: 10920447\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \".....ALSO I, BRITISH, HAVE INCREASED\", // text\n    ],\n    position: [0.5, 14],\n    tint: 10920447\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"EACH OF THY ATTRIBUTES BY ONE!\", // text\n    ],\n    position: [0.5, 15],\n    tint: 10920447\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"PRESS -SPACE- TO CONT.\", // text\n    ],\n    position: [0.5, 17],\n    tint: 10920447\n  }\n]",
                                  "order": "4",
                                  "uid": "kvtw1tjq44j2h5nb3o5"
                                }
                              ],
                              "uid": "kvtw1tjpi09te09midt"
                            },
                            {
                              "title": "The Game Complete View",
                              "order": 5,
                              "content": "The display for game completion.",
                              "children": [],
                              "design": [
                                {
                                  "classUid": "kvs32yq1ss45w3709h",
                                  "tags": [
                                    "code",
                                    "view template"
                                  ],
                                  "entryKey": "AKALABETH_CASTLE_GAME_COMPLETE",
                                  "code": "group: null,\nchildren: [\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"\", // text\n    ],\n    position: [0.5, 4],\n    tint: 10920447,\n    dynamicField: \"nameLineField5\"\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"THOU HAST PROVED THYSELF WORTHY\", // text\n    ],\n    position: [0.5, 6],\n    tint: 10920447,\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"OF KNIGHTHOOD, CONTINUE PLAY IF THOU\", // text\n    ],\n    position: [0.5, 7],\n    tint: 10920447\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"DOTH WISH, BUT THOU HAST ACOMPLISHED\", // text\n    ],\n    position: [0.5, 8],\n    tint: 10920447\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"THE MAIN OBJECTIVE OF THIS GAME...\", // text\n    ],\n    position: [0.5, 9],\n    tint: 10920447\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"\", // text\n    ],\n    position: [0.5, 11],\n    tint: 10920447,\n    dynamicField: \"completionField1\"\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"\", // text\n    ],\n    position: [0.5, 12],\n    tint: 10920447,\n    dynamicField: \"completionField2\"\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"PRESS -SPACE- TO CONT.\", // text\n    ],\n    position: [0.5, 14],\n    tint: 10920447\n  }\n]",
                                  "order": "5",
                                  "uid": "kvtw2oo1znov9u0lwai"
                                }
                              ],
                              "uid": "kvtw2oo1pe7urrnqiei"
                            }
                          ],
                          "design": [],
                          "uid": "kvs32yq2kj08v01rcbl"
                        },
                        {
                          "title": "Key Listeners",
                          "order": 5,
                          "content": "The UI class will have key listeners for the following views:",
                          "requires design": true,
                          "children": [
                            {
                              "title": "Name Entry Key Listener",
                              "order": 1,
                              "content": "A specific key listener is active for the name entry process.",
                              "children": [],
                              "design": [
                                {
                                  "tags": [
                                    "key listener handler",
                                    "code"
                                  ],
                                  "uid": "kvs32yq23vw3vlrj8hm",
                                  "classUid": "kvs32yq1ss45w3709h",
                                  "entryKey": "AKALABETH_CASTLE_NAME_ENTRY",
                                  "code": "if (event.key.length > 1) {\n  switch (event.key) {\n    case \"Backspace\":\n      RetroC64AkalabethCastleScene.nameEntry.length = Math.max(0, RetroC64AkalabethCastleScene.nameEntry.length - 1);\n      context._dynamicFields.setText(\"nameInputField\", RetroC64AkalabethCastleScene.nameEntry.join(\"\"));\n      context.moveCursor(\"blinkingCursor1\", \"nameInputField\");\n      break;\n    case \"Enter\":\n      if (RetroC64AkalabethCastleScene.nameEntry.length > 0) {\n        // reset the name field\n        context._dynamicFields.setText(\"nameInputField\", \"\");\n        context.moveCursor(\"blinkingCursor1\", \"nameInputField\");\n        // set the name field on the next screen\n        context._dynamicFields.setText(\"nameInputField2\", RetroC64AkalabethCastleScene.nameEntry.join(\"\"));\n        // set the character's name to trigger move to next screen\n        RetroC64AkalabethController.character.name = RetroC64AkalabethCastleScene.nameEntry.join(\"\");\n        // reset the name entry\n        RetroC64AkalabethCastleScene.nameEntry.length = 0;\n        { // set completion screen\n          this._dynamicFields.setText(\"nameLineField5\", [\"LORD \", RetroC64AkalabethController.character.name].join(\"\"));\n          if (RetroC64AkalabethController.levelOfPlay === 10) {\n            context._dynamicFields.setText(\"completionField1\", \"...CALL CALIFORNIA PACIFIC COMPUTER AT\");\n            context._dynamicFields.setText(\"completionField2\", \"(415)-569-9126 TO REPORT THIS AMAZING FEAT!\");\n          } else {\n            context._dynamicFields.setText(\"completionField1\", \"NOW MAYBE THOU ART FOOLHEARTY ENOUGH\");\n            context._dynamicFields.setText(\"completionField2\", [\"TO TRY DIFFICULTY LEVEL \", RetroC64AkalabethController.levelOfPlay + 1].join(\"\"));\n          }\n        }\n      }\n      break;\n  }\n} else {\n  let matches = event.key.match(/^[a-z 0-9]+$/i);\n  if (matches !== null) {\n    if (RetroC64AkalabethCastleScene.nameEntry.length < RetroC64AkalabethCastleScene.MAX_NAME_LEN) {\n      RetroC64AkalabethCastleScene.nameEntry.push(event.key.toUpperCase());\n      context._dynamicFields.setText(\"nameInputField\", RetroC64AkalabethCastleScene.nameEntry.join(\"\"));\n      context.moveCursor(\"blinkingCursor1\", \"nameInputField\");\n    } else if (RetroC64AkalabethCastleScene.nameEntry.length >= RetroC64AkalabethCastleScene.MAX_NAME_LEN) {\n      RetroC64AkalabethCastleScene.nameEntry[RetroC64AkalabethCastleScene.MAX_NAME_LEN - 1] = event.key.toUpperCase();\n      context._dynamicFields.setText(\"nameInputField\", RetroC64AkalabethCastleScene.nameEntry.join(\"\"));\n      context.moveCursor(\"blinkingCursor1\", \"nameInputField\");\n    }\n  }\n}",
                                  "order": "1"
                                }
                              ],
                              "uid": "kvs32yq2chyja6p6jrb"
                            },
                            {
                              "title": "Goal Entry Key Listener",
                              "order": 2,
                              "content": "A key listener for the goal entry view exists",
                              "children": [],
                              "design": [
                                {
                                  "tags": [
                                    "key listener handler",
                                    "code"
                                  ],
                                  "uid": "kvtjgy3unpbyj0zpb5m",
                                  "classUid": "kvs32yq1ss45w3709h",
                                  "entryKey": "AKALABETH_CASTLE_GOAL_ENTRY",
                                  "code": "if (context._dynamicFields.getText(\"goalInputField\").length === 0) {\n  switch (event.key) {\n    case \"Y\":\n    case \"y\":\n      // player said yes - update the field\n      context._dynamicFields.setText(\"goalInputField\", \"YES\");\n      // hide the cursor\n      context._grid.placeAt(-1, 1, context._dynamicFields.getObject(\"blinkingCursor2\")[0]);\n      RetroC64AkalabethController.character.task = Math.max(0, Math.floor(RetroC64AkalabethController.character.wisdom / 3) - 1);\n      let article = \"A\";\n      if (RetroC64AkalabethController.monsters[RetroC64AkalabethController.character.task].name.charAt(0).match(/^[aeiou]+$/i) !== null) {\n        article = \"AN\";\n      }\n      // add a new message\n      context._dynamicFields.setText(\"goalMessageLabel1\", \"GOOD! THOU SHALT TRY TO BECOME A\");\n      context._dynamicFields.setText(\"goalMessageLabel2\", \"KNIGHT!!!\");\n      context._dynamicFields.setText(\"goalMessageLabel3\", \"THY FIRST TASK IS TO GO INTO THE\");\n      context._dynamicFields.setText(\"goalMessageLabel4\", \"DUNGEONS AND TO RETURN ONLY AFTER\");\n      context._dynamicFields.setText(\"goalMessageLabel5\", [\"KILLING \", article, \" \", RetroC64AkalabethController.monsters[RetroC64AkalabethController.character.task].name, \".\"].join(\"\"));\n      context._dynamicFields.setText(\"goalMessageLabel6\", \"GO NOW UPON THIS QUEST, AND MAY\");\n      context._dynamicFields.setText(\"goalMessageLabel7\", \"LADY LUCK BE FAIR UNTO YOU.....\");\n      context._dynamicFields.setText(\"goalMessageLabel8\", \".....ALSO I, BRITISH, HAVE INCREASED\");\n      context._dynamicFields.setText(\"goalMessageLabel9\", \"EACH OF THY ATTRIBUTES BY ONE!\");\n      context._dynamicFields.setText(\"goalMessageLabel11\", \"PRESS -SPACE- TO CONT.\");\n      break;\n    case \"N\":\n    case \"n\":\n      // player said no - update the field\n      context._dynamicFields.setText(\"goalInputField\", \"NO\");\n      // hide the cursor\n      context._grid.placeAt(-1, 1, context._dynamicFields.getObject(\"blinkingCursor2\")[0]);\n      context._dynamicFields.setText(\"goalMessageLabel1\", \"THEN LEAVE AND BEGONE!\"); \n      context._dynamicFields.setText(\"goalMessageLabel3\", \"PRESS -SPACE- TO CONT.\");\n      break;\n  }\n} else {\n  // player already said Yes or No\n  let callback = function() { // NO\n    // clear all fields\n    this._dynamicFields.setText(\"nameInputField2\", \"\");\n    this._dynamicFields.setText(\"goalInputField\", \"\");\n    this._dynamicFields.setText(\"goalMessageLabel1\", \"\");\n    this._dynamicFields.setText(\"goalMessageLabel2\", \"\");\n    this._dynamicFields.setText(\"goalMessageLabel3\", \"\");\n    this._dynamicFields.setText(\"goalMessageLabel4\", \"\");\n    this._dynamicFields.setText(\"goalMessageLabel5\", \"\");\n    this._dynamicFields.setText(\"goalMessageLabel6\", \"\");\n    this._dynamicFields.setText(\"goalMessageLabel7\", \"\");\n    this._dynamicFields.setText(\"goalMessageLabel8\", \"\");\n    this._dynamicFields.setText(\"goalMessageLabel9\", \"\");\n    this._dynamicFields.setText(\"goalMessageLabel10\", \"\");\n    this._dynamicFields.setText(\"goalMessageLabel11\", \"\");\n    // move the cursor\n    this.moveCursor(\"blinkingCursor2\", \"goalInputField\");\n    // clear the player's name\n    RetroC64AkalabethController.character.name = \"\";\n    // go back to the map\n    RetroC64SceneController.gotoState({ state: RetroC64Constants.AKALABETH_WORLD_MAP });\n  };\n  if (context._dynamicFields.getText(\"goalInputField\") === \"YES\") {\n    callback = function() {\n      { // clear all fields\n        this._dynamicFields.setText(\"nameInputField2\", \"\");\n        this._dynamicFields.setText(\"goalInputField\", \"\");\n        this._dynamicFields.setText(\"goalMessageLabel1\", \"\");\n        this._dynamicFields.setText(\"goalMessageLabel2\", \"\");\n        this._dynamicFields.setText(\"goalMessageLabel3\", \"\");\n        this._dynamicFields.setText(\"goalMessageLabel4\", \"\");\n        this._dynamicFields.setText(\"goalMessageLabel5\", \"\");\n        this._dynamicFields.setText(\"goalMessageLabel6\", \"\");\n        this._dynamicFields.setText(\"goalMessageLabel7\", \"\");\n        this._dynamicFields.setText(\"goalMessageLabel8\", \"\");\n        this._dynamicFields.setText(\"goalMessageLabel9\", \"\");\n        this._dynamicFields.setText(\"goalMessageLabel10\", \"\");\n        this._dynamicFields.setText(\"goalMessageLabel11\", \"\");\n      }\n      // move the cursor\n      this.moveCursor(\"blinkingCursor2\", \"goalInputField\");\n      { // set the incomplete screen\n        this._dynamicFields.setText(\"nameLineField3\", [RetroC64AkalabethController.character.name, \" WHY HAST THOU RETURNED?\"].join(\"\"));\n        let article = \"A\";\n        if (RetroC64AkalabethController.monsters[RetroC64AkalabethController.character.task].name.charAt(0).match(/^[aeiou]+$/i) !== null) {\n          article = \"AN\";\n        }\n        context._dynamicFields.setText(\"taskLineField3\", [\"THOU MUST KILL \", article, \" \", RetroC64AkalabethController.monsters[RetroC64AkalabethController.character.task].name, \".\"].join(\"\"));\n      }\n\n      { // set the complete screen\n        this._dynamicFields.setText(\"nameLineField4\", [\"AAHH!!.....\", RetroC64AkalabethController.character.name].join(\"\"));\n        let article = \"A\";\n        if (RetroC64AkalabethController.monsters[RetroC64AkalabethController.character.task + 1].name.charAt(0).match(/^[aeiou]+$/i) !== null) {\n          article = \"AN\";\n        }\n        context._dynamicFields.setText(\"taskLineField4\", [\"NOW THOU MUST KILL \", article, \" \", RetroC64AkalabethController.monsters[RetroC64AkalabethController.character.task + 1].name, \".\"].join(\"\"));\n      }\n      // set the flag\n      RetroC64AkalabethCastleScene.goalsStated = true;\n      // boost the player's stats\n      RetroC64AkalabethController.character.hitPoints++;\n      RetroC64AkalabethController.character.strength++;\n      RetroC64AkalabethController.character.dexterity++;\n      RetroC64AkalabethController.character.stamina++;\n      RetroC64AkalabethController.character.wisdom++;\n      RetroC64AkalabethController.character.gold++;\n      // go back to the map\n      RetroC64SceneController.gotoState({ state: RetroC64Constants.AKALABETH_WORLD_MAP });\n    }\n  }\n  // set a delay before clearing the screen\n  context._scene.time.delayedCall(\n    375, // milliseconds\n    callback, // callback function\n    [], // args\n    context // the scope object\n  ); \n}",
                                  "order": "2"
                                }
                              ],
                              "uid": "kvtjgy3tdgwbszvphj8"
                            },
                            {
                              "title": "Quest Incomplete Key Listener",
                              "order": 4,
                              "content": "The Key listener for the Quest Incomplete display.",
                              "children": [],
                              "design": [
                                {
                                  "classUid": "kvs32yq1ss45w3709h",
                                  "tags": [
                                    "code",
                                    "key listener handler"
                                  ],
                                  "entryKey": "AKALABETH_CASTLE_QUEST_INCOMPLETE",
                                  "code": "// set a delay before clearing the screen\ncontext._scene.time.delayedCall(\n  375, // milliseconds\n  function () {          \n    // go back to the map\n    RetroC64SceneController.gotoState({ state: RetroC64Constants.AKALABETH_WORLD_MAP });\n  }, // callback function\n  [], // args\n  context // the scope object\n);",
                                  "order": "4",
                                  "uid": "kvtwjnno24eyvaueeilk"
                                }
                              ],
                              "uid": "kvtwjnnn7xsmnv6khow"
                            },
                            {
                              "title": "Quest Complete Key Listener",
                              "order": 4,
                              "content": "The key listener for the Quest Complete display.",
                              "children": [],
                              "design": [
                                {
                                  "classUid": "kvs32yq1ss45w3709h",
                                  "tags": [
                                    "code",
                                    "key listener handler"
                                  ],
                                  "entryKey": "AKALABETH_CASTLE_QUEST_COMPLETE",
                                  "code": "// set a delay before clearing the screen\ncontext._scene.time.delayedCall(\n  375, // milliseconds\n  function () {\n    // next quest\n    RetroC64AkalabethController.character.task = Math.abs(RetroC64AkalabethController.character.task) + 1;\n    { // set the incomplete screen\n      this._dynamicFields.setText(\"nameLineField3\", [RetroC64AkalabethController.character.name, \" WHY HAST THOU RETURNED?\"].join(\"\"));\n      let article = \"A\";\n      if (RetroC64AkalabethController.monsters[RetroC64AkalabethController.character.task].name.charAt(0).match(/^[aeiou]+$/i) !== null) {\n        article = \"AN\";\n      }\n      context._dynamicFields.setText(\"taskLineField3\", [\"THOU MUST KILL \", article, \" \", RetroC64AkalabethController.monsters[RetroC64AkalabethController.character.task].name, \".\"].join(\"\"));\n    }\n\n    { // set the complete screen\n      if (RetroC64AkalabethController.character.task < 9) {\n        this._dynamicFields.setText(\"nameLineField4\", [\"AAHH!!.....\", RetroC64AkalabethController.character.name].join(\"\"));\n        let article = \"A\";\n        if (RetroC64AkalabethController.monsters[RetroC64AkalabethController.character.task + 1].name.charAt(0).match(/^[aeiou]+$/i) !== null) {\n          article = \"AN\";\n        }\n        context._dynamicFields.setText(\"taskLineField4\", [\"NOW THOU MUST KILL \", article, \" \", RetroC64AkalabethController.monsters[RetroC64AkalabethController.character.task + 1].name, \".\"].join(\"\"));\n      }\n    }\n    // boost the player's stats\n    RetroC64AkalabethController.character.hitPoints++;\n    RetroC64AkalabethController.character.strength++;\n    RetroC64AkalabethController.character.dexterity++;\n    RetroC64AkalabethController.character.stamina++;\n    RetroC64AkalabethController.character.wisdom++;\n    RetroC64AkalabethController.character.gold++;\n    // go back to the map\n    RetroC64SceneController.gotoState({ state: RetroC64Constants.AKALABETH_WORLD_MAP });\n  }, // callback function\n  [], // args\n  context // the scope object\n);",
                                  "order": "4",
                                  "uid": "kvtwkpmgu4iw30qojf"
                                }
                              ],
                              "uid": "kvtwkpmfv36l4hmyhwq"
                            },
                            {
                              "title": "Game Complete Key Listener",
                              "order": 5,
                              "content": "The key listener for the Game Complete display.",
                              "children": [],
                              "design": [
                                {
                                  "classUid": "kvs32yq1ss45w3709h",
                                  "tags": [
                                    "code",
                                    "key listener handler"
                                  ],
                                  "entryKey": "AKALABETH_CASTLE_GAME_COMPLETE",
                                  "code": "// set a delay before clearing the screen\ncontext._scene.time.delayedCall(\n  375, // milliseconds\n  function () {\n    // go back to the map\n    RetroC64SceneController.gotoState({ state: RetroC64Constants.AKALABETH_WORLD_MAP });\n  }, // callback function\n  [], // args\n  context // the scope object\n);",
                                  "order": "5",
                                  "uid": "kvtwlw1zx1mkqz05xx"
                                }
                              ],
                              "uid": "kvtwlw1y2pclbfssunn"
                            }
                          ],
                          "design": [],
                          "uid": "kvs32yq2gmmrh9m1xv"
                        },
                        {
                          "title": "Updates to the 'create' methods",
                          "order": 6,
                          "content": "The UI class will have the following updates to the 'create' method:",
                          "children": [],
                          "design": [
                            {
                              "tags": [
                                "create",
                                "code"
                              ],
                              "uid": "kvsd0xekx5z8tsgg4oa",
                              "classUid": "kvs32yq1ss45w3709h",
                              "code": "// start the cursor animation\nthis._dynamicFields.getObject(\"blinkingCursor1\")[0].anims.create({\n  key: \"blink\",\n  frames: [\n    { key: \"cursor_off\" },\n    { key: \"cursor_on\" }\n  ],\n  frameRate: 2,\n  repeat: -1 // repeat infinitely\n});\nthis._dynamicFields.getObject(\"blinkingCursor1\")[0].play(\"blink\");\nthis.moveCursor(\"blinkingCursor1\", \"nameInputField\");\n\nthis._dynamicFields.getObject(\"blinkingCursor2\")[0].anims.create({\n  key: \"blink\",\n  frames: [\n    { key: \"cursor_off\" },\n    { key: \"cursor_on\" }\n  ],\n  frameRate: 2,\n  repeat: -1 // repeat infinitely\n});\nthis._dynamicFields.getObject(\"blinkingCursor2\")[0].play(\"blink\");\nthis.moveCursor(\"blinkingCursor2\", \"goalInputField\");\nRetroC64AkalabethController.character.addWatcher(this);\nRetroC64AkalabethController.character.notifyWatchers();",
                              "order": "1"
                            }
                          ],
                          "uid": "kvs32yq2s9vj1emt65b"
                        },
                        {
                          "title": "Scene start/reset",
                          "order": 7,
                          "content": "When the UI scene is started/reset, the following changes are applied for each view:",
                          "children": [],
                          "design": [],
                          "uid": "kvs32yq2cw44l69n0gr"
                        },
                        {
                          "title": "Public Members",
                          "order": 8,
                          "content": "Occasionally, a UI Scene will need some further public members added.  This UI has added the following public members:",
                          "children": [
                            {
                              "title": "Character Watcher",
                              "order": 1,
                              "content": "The interface will watch for changes to the character and update accordingly.",
                              "children": [],
                              "design": [
                                {
                                  "tags": [
                                    "public member",
                                    "code"
                                  ],
                                  "uid": "kvs5be5jzzoatyv8swm",
                                  "classUid": "kvs32yq1ss45w3709h",
                                  "memberName": "watchUpdated",
                                  "memberDefinition": "/**\n * Handles updates to a Watchable instance.\n * @param {Watchable} data the Watchable instance being updated\n */",
                                  "arguments": "data",
                                  "code": "if (data.name.length > 0) {\n  if (!RetroC64AkalabethCastleScene.goalsStated) {\n    // name was entered but no goals, state is goal entry\n    this._state = RetroC64Constants.AKALABETH_CASTLE_GOAL_ENTRY;\n    this._stateChangeResolved = false;\n  } else {\n    if (data.task >= 0) {\n      // name was entered and has goal, but task incomplete\n      this._state = RetroC64Constants.AKALABETH_CASTLE_QUEST_INCOMPLETE;\n      this._stateChangeResolved = false;\n    } else {\n      if (data.task > -9 && data.task < 0) {\n        this._state = RetroC64Constants.AKALABETH_CASTLE_QUEST_COMPLETE;\n        this._stateChangeResolved = false;\n      } else if (data.task === -9) {\n        this._state = RetroC64Constants.AKALABETH_CASTLE_GAME_COMPLETE;\n        this._stateChangeResolved = false;\n      }\n    }\n  }\n} else {\n  // no name, state is name entry\n  this._state = RetroC64Constants.AKALABETH_CASTLE_NAME_ENTRY;\n  this._stateChangeResolved = false;\n}",
                                  "order": "1"
                                }
                              ],
                              "uid": "kvs5be5ik41x40mred8"
                            },
                            {
                              "title": "Move Cursor",
                              "order": 2,
                              "content": "A member to move the cursor has been added.",
                              "children": [],
                              "design": [
                                {
                                  "classUid": "kvs32yq1ss45w3709h",
                                  "tags": [
                                    "code",
                                    "public member"
                                  ],
                                  "memberName": "moveCursor",
                                  "memberDefinition": "/**\n * Moves the cursor to the right of a specific field.\n * @param {string} cursorId the cursor sprite's unique id\n * @param {string} offsetField the id of the field the cursor will be placed next to\n */",
                                  "arguments": "cursorId, offsetField",
                                  "code": "// get the offset field's right edge, plus 2 pixels\nlet x = (this._dynamicFields.getObject(offsetField)[0].x + this._dynamicFields.getObject(offsetField)[0].width + 2) / this._COLUMN_WIDTH;\n// subtract 1/2 unit\nx += -0.5;\n// get the offset field's y location, minus 1 pixel height\nlet y = (this._dynamicFields.getObject(offsetField)[0].y - 1) / this._ROW_HEIGHT;\n// move the y position based on the offset field's origin\ny -= this._dynamicFields.getObject(offsetField)[0].originY;\nthis._grid.placeAt(x, y, this._dynamicFields.getObject(cursorId)[0]);",
                                  "order": "2",
                                  "uid": "kvsbh6xaj4xmesxrt1"
                                }
                              ],
                              "uid": "kvsbh6x79xokt8wzphb"
                            }
                          ],
                          "design": [],
                          "uid": "kvs32yq2lb3q3mto0u"
                        }
                      ],
                      "design": [],
                      "uid": "kvs32yq0f863dfb58n"
                    }
                  ],
                  "design": [],
                  "uid": "kvs2zk1nhcblsnabp5"
                }
              ],
              "design": [],
              "uid": "kvs2zk1kfm7onsllmvu"
            },
            {
              "title": "The Game Over View",
              "order": 8,
              "content": "A view to handle the Game Over scene will be needed.",
              "children": [
                {
                  "title": "The Scene Container Class",
                  "order": 1,
                  "content": "A Scene Container class will need to be defined.  The Scene Container template will be used.",
                  "children": [],
                  "design": [
                    {
                      "classTitle": "Akalabeth Game Over Scene",
                      "classHandle": "AkalabethGameOverScene",
                      "fileHandle": "akalabeth-game-over-scene",
                      "tags": [
                        "class",
                        "scene-container"
                      ],
                      "classDefinition": "A view to handle the Game Over scene will be needed.",
                      "weight": "1",
                      "uid": "kvil0lbzzyhu0l4tudo",
                      "filePath": [
                        "scenes",
                        "akalabeth",
                        "game-over"
                      ]
                    }
                  ],
                  "uid": "kvil0lc0c4jwdonimrr"
                },
                {
                  "title": "File Imports",
                  "order": 2,
                  "content": "The Game class will include the Scene Container as a required import.\nThe Scene Container class will require the following imports:",
                  "requires design": true,
                  "children": [],
                  "design": [
                    {
                      "classUid": "AF89DG9sgahg9",
                      "importHandle": "RetroC64AkalabethGameOverScene",
                      "importPath": "./retroc64-akalabeth-game-over-scene",
                      "tags": [
                        "code",
                        "required import"
                      ],
                      "uid": "kvil0lc0cg0a96dmzcn"
                    }
                  ],
                  "uid": "kvil0lc0ojjetinqya"
                },
                {
                  "title": "Postboot Processing",
                  "order": 3,
                  "content": "The Scene Container class will need to be added to the Game class postboot processing.",
                  "requires design": true,
                  "children": [],
                  "design": [
                    {
                      "classUid": "AF89DG9sgahg9",
                      "tags": [
                        "code",
                        "postboot"
                      ],
                      "code": "_game.scene.queueOp(\"start\", \"AkalabethGameOverScene\");",
                      "order": "1",
                      "uid": "kvil0lc0ecyhd58uwe4"
                    }
                  ],
                  "uid": "kvil0lc15n4aa38p1pr"
                },
                {
                  "title": "Scene Key",
                  "order": 4,
                  "content": "The Scene Container class will need to be added to the scene groups in the Scene Controller class.",
                  "requires design": true,
                  "children": [],
                  "design": [
                    {
                      "classUid": "kuvp9k2j3kwh9rvfmqg",
                      "tags": [
                        "code",
                        "scene group"
                      ],
                      "sceneKey": "[RetroC64Constants.AKALABETH_GAME_OVER]",
                      "sceneValue": "\"AkalabethGameOverScene\"",
                      "order": "1",
                      "uid": "kvil0lc1k38hiw9vzp"
                    }
                  ],
                  "uid": "kvil0lc1jctbsgvlpy"
                },
                {
                  "title": "Scene states",
                  "order": 5,
                  "content": "A State Group will need to be added to the App Constants for this Scene Container",
                  "requires design": true,
                  "children": [],
                  "design": [
                    {
                      "tags": [
                        "scoped dictionary body 0",
                        "code"
                      ],
                      "uid": "kvjgmpze3olz7h4fko7",
                      "classUid": "kvil0lbzzyhu0l4tudo",
                      "dictionaryKey": "[RetroC64Constants.AKALABETH_GAME_OVER_MAIN]",
                      "dictionaryDefinition": "the scene instances displayed during the game over view",
                      "dictionaryValue": "[_akalabethGameOverInterface]"
                    },
                    {
                      "classUid": "kuvp9k2jit3fzra9nj9",
                      "groupName": "AKALABETH_GAME_OVER_STATES",
                      "tags": [
                        "code",
                        "group properties"
                      ],
                      "elements": [
                        {
                          "elementName": "AKALABETH_GAME_OVER_MAIN",
                          "elementValue": "0",
                          "elementDefinition": "The main state for the Game Over scene",
                          "order": 1
                        }
                      ],
                      "uid": "kvjjkxzzpg7pbr0vy4"
                    }
                  ],
                  "uid": "kvil0lc1tz140iojfv"
                },
                {
                  "title": "Scene Initial State",
                  "order": 6,
                  "content": "The Scene Container initial state is set in the 'create' method of the Scene Controller class. It will be set to the following state:",
                  "requires design": true,
                  "children": [],
                  "design": [
                    {
                      "tags": [
                        "create",
                        "code"
                      ],
                      "uid": "kvjjs448r2997pt7xpo",
                      "classUid": "kuvp9k2j3kwh9rvfmqg",
                      "code": "// set initial state for Game Over\n[app-handle]AkalabethGameOverScene.state = [app-handle]Constants.AKALABETH_GAME_OVER_MAIN;",
                      "order": "6"
                    }
                  ],
                  "uid": "kvil0lc13rsnya1bkd8"
                },
                {
                  "title": "Child Scenes",
                  "order": 7,
                  "content": "The Scene Container is just that: a container.  It will manage the following child scenes:",
                  "requires design": true,
                  "children": [
                    {
                      "title": "The Game Over Interface",
                      "order": 1,
                      "content": "The Game Over scene will have its own interface.",
                      "children": [
                        {
                          "title": "The UI Scene Class",
                          "order": 1,
                          "content": "A UI class will need to be defined.  The Ui Scene template will be used.",
                          "children": [],
                          "design": [
                            {
                              "classTitle": "Akalabeth Game Over Interface",
                              "classHandle": "AkalabethGameOverInterface",
                              "fileHandle": "akalabeth-game-over-interface",
                              "tags": [
                                "class",
                                "ui-scene"
                              ],
                              "classDefinition": "The Game Over scene will have its own interface.",
                              "weight": "0.5",
                              "uid": "kvjgf72ao6tj31fin2j",
                              "filePath": [
                                "scenes",
                                "akalabeth",
                                "game-over"
                              ],
                              "initialState": "AKALABETH_GAME_OVER_MAIN",
                              "gridWidth": "1",
                              "gridHeight": "24"
                            }
                          ],
                          "uid": "kvjgf72a0qvumadpwnoh"
                        },
                        {
                          "title": "File Imports",
                          "order": 2,
                          "content": "The UI class will require the following imports:\n* Scene Contoller\n* Parent Scene",
                          "children": [],
                          "design": [
                            {
                              "classUid": "kvjgf72ao6tj31fin2j",
                              "importHandle": "RetroC64SceneController",
                              "importPath": "../../../retroc64-scene-controller",
                              "tags": [
                                "code",
                                "required import"
                              ],
                              "uid": "kvjgf72bvkwdp1xa2m"
                            },
                            {
                              "classUid": "kvjgf72ao6tj31fin2j",
                              "importHandle": "RetroC64AkalabethGameOverScene",
                              "importPath": "./retroc64-akalabeth-game-over-scene",
                              "tags": [
                                "code",
                                "required import"
                              ],
                              "uid": "kvjgf72bpvefx3yi3io"
                            },
                            {
                              "classUid": "kvil0lbzzyhu0l4tudo",
                              "importHandle": "RetroC64AkalabethGameOverInterface",
                              "importPath": "./retroc64-akalabeth-game-over-interface",
                              "tags": [
                                "code",
                                "required import"
                              ],
                              "uid": "kvjgf72btmhl0r52m6h"
                            }
                          ],
                          "uid": "kvjgf72bezkbibmwew9"
                        },
                        {
                          "title": "Private Fields",
                          "order": 3,
                          "content": "The UI class will be added as a private member of its scene parent.\nThe Ui Scene will have the following private fields:",
                          "children": [],
                          "design": [
                            {
                              "classUid": "kvil0lbzzyhu0l4tudo",
                              "tags": [
                                "code",
                                "private field"
                              ],
                              "fieldName": "_akalabethGameOverInterface",
                              "fieldType": "UiScene",
                              "fieldValue": "new RetroC64AkalabethGameOverInterface({ scene: _scene, show: false })",
                              "fieldDefinition": "RetroC64AkalabethGameOverInterface instance",
                              "order": "10",
                              "uid": "kvjgf72bk05i3z5ptig"
                            }
                          ],
                          "uid": "kvjgf72bfpchair7u3u"
                        },
                        {
                          "title": "View Templates",
                          "order": 4,
                          "content": "The UI class will have defined templates for each view. These will be added to the Constructor Body. Templates have been defined for the following views:",
                          "requires design": true,
                          "children": [
                            {
                              "title": "Default View",
                              "order": 1,
                              "content": "There will be only one view.",
                              "children": [],
                              "design": [
                                {
                                  "classUid": "kvjgf72ao6tj31fin2j",
                                  "tags": [
                                    "code",
                                    "view template"
                                  ],
                                  "entryKey": "AKALABETH_GAME_OVER_MAIN",
                                  "code": "group: null,\nchildren: [\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"WE MOURN THE PASSING OF\", // text\n    ],\n    position: [0, 10],\n    origin: [0.5, 0.5],\n    tint: 10920447,\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"THE PEASANT AND HIS COMPUTER\", // text\n    ],\n    position: [0, 11],\n    origin: [0.5, 0.5],\n    tint: 10920447,\n    dynamicField: \"nameField\"\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"TO INVOKE A MIRACLE OF RESSURECTION\", // text\n    ],\n    position: [0, 12],\n    origin: [0.5, 0.5],\n    tint: 10920447,\n  },\n  {\n    type: \"bitmapText\",\n    args: [\n      0, // x\n      0, // y\n      \"c64_pro_style_16\", // font\n      \"<HIT ESC KEY>\", // text\n    ],\n    position: [0, 13],\n    origin: [0.5, 0.5],\n    tint: 10920447,\n  }\n]",
                                  "order": "1",
                                  "uid": "kvntpvigpfgkx0iob9"
                                }
                              ],
                              "uid": "kvntpvifm4os1kpm9r"
                            }
                          ],
                          "design": [],
                          "uid": "kvjgf72bnkff0ynusyq"
                        },
                        {
                          "title": "Key Listeners",
                          "order": 5,
                          "content": "The UI class will have key listeners for the following views:",
                          "requires design": true,
                          "children": [
                            {
                              "title": "Default Key Listener",
                              "order": 1,
                              "content": "There will be only one key listener.",
                              "children": [],
                              "design": [
                                {
                                  "tags": [
                                    "key listener handler",
                                    "code"
                                  ],
                                  "uid": "kvntrowtk5w6dszlaap",
                                  "classUid": "kvjgf72ao6tj31fin2j",
                                  "entryKey": "AKALABETH_GAME_OVER_MAIN",
                                  "code": "switch (event.key) {\n  case \"Escape\":\n    RetroC64AkalabethShopScene.callbackState = RetroC64Constants.AKALABETH_SETUP;\n    RetroC64AkalabethWorldMapScene.needsMapRedraw = true;\n    RetroC64AkalabethCastleScene.goalsStated = true;\n    RetroC64SceneController.gotoState({ state: RetroC64Constants.AKALABETH_CHARACTER_CREATION });\n    break;\n}",
                                  "order": "1"
                                }
                              ],
                              "uid": "kvntrowsn82omggy2k"
                            }
                          ],
                          "design": [],
                          "uid": "kvjgf72b0k6mnv6qqirp"
                        },
                        {
                          "title": "Updates to the 'create' methods",
                          "order": 6,
                          "content": "The UI class will have the following updates to the 'create' method:",
                          "children": [],
                          "design": [
                            {
                              "classUid": "kvjgf72ao6tj31fin2j",
                              "tags": [
                                "code",
                                "create"
                              ],
                              "code": "RetroC64AkalabethController.character.addWatcher(this);\nRetroC64AkalabethController.character.notifyWatchers();",
                              "order": "1",
                              "uid": "kvjh9vdq8anmqkdv02b"
                            }
                          ],
                          "uid": "kvjgf72buchutmbw34"
                        },
                        {
                          "title": "Scene start/reset",
                          "order": 7,
                          "content": "When the UI scene is started/reset, the following changes are applied for each view:",
                          "children": [],
                          "design": [],
                          "uid": "kvjgf72bmut5hzaie59"
                        },
                        {
                          "title": "Public Members",
                          "order": 8,
                          "content": "Occasionally, a UI Scene will need some further public members added.  This UI has added the following public members:",
                          "children": [
                            {
                              "title": "The Character Watcher",
                              "order": 1,
                              "content": "The UI will watch the character instance.",
                              "children": [],
                              "design": [
                                {
                                  "classUid": "kvjgf72ao6tj31fin2j",
                                  "tags": [
                                    "code",
                                    "public member"
                                  ],
                                  "memberName": "watchUpdated",
                                  "memberDefinition": "/**\n * Handles updates to a Watchable instance.\n * @param {Watchable} data the Watchable instance being updated\n */",
                                  "arguments": "data",
                                  "code": "// call base\nWatcher.prototype.watchUpdated.call(this, data);\n// update fields\nlet s = [\"A PEASANT\", \"AND HIS COMPUTER\"];\nif (data.name.length > 0) {\n  s[0] = data.name;\n}\nthis._dynamicFields.setText(\"nameField\", s.join(\" \"));",
                                  "order": "1",
                                  "uid": "kvjhe7y1g4zf9zp63hj"
                                }
                              ],
                              "uid": "kvjhe7y067kv1xl99oi"
                            }
                          ],
                          "design": [],
                          "uid": "kvjgf72bha31kubl8kl"
                        }
                      ],
                      "design": [],
                      "uid": "kvjgf72778qcbc0ty7w"
                    }
                  ],
                  "design": [],
                  "uid": "kvil0lc1iw3ks0e3an"
                }
              ],
              "design": [],
              "uid": "kvil0lbzvzp2rj0v0t"
            }
          ],
          "design": [],
          "uid": "kuwpxcfw66a25dcz9ke"
        }
      ],
      "design": [],
      "uid": "kuwpgu7ce8gquxzywq5"
    },
    {
      "title": "Wizardry",
      "order": 2,
      "content": "The implementation of the game Wizardry: Proving Grounds of the Mad Overlord using the provided source code.",
      "children": [],
      "design": [],
      "uid": "kuwphyuchv7mxg48gnf"
    },
    {
      "title": "Filler",
      "order": 9999,
      "content": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Nullam dapibus auctor leo, at lacinia odio porta vel. Duis dignissim eleifend nunc, a efficitur nisl euismod id. Donec suscipit iaculis sollicitudin. Vestibulum tempor lacinia lectus, egestas fermentum nisl. Vivamus efficitur ornare nunc commodo laoreet. Cras luctus pretium dignissim. Sed tincidunt felis sed risus lacinia consequat. Phasellus lobortis arcu eu magna lacinia, eget feugiat neque imperdiet. Pellentesque et diam ornare, rhoncus erat ac, sagittis risus. Duis interdum malesuada orci, nec porttitor orci ultrices vel. Duis ornare eleifend lorem, gravida facilisis metus.\n\nNam ut nunc mauris. Nunc ex nisl, mattis ac mauris porta, consequat bibendum arcu. Pellentesque ut augue dapibus, pulvinar neque sit amet, dapibus est. Sed quis lacinia ipsum, a laoreet nisl. Nulla facilisi. Etiam a eleifend felis. Vivamus vitae vehicula massa, a tempor ligula. Nam sit amet turpis nisl. Etiam tortor eros, commodo tincidunt congue interdum, ullamcorper id mi. Ut odio neque, aliquet faucibus sollicitudin porta, ultricies a mi.\n\nEtiam augue eros, pretium vitae imperdiet id, iaculis in eros. Cras quam nunc, ornare eget purus iaculis, facilisis iaculis dolor. Praesent malesuada nunc eget aliquam imperdiet. Mauris sed ipsum quis sem convallis blandit. Proin dictum auctor ligula, ut rutrum ante tincidunt eget. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Maecenas fermentum, ex nec vulputate maximus, lectus mi egestas lacus, et lacinia eros lectus vel nisi. Cras posuere pulvinar nunc quis ullamcorper. Nulla vel mattis nunc. Phasellus gravida hendrerit metus, a cursus enim pharetra vel. Nulla facilisi.\n\nFusce nisl massa, facilisis eu condimentum vel, posuere at tortor. Cras non dui nec neque aliquam fringilla. Cras ullamcorper maximus tellus, non interdum libero porta sit amet. Maecenas nec fringilla nibh. Nunc viverra pharetra tempus. Nullam commodo dignissim laoreet. Integer maximus laoreet quam eu suscipit. Integer gravida dictum ante vel fermentum.\n\nDonec eu leo a purus convallis tristique. Duis pulvinar quam a mollis molestie. Aenean cursus viverra tellus, ac interdum lacus elementum vitae. Ut laoreet pellentesque eros dictum tincidunt. Fusce pulvinar at urna nec accumsan. Nam vitae risus ante. In viverra mi nec luctus placerat. In sit amet dapibus felis, sed pharetra est. Ut ornare a nunc tempus imperdiet. Nam fermentum dignissim ornare. Sed tincidunt, risus quis vestibulum rutrum, nunc turpis sodales ligula, et condimentum tortor massa quis magna. Nulla non mauris sem. Morbi lectus augue, pretium a interdum a, euismod sit amet mauris.\n\nNulla elementum nisi a ex bibendum, at rutrum magna consequat. Nullam commodo euismod elit, id accumsan metus gravida condimentum. Nunc ultricies lectus id mattis tincidunt. In diam libero, venenatis eu urna in, sodales interdum neque. Nunc pretium velit mi, ac consequat lorem rutrum at. Quisque aliquet, odio a ornare maximus, nibh erat cursus lorem, et tincidunt quam nulla quis lectus. Nullam mollis dui id metus malesuada auctor. Mauris gravida, massa bibendum posuere tempus, velit augue hendrerit ligula, a congue massa orci at velit. Nullam vestibulum aliquet lacinia. Aenean faucibus, purus non consequat laoreet, quam neque elementum quam, vulputate gravida quam justo ac justo. Sed sodales enim tellus, quis dapibus augue lobortis at. Sed consequat magna tellus, ut venenatis massa luctus non. Mauris ac sodales risus. Maecenas congue sem nec massa maximus pellentesque at vel massa. Nullam sed enim feugiat, dictum purus id, consequat libero.\n\nNulla facilisi. Aliquam a ultrices nunc, eget feugiat magna. Nulla finibus vestibulum nibh ac mattis. Vestibulum ante ipsum primis in faucibus orci luctus et ultrices posuere cubilia curae; Morbi vitae massa sit amet urna viverra rhoncus sit amet porta nunc. Phasellus vel maximus tortor. Integer efficitur risus metus, ut ornare felis sollicitudin vel. Ut vitae erat at sem ullamcorper tristique vel eget elit. Nunc vehicula sit amet massa eu ultricies. Nulla eget mattis justo. Proin at interdum ex.\n\nPhasellus scelerisque tincidunt justo vitae consectetur. Maecenas id dictum nulla, quis pharetra nibh. Mauris eleifend at diam maximus rhoncus. Ut blandit dolor erat, at posuere sem vehicula vitae. Vivamus sit amet turpis vel eros vulputate semper quis sit amet augue. Donec varius est nulla, id tristique neque tempus ac. Nulla at tristique eros. Aenean id molestie mauris. Vivamus lobortis ultricies nibh, vitae tempus mi vehicula quis. Vestibulum vel gravida metus. Nullam ultricies ex tellus, nec imperdiet ex imperdiet sit amet.\n\nSuspendisse leo urna, dapibus eget maximus non, ultrices eget lacus. Vivamus non dui enim. Ut gravida pulvinar tristique. Suspendisse pretium sem massa, ut tempus neque facilisis id. Nullam interdum pulvinar pharetra. Cras at dolor semper, auctor ligula eu, ullamcorper eros. Ut vestibulum elementum lectus, non luctus risus. Nam vel tortor porta, porttitor ligula ac, dictum ex. Cras semper auctor massa, nec tincidunt nunc pulvinar in. Duis tempor, nibh in malesuada mollis, enim turpis consectetur mauris, et bibendum arcu tellus in orci.\n\nFusce aliquam orci quis auctor porta. Sed ultrices, massa id pharetra accumsan, leo erat ornare elit, ut iaculis ipsum metus vel ante. Quisque consectetur mollis felis ac condimentum. Aliquam pulvinar placerat dolor, sit amet lobortis lectus auctor non. Nullam vitae luctus metus. In eu dignissim mi. Mauris diam est, placerat nec volutpat id, dignissim a enim. Proin in velit ultrices, tristique sem sit amet, pulvinar neque. Ut vulputate sem dolor, vitae efficitur libero tincidunt non. Pellentesque aliquam varius tellus, et vulputate diam vestibulum eget. Nam volutpat neque sit amet tellus commodo egestas. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Phasellus non mattis mi. Nunc quam lacus, aliquet id posuere pretium, commodo sit amet massa. Duis at lectus laoreet, facilisis justo eget, mollis est. Sed tempor lectus quam, mollis sodales nisl lobortis vel.",
      "children": [],
      "design": [],
      "uid": "kuyt0677ro2f4qzz5wq"
    }
  ]
}